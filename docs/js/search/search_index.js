var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddPointDto.html",[0,0.179,1,2.346]],["body/classes/AddPointDto.html",[0,0.305,1,3.991,2,1.283,3,0.226,4,0.2,5,0.2,6,5.647,7,4.659,8,0.542,9,1.491,10,4.981,11,0.712,12,0.016,13,1.839,14,1.455,15,5.39,16,0.642,17,5.39,18,0.39,19,4.629,20,3.991,21,2.248,22,0.226,23,0.013,24,0.013]],["title/controllers/AppController.html",[25,1.601,26,2.72]],["body/controllers/AppController.html",[0,0.149,3,0.133,4,0.118,5,0.118,8,0.32,12,0.017,14,1.241,16,0.547,18,0.499,22,0.133,23,0.009,24,0.009,25,1.916,26,3.256,27,1.326,28,2.748,29,1.532,30,5.112,31,4.596,32,3.179,33,1.532,34,1.24,35,3.179,36,4.596,37,3.179,38,0.973,39,0.726,40,0.895,41,3.298,42,2.252,43,3.179,44,3.256,45,3.179,46,3.256,47,3.179,48,2.252,49,0.823,50,3.298,51,2.748,52,3.179,53,3.179,54,3.179,55,2.633,56,1.942,57,4.596,58,3.179,59,0.895,60,1.724,61,3.179,62,3.179,63,6.273,64,5.914,65,3.179,66,5.398,67,5.398,68,5.398,69,3.179,70,3.179,71,2.748,72,3.179,73,3.179,74,3.179,75,1.39,76,3.179,77,2.252,78,2.149,79,4.596,80,3.179,81,3.179,82,3.179,83,3.179,84,3.875,85,2.748,86,5.398,87,3.179,88,3.179,89,3.179,90,3.298,91,2.913,92,3.179,93,2.464,94,2.464,95,3.179,96,3.179,97,3.179,98,3.179,99,3.179,100,3.179,101,3.179,102,4.596,103,3.179,104,2.252,105,1.622,106,2.464,107,3.179,108,3.179,109,3.179,110,3.179,111,3.179,112,3.179,113,3.179]],["title/modules/AppModule.html",[114,1.397,115,2.72]],["body/modules/AppModule.html",[0,0.158,3,0.141,4,0.125,5,0.125,11,0.446,12,0.016,18,0.534,22,0.141,23,0.01,24,0.01,26,3.953,27,1.999,49,0.873,50,4.075,51,2.915,114,1.744,115,5.434,116,1.55,117,2.588,118,2.915,119,2.915,120,2.915,121,4.371,122,4.371,123,4.075,124,4.371,125,3.822,126,3.822,127,2.929,128,2.06,129,2.06,130,3.372,131,3.142,132,2.747,133,3.372,134,3.397,135,3.372,136,2.915,137,2.614,138,2.06,139,1.55,140,3.372,141,2.614,142,3.372,143,2.915,144,3.372,145,3.372,146,3.372,147,3.372,148,2.915,149,2.915,150,2.915,151,2.915,152,2.915,153,2.21,154,2.915,155,1.721,156,2.915,157,2.614,158,2.915,159,1.82,160,5.252,161,2.915,162,2.915,163,2.915,164,3.678,165,2.915,166,2.915,167,2.915,168,2.915,169,2.915,170,2.915,171,2.915,172,2.915,173,2.915,174,2.915,175,2.915,176,1.721,177,3.372,178,3.372,179,2.915,180,3.372]],["title/injectables/AppService.html",[50,2.346,181,1.226]],["body/injectables/AppService.html",[0,0.253,3,0.227,4,0.201,5,0.201,8,0.544,12,0.016,16,0.644,18,0.391,22,0.227,23,0.013,24,0.013,29,2.183,30,6.325,33,1.804,34,1.372,49,1.4,50,4,60,1.728,181,2.092,182,2.616,183,4.676,184,5.409,185,5.409,186,5.409]],["title/controllers/AuthController.html",[25,1.601,187,2.72]],["body/controllers/AuthController.html",[0,0.134,3,0.12,4,0.107,5,0.107,8,0.289,11,0.38,12,0.016,14,1.152,16,0.508,18,0.472,22,0.12,23,0.009,24,0.009,25,1.198,27,1.198,29,1.423,33,1.423,38,1.307,39,0.974,40,1.201,41,3.111,48,2.036,49,0.744,59,1.201,60,2.087,78,2.027,105,2.875,155,2.178,176,1.466,187,3.024,188,2.484,189,1.883,190,2.873,191,1.44,192,2.295,193,4.268,194,5.091,195,2.873,196,6.119,197,2.873,198,2.873,199,4.268,200,1.961,201,2.873,202,3.443,203,6.021,204,2.873,205,3.947,206,2.873,207,2.873,208,4.268,209,2.873,210,2.227,211,2.064,212,2.036,213,2.227,214,2.873,215,2.873,216,2.036,217,2.036,218,2.873,219,2.873,220,2.445,221,2.227,222,1.911,223,1.646,224,2.873,225,1.093,226,1.961,227,1.883,228,2.484,229,2.873,230,2.873,231,2.873,232,2.873,233,2.036,234,3.443,235,2.873,236,0.918,237,2.873,238,4.268,239,2.485,240,2.873,241,2.873,242,2.873,243,4.268,244,2.484,245,2.036,246,2.873,247,3.024,248,2.227,249,2.484,250,2.484,251,2.873,252,2.873,253,2.227,254,2.484,255,2.873,256,4.268,257,2.873,258,3.689,259,2.873,260,2.873,261,2.873,262,2.873,263,2.484,264,2.598,265,4.268,266,2.873,267,2.873,268,2.873,269,2.873,270,3.689,271,2.873,272,1.883,273,2.873,274,2.873,275,2.484,276,2.873,277,2.873,278,2.873,279,2.484,280,2.873,281,4.268,282,2.873,283,2.873,284,2.873]],["title/modules/AuthModule.html",[114,1.397,121,2.516]],["body/modules/AuthModule.html",[0,0.193,3,0.173,4,0.153,5,0.153,12,0.016,18,0.539,22,0.173,23,0.011,24,0.011,27,2.298,49,1.068,114,2.004,116,1.896,117,2.974,121,5.012,126,4.067,127,3.366,128,2.521,129,2.521,131,3.61,132,3.157,137,3.198,187,4.395,220,4.067,221,3.198,285,3.567,286,4.126,287,3.567,288,4.651,289,4.651,290,4.126,291,4.126,292,5.51,293,2.521,294,4.126,295,4.126,296,3.198,297,2.923,298,3.567,299,3.567,300,4.126,301,3.198,302,4.126,303,4.126,304,3.567,305,4.126,306,4.126,307,4.126]],["title/injectables/AuthService.html",[181,1.226,220,2.2]],["body/injectables/AuthService.html",[0,0.15,3,0.135,4,0.12,5,0.12,8,0.324,11,0.719,12,0.016,16,0.647,18,0.475,22,0.135,23,0.01,24,0.01,29,1.547,33,1.547,34,1.377,38,1.665,39,1.241,40,1.53,49,0.834,59,1.306,60,2.014,78,2.164,90,1.967,91,1.738,153,2.11,155,3.351,157,3.596,181,1.482,182,1.557,191,1.499,192,2.389,200,1.48,211,2.877,212,2.281,220,2.658,222,1.996,223,1.845,225,1.764,226,2.132,227,3.039,236,1.482,239,1.764,247,3.286,250,4.01,264,3.217,296,2.496,308,2.783,309,4.638,310,4.638,311,3.22,312,5.437,313,5.949,314,3.22,315,4.638,316,3.22,317,4.638,318,3.22,319,4.638,320,4.638,321,4.01,322,2.244,323,2.281,324,4.01,325,3.039,326,2.783,327,2.499,328,3.22,329,3.22,330,3.22,331,2.281,332,4.638,333,3.22,334,3.22,335,3.22,336,3.22,337,2.281,338,3.22,339,3.22,340,2.783,341,3.22,342,4.638,343,1.171,344,3.22,345,3.22,346,3.22,347,3.22]],["title/classes/BadCodeException.html",[0,0.179,44,2.72]],["body/classes/BadCodeException.html",[0,0.246,2,1.256,3,0.221,4,0.196,5,0.196,12,0.016,16,0.628,22,0.221,23,0.013,24,0.013,38,1.615,39,1.204,40,1.485,44,4.569,93,4.09,94,4.09,105,3.29,106,4.09,225,2.007,337,3.738,348,4.561,349,2.821,350,4.999,351,5.276,352,4.569,353,4.09,354,4.09,355,4.09,356,5.276,357,5.276,358,5.276,359,5.276,360,5.276]],["title/classes/BadResultException.html",[0,0.179,46,2.72]],["body/classes/BadResultException.html",[0,0.251,2,1.278,3,0.225,4,0.2,5,0.2,12,0.016,16,0.639,22,0.225,23,0.013,24,0.013,38,1.644,39,1.226,40,1.512,46,4.619,105,3.326,106,4.163,225,2.043,349,2.852,350,5.053,352,4.619,353,4.163,354,4.163,355,4.163,361,4.643,362,5.37,363,5.37,364,4.643,365,5.37,366,4.643]],["title/classes/BaseMigration1653035270972.html",[0,0.179,367,2.976]],["body/classes/BaseMigration1653035270972.html",[0,0.092,2,0.468,3,0.082,4,0.073,5,0.073,8,0.198,9,0.726,10,1.393,11,0.607,12,0.014,16,0.476,18,0.142,22,0.082,23,0.007,24,0.007,29,1.06,33,1.06,34,0.412,38,0.973,39,1.35,40,0.895,75,2.86,77,1.393,84,1.289,104,5.416,155,1.003,164,1.127,176,1.003,191,1.232,192,1.964,222,1.457,236,2.004,239,2.781,264,1.622,272,1.289,322,2.223,343,1.836,367,3.563,368,3.973,369,1.7,370,3.179,371,4.002,372,3.179,373,3.179,374,1.127,375,1.967,376,3.179,377,5.281,378,1.967,379,3.179,380,1.967,381,0.86,382,5.046,383,6.321,384,1.672,385,5.046,386,7.143,387,7.143,388,5.546,389,3.083,390,3.92,391,6.109,392,3.012,393,3.012,394,7.312,395,1.967,396,5.046,397,6.539,398,1.653,399,1.061,400,1.127,401,2.083,402,1.393,403,2.083,404,1.524,405,2.835,406,3.459,407,1.967,408,4.362,409,1.967,410,1.967,411,1.127,412,1.061,413,2.464,414,1.967,415,1.967,416,2.481,417,1.524,418,3.102,419,1.967,420,1.967,421,4.596,422,1.524,423,1.524,424,1.524,425,1.524,426,3.459,427,1.967,428,1.967,429,6.743,430,4.404,431,3.179,432,5.681,433,5.681,434,3.179,435,4.911,436,6.743,437,3.255,438,3.179,439,4.002,440,3.179,441,1.967,442,3.179,443,3.179,444,1.967,445,3.179,446,3.179,447,5.681,448,5.046]],["title/classes/ConnectInRoomUserDto.html",[0,0.179,449,2.346]],["body/classes/ConnectInRoomUserDto.html",[0,0.288,2,1.165,3,0.205,4,0.182,5,0.182,8,0.492,9,1.405,11,0.814,12,0.016,13,1.733,14,1.662,16,0.733,18,0.354,20,4.114,21,2.042,22,0.205,23,0.013,24,0.013,34,1.29,59,2.092,191,1.696,393,4.413,398,2.062,412,3.635,449,3.761,450,5.822,451,3.469,452,3.436,453,4.896,454,4.896]],["title/classes/CreateGuestUserDto.html",[0,0.179,455,2.346]],["body/classes/CreateGuestUserDto.html",[0,0.282,2,1.132,3,0.199,4,0.177,5,0.177,8,0.478,9,1.38,11,0.799,12,0.016,14,1.632,16,0.72,18,0.437,19,4.283,21,1.983,22,0.199,23,0.012,24,0.012,34,1.466,55,2.725,56,4.06,59,1.87,75,2.08,191,1.684,234,4.06,343,2.417,374,2.725,411,3.807,451,3.369,452,3.568,455,3.693,456,5.151,457,4.111,458,4.756,459,4.111]],["title/classes/CreateRoomDto.html",[0,0.179,460,2.346]],["body/classes/CreateRoomDto.html",[0,0.307,2,1.297,3,0.228,4,0.203,5,0.203,8,0.548,9,1.501,12,0.016,14,1.471,16,0.649,18,0.394,20,4.315,21,2.272,22,0.228,23,0.013,24,0.013,191,1.612,405,5.004,460,4.018,461,5.685,462,4.71,463,5.449]],["title/classes/CreateTeamDto.html",[0,0.179,464,2.516]],["body/classes/CreateTeamDto.html",[0,0.292,2,1.193,3,0.21,4,0.186,5,0.186,8,0.504,9,1.426,11,0.662,12,0.016,14,1.686,16,0.744,18,0.362,20,4.158,21,2.089,22,0.21,23,0.013,24,0.013,34,1.309,39,1.553,59,2.104,191,1.706,398,2.084,452,3.473,464,4.093,465,5.884,466,3.884,467,5.011,468,4.331]],["title/classes/CreateUserDto.html",[0,0.179,202,2.346]],["body/classes/CreateUserDto.html",[0,0.267,2,1.04,3,0.183,4,0.162,5,0.162,8,0.439,9,1.306,11,0.895,12,0.016,14,1.828,16,0.806,18,0.316,19,4.797,21,1.821,22,0.183,23,0.012,24,0.012,34,1.562,59,2.03,155,3.255,191,1.761,202,3.495,264,3.255,411,3.656,412,3.444,451,3.094,452,3.455,456,5.448,459,3.775,469,4.367,470,5.721,471,4.367,472,4.367,473,3.775,474,4.367,475,4.945,476,4.435]],["title/classes/EventGateway.html",[0,0.179,134,2.72]],["body/classes/EventGateway.html",[0,0.077,2,0.392,3,0.069,4,0.061,5,0.061,8,0.165,9,0.627,11,0.863,12,0.016,14,1.737,16,0.778,18,0.332,22,0.069,23,0.006,24,0.006,29,0.916,33,2.109,38,1.971,39,1.469,40,1.812,41,4.64,59,0.995,60,1.129,78,1.973,105,1.804,134,1.946,176,1.402,191,1.715,192,2.53,200,1.262,211,1.996,212,1.166,222,0.444,225,1.045,226,1.625,227,2.316,239,2,258,2.375,327,1.262,384,0.999,398,2.094,399,1.483,402,1.166,437,0.943,477,1.423,478,4.285,479,2.747,480,2.747,481,2.747,482,2.747,483,2.747,484,2.747,485,2.747,486,2.747,487,2.747,488,2.747,489,2.747,490,2.747,491,2.747,492,1.646,493,2.227,494,2.505,495,2.106,496,2.747,497,2.129,498,3.535,499,1.646,500,5.336,501,2.747,502,1.646,503,7.213,504,1.646,505,2.747,506,1.646,507,1.646,508,2.747,509,1.646,510,1.646,511,2.747,512,1.646,513,4.285,514,1.646,515,2.747,516,1.646,517,1.646,518,2.747,519,1.646,520,1.646,521,2.747,522,1.646,523,2.747,524,2.747,525,2.747,526,1.646,527,2.747,528,1.646,529,1.646,530,2.747,531,1.646,532,1.646,533,2.747,534,1.646,535,1.646,536,2.747,537,1.646,538,1.646,539,2.747,540,1.646,541,1.646,542,2.747,543,1.646,544,1.276,545,1.423,546,1.646,547,1.646,548,2.747,549,6.436,550,1.423,551,1.423,552,1.646,553,1.646,554,2.747,555,1.646,556,4.957,557,1.646,558,1.646,559,1.646,560,1.646,561,1.646,562,1.646,563,1.646,564,1.646,565,3.535,566,2.375,567,1.423,568,2.375,569,1.646,570,1.646,571,1.646,572,1.646,573,1.646,574,1.646,575,1.646,576,2.747,577,1.646,578,1.646,579,1.646,580,1.646,581,1.646,582,1.646,583,1.646,584,1.646,585,1.646,586,1.646,587,1.646,588,1.646,589,1.646,590,1.646,591,1.646,592,1.646,593,1.646,594,1.646]],["title/entities/Game.html",[416,2.072,595,1.764]],["body/entities/Game.html",[0,0.161,3,0.144,4,0.128,5,0.128,8,0.346,9,1.11,11,1.002,12,0.016,13,1.89,14,1.962,16,0.865,18,0.468,22,0.144,23,0.01,24,0.01,34,1.478,39,1.4,75,2.682,77,3.997,159,1.858,222,1.313,223,1.972,236,1.802,343,2.052,381,1.506,389,3.447,390,3.746,392,3.697,401,3.697,416,2.626,417,4.374,418,3.771,595,2.236,596,2.976,597,5.642,598,3.697,599,4.967,600,3.442,601,3.188,602,4.018,603,3.442,604,2.668,605,3.442,606,3.697,607,3.442,608,4.374,609,3.442,610,3.442,611,3.442,612,3.442,613,4.374,614,3.442,615,3.442,616,3.188,617,3.771,618,2.976,619,2.976,620,2.976,621,2.976]],["title/controllers/GameController.html",[25,1.601,622,2.72]],["body/controllers/GameController.html",[0,0.27,3,0.243,4,0.215,5,0.215,12,0.016,18,0.418,22,0.243,23,0.014,24,0.014,25,2.413,27,2.413,49,1.498,189,3.791,416,3.123,622,4.829,623,5.002,624,5.786]],["title/classes/GameDto.html",[0,0.179,625,2.72]],["body/classes/GameDto.html",[0,0.201,2,1.022,3,0.18,4,0.16,5,0.16,8,0.431,9,1.291,11,1.002,12,0.016,13,1.893,16,0.871,18,0.457,22,0.18,23,0.012,24,0.012,34,1.41,39,1.444,59,2.235,77,4.482,343,2.301,401,4.145,417,4.904,418,4.904,598,4.145,608,4.904,613,4.904,618,3.71,619,3.71,620,3.71,621,3.71,625,4.007,626,3.71,627,4.292,628,4.292,629,4.292,630,4.292,631,4.292,632,4.292,633,4.292]],["title/modules/GameModule.html",[114,1.397,122,2.516]],["body/modules/GameModule.html",[0,0.253,3,0.227,4,0.201,5,0.201,12,0.015,18,0.542,22,0.227,23,0.013,24,0.013,27,2.73,49,1.4,114,2.382,116,2.486,122,4.29,132,3.099,138,4,139,2.486,416,2.92,622,4.989,634,5.409,635,5.409,636,4.676,637,4.639,638,5.409,639,5.409,640,3.544]],["title/classes/GameRepository.html",[0,0.179,637,2.72]],["body/classes/GameRepository.html",[0,0.241,2,1.226,3,0.216,4,0.191,5,0.191,8,0.518,9,1.45,12,0.016,16,0.613,18,0.498,22,0.216,23,0.013,24,0.013,60,1.645,75,2.252,192,1.873,239,1.958,349,2.779,374,2.95,381,2.252,416,2.779,625,4.881,636,4.451,637,4.501,641,4.451,642,4.209,643,6.89,644,5.149,645,3.374,646,5.149,647,5.149,648,5.149]],["title/entities/HistoricGame.html",[595,1.764,649,2.516]],["body/entities/HistoricGame.html",[0,0.17,3,0.153,4,0.135,5,0.135,8,0.366,9,1.155,11,0.99,12,0.016,13,1.425,14,1.96,16,0.865,18,0.366,22,0.153,23,0.01,24,0.01,34,1.61,39,0.832,75,2.214,84,3.812,159,1.967,222,1.783,223,2.088,236,1.858,343,2.116,381,1.594,389,3.554,390,4.177,422,4.51,423,4.51,424,4.51,425,4.51,426,4.376,595,2.326,599,4.911,601,3.812,602,3.317,604,2.824,606,3.812,616,3.317,617,3.924,649,3.317,650,3.15,651,3.643,652,3.643,653,3.643,654,3.643,655,3.643,656,3.643,657,3.643,658,3.643,659,3.643]],["title/classes/HistoricGameDto.html",[0,0.179,660,2.976]],["body/classes/HistoricGameDto.html",[0,0.206,2,1.052,3,0.185,4,0.164,5,0.164,8,0.444,9,1.316,11,0.974,12,0.016,13,1.623,16,0.877,22,0.185,23,0.012,24,0.012,34,1.62,59,2.24,84,4.205,222,1.732,343,2.334,422,4.974,423,4.974,424,4.974,425,4.974,660,4.469,661,3.82,662,4.418,663,4.418,664,4.418,665,4.418,666,4.418,667,4.418,668,4.418]],["title/modules/HistoricGameModule.html",[114,1.397,669,2.976]],["body/modules/HistoricGameModule.html",[0,0.257,3,0.231,4,0.205,5,0.205,12,0.016,18,0.532,22,0.231,23,0.014,24,0.014,49,1.426,114,2.408,116,2.532,132,3.156,138,4.044,139,2.532,640,3.61,649,3.61,669,5.132,670,5.509,671,4.762,672,4.69,673,5.509,674,5.509]],["title/classes/HistoricGameRepository.html",[0,0.179,672,2.72]],["body/classes/HistoricGameRepository.html",[0,0.265,2,1.351,3,0.238,4,0.211,5,0.211,12,0.015,18,0.487,22,0.238,23,0.014,24,0.014,349,2.948,381,2.483,642,4.391,645,3.719,649,3.719,671,4.907,672,4.775,675,4.907,676,5.676]],["title/injectables/JwtAuthGuard.html",[181,1.226,677,2.976]],["body/injectables/JwtAuthGuard.html",[0,0.264,3,0.237,4,0.21,5,0.21,12,0.016,18,0.486,22,0.237,23,0.014,24,0.014,49,1.464,181,2.148,182,2.735,293,3.455,349,2.474,677,5.212,678,4.888,679,4.383,680,4.888,681,5.655]],["title/injectables/JwtStrategy.html",[181,1.226,288,2.516]],["body/injectables/JwtStrategy.html",[0,0.206,3,0.185,4,0.164,5,0.164,8,0.444,11,0.584,12,0.016,16,0.686,18,0.51,22,0.185,23,0.012,24,0.012,29,1.922,33,1.473,38,1.353,39,1.008,40,1.244,49,1.144,60,1.411,164,2.532,181,1.842,182,2.137,191,1.465,192,2.334,200,2.031,225,2.441,236,1.411,245,3.13,247,3.13,264,2.254,288,3.778,293,2.699,297,3.13,298,3.82,299,3.82,301,3.425,304,3.82,325,4.457,326,3.82,340,3.82,343,1.607,349,1.933,682,5.547,683,3.82,684,4.984,685,4.418,686,5.765,687,4.418,688,4.418,689,3.82,690,3.82,691,3.82,692,4.418,693,4.418,694,4.418,695,4.418,696,4.418,697,4.418,698,4.418]],["title/injectables/LocalAuthGuard.html",[181,1.226,217,2.72]],["body/injectables/LocalAuthGuard.html",[0,0.264,3,0.237,4,0.21,5,0.21,12,0.016,18,0.486,22,0.237,23,0.014,24,0.014,49,1.464,181,2.148,182,2.735,217,4.764,293,3.455,349,2.474,679,4.383,680,4.888,699,4.888,700,5.655]],["title/injectables/LocalStrategy.html",[181,1.226,289,2.516]],["body/injectables/LocalStrategy.html",[0,0.183,3,0.164,4,0.146,5,0.146,8,0.394,11,0.704,12,0.016,16,0.634,18,0.469,22,0.164,23,0.011,24,0.011,29,1.775,33,1.307,34,1.466,38,1.63,39,1.215,40,1.498,49,1.015,59,1.103,60,1.252,78,1.561,90,2.395,91,2.116,155,3.649,181,1.701,182,1.896,191,1.38,192,2.199,220,3.715,221,3.039,222,1.632,225,2.025,226,1.802,228,4.602,239,1.491,244,4.602,245,4.283,248,4.127,263,3.389,264,3.309,289,3.488,293,2.395,301,3.039,322,2.575,327,2.447,349,1.715,684,4.602,689,3.389,690,3.389,691,3.389,701,3.389,702,3.92,703,3.92,704,5.324,705,3.92,706,5.324,707,5.324,708,5.324,709,5.324,710,5.324,711,3.389,712,3.92,713,3.92,714,3.92,715,3.92]],["title/classes/NoPrintException.html",[0,0.179,42,2.72]],["body/classes/NoPrintException.html",[0,0.249,2,1.269,3,0.224,4,0.198,5,0.198,12,0.016,16,0.635,22,0.224,23,0.013,24,0.013,38,1.633,39,1.217,40,1.501,42,4.599,93,4.133,94,4.133,105,3.312,225,2.028,349,2.839,350,5.031,352,4.599,353,4.133,354,4.133,355,4.133,366,4.609,716,4.609,717,5.332,718,5.332,719,5.332]],["title/interfaces/PayloadInterface.html",[325,2.516,720,2.516]],["body/interfaces/PayloadInterface.html",[3,0.223,4,0.198,5,0.198,8,0.534,9,1.478,11,0.923,12,0.016,13,1.966,22,0.223,23,0.013,24,0.013,34,1.589,236,2.323,264,3.711,325,4.244,343,2.646,720,3.482,721,4.119,722,4.593]],["title/entities/Room.html",[398,1.175,595,1.764]],["body/entities/Room.html",[0,0.132,3,0.119,4,0.105,5,0.105,8,0.285,9,0.964,11,0.978,12,0.016,13,1.189,14,1.968,16,0.868,18,0.47,22,0.119,23,0.009,24,0.009,34,1.457,39,1.366,75,2.619,159,1.53,164,2.421,176,2.156,222,1.877,223,1.625,236,1.614,343,1.838,381,1.24,384,2.366,389,3.086,390,3.42,392,3.31,398,1.294,399,2.726,400,2.894,401,3.31,402,3.579,403,2.769,404,3.916,405,2.994,406,3.653,416,3.51,595,1.942,598,3.31,599,4.815,601,2.769,602,3.668,604,3.276,606,3.31,616,3.31,617,3.916,723,2.451,724,3.579,725,3.579,726,3.916,727,2.835,728,2.835,729,2.835,730,2.451,731,2.835,732,2.835,733,3.916,734,2.451,735,2.835,736,2.835,737,2.835,738,2.835,739,2.835,740,3.916,741,2.835,742,3.653,743,4.226,744,2.835,745,2.835,746,3.653,747,2.835,748,4.367,749,2.451,750,2.451,751,2.451,752,2.835,753,2.198,754,2.451]],["title/classes/RoomClass.html",[0,0.179,755,2.976]],["body/classes/RoomClass.html",[0,0.092,2,0.466,3,0.082,4,0.073,5,0.073,8,0.401,9,0.723,11,0.847,12,0.017,13,0.551,16,0.763,18,0.229,22,0.082,23,0.006,24,0.006,29,1.057,33,1.969,34,1.485,38,1.737,39,1.295,40,1.597,60,1.465,75,1.746,78,1.589,91,1.057,105,2.036,153,3.717,191,1.719,222,1.927,225,1.205,233,1.388,327,2.803,337,2.245,352,3.249,364,3.964,374,2.287,384,2.534,398,1.222,400,3.384,430,3.094,500,2.245,513,3.964,568,2.739,755,2.457,756,1.693,757,3.991,758,3.45,759,3.45,760,3.169,761,3.169,762,3.169,763,3.169,764,3.169,765,3.169,766,1.959,767,3.169,768,5.122,769,1.959,770,2.457,771,1.959,772,1.959,773,3.169,774,1.959,775,3.169,776,1.959,777,2.739,778,3.169,779,1.959,780,4.585,781,4.353,782,3.169,783,3.964,784,1.959,785,4.585,786,4.903,787,4.585,788,4.585,789,3.169,790,1.959,791,3.169,792,3.991,793,3.169,794,1.959,795,1.959,796,1.959,797,1.959,798,1.959,799,3.991,800,1.959,801,1.959,802,1.959,803,1.959,804,1.959,805,3.169,806,1.959,807,1.959,808,1.959,809,1.959,810,1.959,811,5.036,812,1.959,813,3.169,814,5.672,815,1.959,816,3.169,817,3.169,818,3.169,819,1.959,820,1.959,821,1.693,822,1.959,823,1.959,824,1.959,825,1.693,826,1.959,827,1.693,828,1.959,829,1.959,830,1.959,831,1.959,832,1.959,833,1.959]],["title/controllers/RoomController.html",[25,1.601,834,2.72]],["body/controllers/RoomController.html",[0,0.117,3,0.105,4,0.093,5,0.093,8,0.252,11,0.791,12,0.016,13,1.857,14,1.616,16,0.713,18,0.45,22,0.105,23,0.008,24,0.008,25,1.044,27,1.044,29,1.282,33,1.995,34,0.981,38,1.832,39,1.468,40,1.685,41,2.349,48,2.724,49,0.648,59,1.318,60,1.912,78,1.864,189,1.64,191,1.677,192,2.4,200,1.15,205,4.395,210,1.94,211,1.86,212,1.773,222,1.038,225,0.952,226,2.152,227,1.64,236,1.991,239,2.156,253,2.981,322,3.257,327,2.152,398,2.235,399,2.527,400,2.203,435,2.164,437,3.01,460,4.186,493,2.076,494,1.773,495,1.962,497,1.94,544,1.94,725,3.723,834,2.724,835,2.164,836,2.981,837,3.845,838,3.324,839,3.324,840,3.324,841,3.845,842,1.94,843,2.503,844,2.503,845,2.503,846,3.845,847,2.503,848,2.503,849,2.164,850,3.845,851,2.503,852,2.164,853,3.324,854,2.503,855,2.164,856,3.845,857,2.503,858,2.503,859,3.93,860,3.845,861,2.503,862,1.529,863,1.351,864,1.94,865,2.164,866,1.94,867,1.773,868,2.503,869,2.503,870,2.503,871,2.503,872,2.503,873,2.503,874,3.63,875,3.845,876,3.845,877,2.503,878,2.503,879,3.845,880,2.503,881,2.503,882,2.164,883,1.94,884,2.503,885,2.503,886,2.503,887,2.503]],["title/modules/RoomModule.html",[114,1.397,123,2.346]],["body/modules/RoomModule.html",[0,0.206,3,0.185,4,0.164,5,0.164,12,0.016,18,0.54,22,0.185,23,0.012,24,0.012,27,2.404,49,1.144,114,2.097,116,2.031,117,3.112,123,4.502,125,3.303,126,3.303,127,3.522,128,2.699,129,2.699,131,3.778,132,2.532,137,3.425,138,3.522,139,2.031,141,3.425,398,1.353,493,4.171,640,3.778,834,4.546,865,3.82,867,3.13,888,3.82,889,3.82,890,3.82,891,4.418,892,5.547,893,4.418,894,3.778,895,3.82,896,4.418]],["title/classes/RoomRepository.html",[0,0.179,894,2.516]],["body/classes/RoomRepository.html",[0,0.15,2,0.763,3,0.134,4,0.119,5,0.119,8,0.322,11,0.717,12,0.016,13,1.527,16,0.646,18,0.489,22,0.134,23,0.009,24,0.009,29,1.542,33,1.808,34,1.478,38,1.661,39,1.543,40,1.527,55,1.837,56,2.825,60,1.733,78,2.363,191,1.609,192,2.386,200,1.473,236,1.733,239,1.759,322,2.237,327,2.125,343,1.166,349,2.023,381,1.402,398,2.119,399,3.398,400,3.757,401,2.101,404,2.485,405,3.276,437,2.649,460,4.006,598,2.101,642,3.314,645,2.101,724,2.271,740,2.485,750,2.771,751,2.771,836,3.585,842,3.585,859,4.227,862,1.959,863,1.73,864,2.485,867,2.271,883,4.204,894,3.03,897,2.771,898,5.424,899,3.206,900,3.206,901,3.206,902,5.424,903,3.997,904,3.206,905,3.206,906,3.206,907,3.206,908,3.206,909,3.206,910,3.206,911,3.206,912,3.206,913,3.206,914,2.771,915,3.585,916,3.206,917,3.206,918,3.206,919,2.485]],["title/injectables/RoomService.html",[181,1.226,493,2.072]],["body/injectables/RoomService.html",[0,0.092,3,0.082,4,0.073,5,0.073,8,0.198,11,0.829,12,0.017,13,2.036,16,0.778,18,0.411,22,0.082,23,0.007,24,0.007,29,1.06,33,2.18,34,1.191,38,1.964,39,1.517,40,1.806,49,0.509,59,0.554,60,1.612,78,2.354,84,1.289,90,2.445,91,2.724,104,1.393,139,0.904,181,1.016,182,0.951,191,1.691,192,2.616,196,2.748,200,0.904,222,1.241,223,1.127,225,1.209,226,2.481,236,2.004,239,2.053,249,2.748,322,2.861,323,1.393,327,1.461,331,2.835,388,1.7,393,2.622,398,2.002,399,2.16,400,3.389,402,3.575,403,2.622,437,1.822,460,3.083,493,1.716,724,4.445,725,1.393,726,2.464,836,2.464,838,2.748,839,2.748,840,2.748,842,2.464,849,2.748,852,2.748,855,2.748,859,3.613,862,1.201,863,1.061,864,1.524,867,1.393,883,3.102,894,3.012,895,1.7,903,2.748,920,1.7,921,3.179,922,3.179,923,3.179,924,3.179,925,4.596,926,3.179,927,1.967,928,1.967,929,3.179,930,1.967,931,1.967,932,1.967,933,1.967,934,3.179,935,1.967,936,3.179,937,1.967,938,3.179,939,1.967,940,1.967,941,1.967,942,1.967,943,1.967,944,1.967,945,3.179,946,1.967,947,1.967,948,1.393,949,1.967,950,3.179,951,3.179,952,4.002,953,2.464,954,1.967,955,1.967,956,1.967,957,3.179,958,1.967,959,1.967,960,3.179,961,1.967,962,1.967,963,1.967,964,1.967,965,1.967,966,1.524,967,1.967,968,1.967,969,1.967,970,3.179,971,1.967]],["title/modules/SharedModule.html",[114,1.397,124,2.516]],["body/modules/SharedModule.html",[0,0.272,3,0.244,4,0.217,5,0.217,12,0.016,18,0.421,22,0.244,23,0.014,24,0.014,49,1.51,114,2.491,116,2.68,124,4.487,972,5.831]],["title/entities/Team.html",[384,1.397,595,1.764]],["body/entities/Team.html",[0,0.167,3,0.15,4,0.133,5,0.133,8,0.359,9,1.14,10,4.079,11,0.968,12,0.016,13,1.755,14,1.921,16,0.847,18,0.416,22,0.15,23,0.01,24,0.01,34,1.492,39,1.423,75,2.727,159,1.929,222,1.883,223,2.048,236,1.839,343,2.095,381,1.563,384,1.817,389,3.518,390,3.809,392,3.773,393,3.273,398,2.243,595,2.295,599,4.738,601,3.273,602,4.085,606,3.773,616,3.273,726,4.463,742,3.089,748,4.318,882,3.089,973,3.089,974,3.574,975,3.574,976,3.574,977,3.574,978,3.089,979,3.574,980,3.574,981,3.574,982,3.574,983,4.318,984,3.574,985,4.318,986,2.532]],["title/controllers/TeamController.html",[25,1.601,987,2.72]],["body/controllers/TeamController.html",[0,0.209,1,4.174,3,0.187,4,0.166,5,0.166,8,0.45,11,0.591,12,0.016,13,1.817,14,1.207,16,0.532,18,0.512,22,0.187,23,0.012,24,0.012,25,1.865,27,1.865,29,1.937,33,1.491,38,1.369,39,1.02,40,1.259,41,3.549,49,1.158,59,1.259,60,1.428,139,2.055,189,2.93,191,1.473,225,1.701,226,2.055,236,1.856,327,2.055,384,1.627,494,3.168,495,2.964,866,3.466,948,3.168,987,4.116,988,3.865,989,5.626,990,3.466,991,5.81,992,5.81,993,4.471,994,3.865,995,2.732,996,3.466,997,3.466,998,3.466,999,4.471,1000,3.865,1001,4.471,1002,4.471]],["title/modules/TeamModule.html",[114,1.397,125,2.2]],["body/modules/TeamModule.html",[0,0.221,3,0.199,4,0.176,5,0.176,12,0.016,18,0.533,22,0.199,23,0.012,24,0.012,27,2.516,49,1.227,114,2.194,116,2.179,117,3.256,125,4.292,127,3.685,128,2.896,129,2.896,131,3.953,132,2.716,138,3.685,139,2.179,384,1.724,495,3.982,640,3.953,987,4.701,994,4.098,995,3.685,996,3.675,1003,4.098,1004,4.098,1005,4.098,1006,4.741,1007,4.741,1008,3.675,1009,4.741]],["title/classes/TeamRepository.html",[0,0.179,995,2.346]],["body/classes/TeamRepository.html",[0,0.149,1,4.22,2,0.758,3,0.134,4,0.118,5,0.118,8,0.32,10,4.194,11,0.714,12,0.016,13,1.521,16,0.643,18,0.454,22,0.134,23,0.009,24,0.009,29,1.535,33,1.802,38,1.655,39,1.54,40,1.521,55,1.825,56,3.302,60,1.726,78,2.75,85,2.754,191,1.606,192,2.56,200,1.464,236,1.018,239,2.627,322,2.863,343,1.674,349,2.013,377,2.754,381,1.393,384,2.454,398,1.812,464,4.793,642,3.302,645,2.087,725,3.261,863,1.719,915,4.189,919,2.469,966,3.568,989,3.568,990,3.568,995,2.812,997,2.469,998,2.469,1008,2.469,1010,2.754,1011,4.603,1012,3.979,1013,3.186,1014,4.603,1015,3.186,1016,3.979,1017,3.186,1018,2.754,1019,2.469,1020,3.186,1021,3.186,1022,3.186,1023,3.186,1024,3.186,1025,3.186,1026,3.186,1027,3.186,1028,3.186,1029,3.186,1030,3.186,1031,3.186,1032,3.186,1033,3.186]],["title/injectables/TeamService.html",[181,1.226,495,1.959]],["body/injectables/TeamService.html",[0,0.17,1,4.369,3,0.153,4,0.135,5,0.135,8,0.366,11,0.831,12,0.016,13,1.925,16,0.748,18,0.494,22,0.153,23,0.01,24,0.01,29,1.688,33,1.94,38,1.925,39,1.435,40,1.77,49,0.943,59,1.026,60,1.858,78,1.45,90,2.226,91,1.967,139,1.674,181,1.617,182,1.762,191,1.657,192,2.116,225,1.926,226,1.674,236,2.11,239,1.386,322,3.041,323,2.581,331,2.581,384,2.116,464,4.119,495,2.583,863,1.967,948,2.581,989,3.924,990,3.924,995,3.841,996,2.824,997,2.824,998,2.824,1000,3.15,1008,2.824,1012,4.376,1016,4.376,1018,3.15,1019,2.824,1034,3.15,1035,5.062,1036,3.643,1037,3.643,1038,5.062,1039,3.643,1040,3.643,1041,5.062,1042,3.643,1043,3.643,1044,3.643,1045,3.643,1046,3.643,1047,3.643]],["title/classes/UpdateRoomModeDto.html",[0,0.179,859,2.346]],["body/classes/UpdateRoomModeDto.html",[0,0.298,2,1.234,3,0.217,4,0.193,5,0.193,8,0.521,9,1.456,11,0.685,12,0.016,14,1.399,16,0.617,18,0.461,21,2.162,22,0.217,23,0.013,24,0.013,59,1.945,191,1.577,398,1.953,399,3.73,452,3.526,733,5.357,749,4.482,859,3.898,1048,5.515,1049,4.482,1050,5.184]],["title/classes/UpdateUserPseudoDto.html",[0,0.179,1051,2.346]],["body/classes/UpdateUserPseudoDto.html",[0,0.301,2,1.256,3,0.221,4,0.196,5,0.196,8,0.53,9,1.472,11,0.697,12,0.016,14,1.424,16,0.628,18,0.381,21,2.2,22,0.221,23,0.013,24,0.013,34,1.352,59,1.96,191,1.59,222,1.741,412,3.759,452,3.554,1051,3.94,1052,4.569,1053,4.561,1054,5.276]],["title/classes/UpdateUserSocketDto.html",[0,0.179,1055,2.346]],["body/classes/UpdateUserSocketDto.html",[0,0.301,2,1.256,3,0.221,4,0.196,5,0.196,8,0.53,9,1.472,11,0.697,12,0.016,14,1.424,16,0.628,18,0.381,21,2.2,22,0.221,23,0.013,24,0.013,34,1.352,59,1.96,191,1.59,222,1.741,411,3.99,452,3.554,1052,4.569,1055,3.94,1056,4.561,1057,5.276]],["title/classes/UpdateUserTeamDto.html",[0,0.179,1058,2.72]],["body/classes/UpdateUserTeamDto.html",[0,0.301,2,1.256,3,0.221,4,0.196,5,0.196,8,0.53,9,1.472,11,0.697,12,0.016,13,1.815,14,1.424,16,0.628,18,0.381,20,4.255,21,2.2,22,0.221,23,0.013,24,0.013,59,1.96,191,1.59,222,1.741,413,5.399,466,4.09,468,4.561,1052,4.569,1058,4.569]],["title/entities/User.html",[222,1.036,595,1.764]],["body/entities/User.html",[0,0.143,3,0.128,4,0.114,5,0.114,8,0.307,9,1.019,11,0.968,12,0.016,13,1.257,14,1.937,16,0.854,18,0.381,22,0.128,23,0.009,24,0.009,34,1.548,39,1.019,75,2.701,155,2.693,159,1.649,176,3.612,222,1.205,236,1.686,264,2.693,272,3.458,343,1.92,381,1.337,384,2.575,389,3.224,390,3.546,392,3.458,393,2.926,398,2.167,403,2.926,408,2.641,411,3.024,412,2.848,413,3.461,595,2.052,599,4.701,601,2.926,602,3.804,606,3.458,616,3.458,730,2.641,734,3.86,753,2.368,754,5.018,978,3.86,985,4.562,986,2.165,1059,2.641,1060,3.055,1061,3.055,1062,3.055,1063,3.055,1064,3.055,1065,3.055,1066,3.055,1067,3.055,1068,3.055,1069,3.055,1070,3.055,1071,3.055,1072,3.055,1073,3.055,1074,3.055,1075,3.055]],["title/controllers/UserController.html",[25,1.601,1076,2.72]],["body/controllers/UserController.html",[0,0.088,3,0.079,4,0.07,5,0.07,8,0.189,11,0.737,12,0.017,13,1.902,14,1.506,16,0.664,18,0.467,22,0.079,23,0.006,24,0.006,25,0.785,27,0.785,29,1.023,33,1.86,34,0.814,38,1.708,39,1.273,40,1.57,41,3.014,48,1.334,49,1.005,59,1.093,60,1.922,78,1.546,105,0.96,164,1.079,176,0.96,189,1.233,191,1.628,192,2.458,200,2.267,205,3.011,210,1.459,211,1.484,216,2.174,222,1.96,225,0.716,226,1.785,227,1.233,233,2.174,234,2.373,236,2.32,239,2.012,253,1.459,254,1.627,322,1.484,327,2.968,384,2.116,398,2.012,412,1.656,437,2.826,449,3.675,455,2.736,493,1.656,494,1.334,495,1.566,497,1.459,500,2.174,544,1.459,545,1.627,567,1.627,724,1.334,777,2.652,825,1.627,853,2.652,862,2.373,863,1.016,866,1.459,874,2.378,953,1.459,1019,1.459,1051,3.675,1055,3.675,1058,3.952,1076,2.174,1077,1.627,1078,2.378,1079,4.479,1080,2.652,1081,3.068,1082,3.068,1083,3.068,1084,1.882,1085,3.068,1086,1.882,1087,4.479,1088,1.627,1089,1.882,1090,1.882,1091,2.378,1092,2.652,1093,2.378,1094,3.357,1095,1.882,1096,3.068,1097,1.882,1098,3.068,1099,1.627,1100,1.882,1101,1.882,1102,3.068,1103,1.882,1104,1.882,1105,3.068,1106,1.882,1107,1.882,1108,3.068,1109,1.882,1110,1.459,1111,1.459,1112,1.334,1113,1.627,1114,1.459,1115,1.882,1116,1.882,1117,1.882,1118,1.882,1119,1.882,1120,1.882,1121,1.882,1122,1.882,1123,1.882,1124,1.882,1125,1.882,1126,1.882,1127,1.882,1128,1.882,1129,1.882,1130,1.882,1131,1.627,1132,1.882,1133,1.882,1134,1.882,1135,1.882,1136,1.882,1137,1.627,1138,1.882,1139,1.882,1140,1.882,1141,1.882,1142,1.882,1143,1.882,1144,1.882,1145,1.882]],["title/classes/UserDto.html",[0,0.179,1146,2.72]],["body/classes/UserDto.html",[0,0.229,2,0.829,3,0.146,4,0.129,5,0.129,8,0.35,9,1.119,11,0.934,12,0.016,13,1.735,14,1.909,16,0.842,18,0.355,19,3.475,20,3.469,21,1.452,22,0.146,23,0.01,24,0.01,34,1.527,55,1.995,56,3.469,59,2.168,75,1.523,155,2.897,191,1.789,264,2.897,272,3.72,343,2.065,374,1.995,384,2.065,398,1.738,403,3.214,411,3.253,412,3.065,452,3.315,457,3.01,473,4.908,475,4.24,476,5.368,1146,3.475,1147,3.01,1148,3.482,1149,3.482,1150,5.678,1151,3.482,1152,3.482,1153,3.482,1154,4.905,1155,3.482,1156,3.482,1157,3.482,1158,3.482]],["title/interfaces/UserModel.html",[720,2.516,768,2.72]],["body/interfaces/UserModel.html",[3,0.22,4,0.195,5,0.195,8,0.527,9,1.465,11,0.918,12,0.016,22,0.22,23,0.013,24,0.013,34,1.632,40,2.037,153,4.742,384,2.633,720,3.433,721,4.061,768,4.549,781,6.256,1159,4.529]],["title/modules/UserModule.html",[114,1.397,126,2.2]],["body/modules/UserModule.html",[0,0.204,3,0.183,4,0.162,5,0.162,12,0.016,18,0.539,22,0.183,23,0.012,24,0.012,27,2.386,49,1.13,114,2.081,116,2.007,117,3.088,123,3.495,125,3.278,126,4.21,127,3.495,128,2.668,129,2.668,131,3.749,132,2.502,136,3.775,138,3.495,139,2.007,141,3.385,211,3.731,222,1.179,640,3.749,892,5.515,1076,4.52,1112,3.094,1113,3.775,1160,3.775,1161,3.775,1162,3.775,1163,4.367,1164,4.367,1165,3.749,1166,3.775,1167,4.367]],["title/classes/UserRepository.html",[0,0.179,1165,2.516]],["body/classes/UserRepository.html",[0,0.101,2,0.513,3,0.09,4,0.08,5,0.08,8,0.216,11,0.743,12,0.017,13,1.886,16,0.669,18,0.455,22,0.09,23,0.007,24,0.007,29,1.14,33,2.038,38,1.721,39,1.283,40,1.582,55,1.234,56,2.598,60,1.796,78,2.507,164,1.234,176,1.745,191,1.634,192,2.604,200,2.583,202,3.6,216,3.012,222,1.946,234,2.598,236,2.061,239,2.138,272,2.786,327,2.965,337,2.422,343,1.244,349,1.496,381,0.942,398,2.082,411,1.959,412,2.613,437,3.221,449,3.847,455,2.958,500,3.43,642,2.598,645,1.411,786,4.185,827,2.956,862,2.089,863,1.845,915,4.357,919,3.753,986,1.526,1051,3.847,1055,3.847,1078,2.65,1088,2.956,1091,2.65,1093,2.65,1094,3.676,1110,1.669,1111,1.669,1112,1.526,1114,1.669,1146,3.012,1165,2.24,1168,1.862,1169,4.185,1170,2.956,1171,2.956,1172,2.956,1173,2.956,1174,2.153,1175,4.842,1176,4.842,1177,3.419,1178,3.419,1179,3.419,1180,3.419,1181,3.419,1182,3.419,1183,2.153,1184,3.419,1185,2.153,1186,3.419,1187,3.419,1188,2.153,1189,2.956,1190,2.153,1191,2.956,1192,2.153,1193,2.153,1194,3.419]],["title/injectables/UserService.html",[181,1.226,211,1.857]],["body/injectables/UserService.html",[0,0.073,3,0.065,4,0.058,5,0.058,8,0.156,11,0.85,12,0.017,13,1.934,16,0.766,18,0.44,22,0.065,23,0.005,24,0.005,29,0.872,33,2.11,34,1.172,38,1.969,39,1.468,40,1.81,49,0.402,59,0.437,60,2.134,78,1.349,90,0.948,91,0.838,104,1.853,139,0.713,181,0.835,182,0.751,191,1.715,192,2.499,200,2.039,202,3.126,211,1.265,216,2.401,222,2.009,225,0.995,226,0.713,233,3.408,234,2.07,236,2.212,239,1.83,270,2.26,322,1.923,323,1.1,327,3.035,331,1.1,381,0.679,384,2.215,398,2.198,430,2.027,449,2.429,455,2.429,746,1.342,753,1.203,862,1.598,863,1.411,874,3.729,914,2.26,948,1.1,953,1.203,983,1.342,986,1.1,1051,3.284,1055,3.284,1078,2.027,1080,2.26,1091,2.027,1092,2.26,1093,2.027,1099,2.26,1110,1.203,1111,1.203,1112,1.1,1114,1.203,1131,3.836,1137,1.342,1165,2.605,1166,1.342,1169,2.26,1170,2.26,1171,2.26,1172,2.26,1173,2.26,1189,2.26,1191,2.26,1195,1.342,1196,2.615,1197,2.615,1198,2.615,1199,2.615,1200,2.615,1201,2.615,1202,1.552,1203,1.552,1204,2.615,1205,2.615,1206,1.552,1207,2.615,1208,1.552,1209,2.615,1210,4.438,1211,5.117,1212,1.552,1213,1.552,1214,2.615,1215,1.552,1216,2.615,1217,2.615,1218,1.552,1219,2.615,1220,1.552,1221,2.615,1222,2.615,1223,1.552,1224,2.615,1225,1.552,1226,2.615,1227,1.552,1228,2.26,1229,2.615,1230,1.552,1231,2.615,1232,1.552,1233,1.552,1234,2.615,1235,1.552,1236,1.552,1237,1.552,1238,1.552,1239,1.552,1240,2.615,1241,2.615,1242,1.552,1243,1.552,1244,1.552,1245,1.552,1246,1.552,1247,1.552,1248,1.552,1249,2.615,1250,1.552]],["title/coverage.html",[1251,4.068]],["body/coverage.html",[0,0.356,1,1.577,5,0.096,6,2.231,7,2.231,11,0.341,12,0.016,23,0.008,24,0.008,25,2.526,26,1.829,28,2.231,42,1.829,44,1.829,46,1.829,50,1.577,91,1.393,134,1.829,181,2.126,183,2.231,187,1.829,188,2.231,202,1.577,211,1.248,213,2.001,217,1.829,220,1.479,222,1.441,234,1.577,248,2.001,288,1.691,289,1.691,297,1.829,308,2.231,325,1.691,348,2.231,361,2.231,367,2.001,368,2.231,369,2.231,383,2.231,384,0.939,398,1.461,416,1.393,449,1.577,450,2.231,451,3.381,455,1.577,456,3.051,460,1.577,461,2.231,462,2.231,464,1.691,465,2.231,466,3.051,477,2.231,493,1.393,495,1.317,595,2.641,596,2.231,622,1.829,623,2.231,625,1.829,626,2.231,637,1.829,641,2.231,649,1.691,650,2.231,660,2.001,661,2.231,672,1.829,675,2.231,677,2.001,678,2.231,679,3.051,682,2.231,683,2.231,699,2.231,701,2.231,716,2.231,720,2.579,722,2.231,723,2.231,755,2.001,756,2.231,768,1.829,834,1.829,835,2.231,859,1.577,894,1.691,897,2.231,920,2.231,966,6.091,973,2.231,987,1.829,988,2.231,995,1.577,1010,2.231,1034,2.231,1048,2.231,1049,2.231,1051,1.577,1052,3.381,1053,2.231,1055,1.577,1056,2.231,1058,1.829,1059,2.231,1076,1.829,1077,2.231,1146,1.829,1147,2.231,1159,2.231,1165,1.691,1168,2.231,1195,2.231,1251,2.001,1252,2.581,1253,2.581,1254,2.581,1255,6.058,1256,7.086,1257,2.231,1258,2.231,1259,4.772,1260,7.001,1261,5.338,1262,2.581,1263,2.581,1264,2.581,1265,2.581,1266,3.936,1267,2.231,1268,2.581,1269,2.231,1270,2.231,1271,2.581,1272,2.581,1273,2.581,1274,2.581,1275,2.231,1276,2.231,1277,2.231,1278,2.001,1279,2.231,1280,2.581,1281,2.581,1282,2.581,1283,2.231,1284,2.231,1285,2.581,1286,2.581,1287,3.936,1288,2.231,1289,2.231,1290,2.581,1291,2.581,1292,2.581,1293,2.581,1294,2.581,1295,2.581,1296,2.581,1297,2.581]],["title/dependencies.html",[117,2.494,1298,2.768]],["body/dependencies.html",[0,0.277,12,0.016,21,1.928,23,0.012,24,0.012,49,1.197,55,2.649,71,3.997,117,2.495,139,2.125,143,3.997,245,4.646,247,3.276,293,2.825,296,3.584,324,3.997,550,3.997,551,5.132,711,3.997,1299,6.919,1300,4.623,1301,4.623,1302,4.623,1303,5.936,1304,4.623,1305,5.936,1306,4.623,1307,4.623,1308,4.623,1309,4.623,1310,4.623,1311,4.623,1312,4.623,1313,4.623,1314,4.623,1315,4.623,1316,4.623,1317,4.623,1318,4.623,1319,4.623,1320,4.623,1321,4.623,1322,4.623,1323,4.623,1324,4.623,1325,4.623,1326,4.623,1327,4.623,1328,4.623,1329,4.623,1330,4.623,1331,4.623,1332,4.623]],["title/miscellaneous/enumerations.html",[1333,1.956,1334,3.994]],["body/miscellaneous/enumerations.html",[8,0.492,12,0.016,23,0.013,24,0.013,105,3.141,191,1.405,226,2.829,374,4.443,598,4.034,608,4.772,613,4.772,733,4.772,740,4.772,758,5.322,759,5.322,783,5.322,1333,2.991,1334,4.232,1335,4.896,1336,4.896,1337,6.156,1338,4.896,1339,4.896,1340,4.896,1341,4.896,1342,4.896,1343,4.896,1344,4.896,1345,4.896,1346,6.156,1347,6.156,1348,6.156,1349,4.896,1350,4.896]],["title/miscellaneous/functions.html",[1333,1.956,1351,3.994]],["body/miscellaneous/functions.html",[8,0.605,12,0.014,23,0.014,24,0.014,1269,5.203,1270,6.366,1333,3.677,1351,5.203,1352,6.019]],["title/classes/getRoomsFilterDto.html",[0,0.179,1278,2.976]],["body/classes/getRoomsFilterDto.html",[0,0.303,2,1.265,3,0.223,4,0.198,5,0.198,8,0.534,9,1.478,11,0.702,12,0.016,14,1.434,16,0.633,18,0.384,21,2.216,22,0.223,23,0.013,24,0.013,34,1.357,40,1.823,400,4.003,452,3.305,476,5.02,1275,5.599,1276,5.599,1277,4.593,1278,5.02,1353,5.313,1354,5.313]],["title/index.html",[8,0.322,566,2.768,1355,3.202]],["body/index.html",[4,0.167,12,0.016,23,0.012,24,0.012,179,3.888,279,3.888,399,3.148,478,3.888,642,2.748,1228,3.888,1251,3.487,1356,4.498,1357,4.498,1358,5.832,1359,4.498,1360,4.498,1361,4.498,1362,4.498,1363,4.498,1364,3.888,1365,6.472,1366,4.498,1367,4.498,1368,4.498,1369,7.4,1370,4.498,1371,4.498,1372,4.498,1373,7.27,1374,4.498,1375,4.498,1376,4.498,1377,4.498,1378,4.498,1379,5.832,1380,5.832,1381,4.498,1382,4.498,1383,4.498,1384,5.832,1385,5.832,1386,4.498,1387,4.498,1388,4.498,1389,4.498,1390,4.498,1391,3.888,1392,4.498,1393,4.498,1394,4.498,1395,4.498,1396,4.498,1397,4.498,1398,4.498,1399,4.498,1400,3.888,1401,4.498,1402,4.498,1403,4.498,1404,4.498,1405,4.498,1406,4.498,1407,3.888]],["title/modules.html",[116,2.412]],["body/modules.html",[12,0.013,23,0.013,24,0.013,115,3.805,116,2.468,121,3.519,122,3.519,123,3.281,124,3.519,125,3.077,126,3.077,669,4.163,1391,6.465,1408,7.478,1409,7.478,1410,7.764,1411,7.019,1412,7.019]],["title/overview.html",[1413,4.537]],["body/overview.html",[2,0.948,12,0.016,23,0.011,24,0.011,27,1.661,50,3.723,115,5.503,116,1.83,117,2.905,118,3.443,119,3.443,120,3.443,121,4.947,122,3.993,123,4.292,124,3.993,125,4.025,126,4.115,127,3.288,128,2.433,129,2.433,159,2.15,182,1.927,211,3.474,220,3.492,285,3.443,287,3.443,288,3.993,289,3.993,493,3.876,495,3.665,721,3.088,821,3.443,888,3.443,889,3.443,890,3.443,1003,3.443,1004,3.443,1005,3.443,1160,3.443,1161,3.443,1162,3.443,1267,3.443,1279,3.443,1413,3.443,1414,3.983,1415,3.983,1416,3.983]],["title/properties.html",[9,1.054,1298,2.768]],["body/properties.html",[9,1.357,12,0.016,23,0.014,24,0.014,1364,5.141,1400,5.141,1407,5.141,1417,5.947,1418,5.947,1419,5.947]],["title/miscellaneous/variables.html",[770,3.581,1333,1.956]],["body/miscellaneous/variables.html",[8,0.446,11,0.849,12,0.016,23,0.012,24,0.012,34,0.929,60,1.416,75,2.811,148,3.831,149,3.831,150,3.831,151,3.831,152,3.831,153,2.904,154,3.831,155,3.279,156,3.831,157,3.435,158,3.831,159,2.392,160,5.886,161,3.831,162,3.831,163,3.831,164,3.309,165,3.831,166,3.831,167,3.831,168,3.831,169,3.831,170,3.831,171,3.831,172,3.831,173,3.831,174,3.831,175,3.831,176,2.947,192,1.612,213,4.477,239,1.686,275,3.831,297,4.092,321,3.831,374,3.682,770,3.435,1257,3.831,1258,4.993,1283,3.831,1284,4.993,1288,3.831,1289,4.993,1333,2.707,1420,4.432,1421,4.432,1422,4.432,1423,4.432,1424,4.432,1425,4.432,1426,4.432,1427,4.432,1428,4.432,1429,4.432,1430,4.432,1431,4.432]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getRoomsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":966,"title":{},"body":{"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1418,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":814,"title":{},"body":{"classes/RoomClass.html":{}}}],["1.0.0",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["10/16",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":821,"title":{},"body":{"classes/RoomClass.html":{},"overview.html":{}}}],["2/4",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1279,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["3.0.2",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["3.10.1",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["36000s",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1415,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1267,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["6.1.1",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["6.2.12",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1414,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1416,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["__getrandomint",{"_index":921,"title":{},"body":{"injectables/RoomService.html":{}}}],["__getrandomint(max",{"_index":930,"title":{},"body":{"injectables/RoomService.html":{}}}],["_authservice",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["_jwtservice",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["_roomrepository",{"_index":929,"title":{},"body":{"injectables/RoomService.html":{}}}],["_roomservice",{"_index":497,"title":{},"body":{"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["_teamrepository",{"_index":1038,"title":{},"body":{"injectables/TeamService.html":{}}}],["_teamservice",{"_index":494,"title":{},"body":{"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{}}}],["_userrepository",{"_index":1204,"title":{},"body":{"injectables/UserService.html":{}}}],["_userservice",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["abcdefghijklmnopqrstuvwxyz",{"_index":969,"title":{},"body":{"injectables/RoomService.html":{}}}],["access",{"_index":401,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"entities/Room.html":{},"classes/RoomRepository.html":{}}}],["access_token",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessenum",{"_index":598,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{},"entities/Room.html":{},"classes/RoomRepository.html":{},"miscellaneous/enumerations.html":{}}}],["accessenum.private",{"_index":916,"title":{},"body":{"classes/RoomRepository.html":{}}}],["action",{"_index":436,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["add",{"_index":430,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/RoomClass.html":{},"injectables/UserService.html":{}}}],["addpoint",{"_index":989,"title":{},"body":{"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["addpoint(@param('id",{"_index":1001,"title":{},"body":{"controllers/TeamController.html":{}}}],["addpoint(id",{"_index":990,"title":{},"body":{"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["addpointdto",{"_index":1,"title":{"classes/AddPointDto.html":{}},"body":{"classes/AddPointDto.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["addusertoteam",{"_index":760,"title":{},"body":{"classes/RoomClass.html":{}}}],["addusertoteam(user",{"_index":773,"title":{},"body":{"classes/RoomClass.html":{}}}],["alphabet",{"_index":968,"title":{},"body":{"injectables/RoomService.html":{}}}],["already",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"classes/EventGateway.html":{}}}],["amazing",{"_index":1392,"title":{},"body":{"index.html":{}}}],["app",{"_index":1371,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":26,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1363,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":115,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":50,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"classes/GameRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":679,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":187,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":680,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":681,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":700,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":121,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1400,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":220,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1412,"title":{},"body":{"modules.html":{}}}],["await",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"classes/GameRepository.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":1393,"title":{},"body":{"index.html":{}}}],["badcodeexception",{"_index":44,"title":{"classes/BadCodeException.html":{}},"body":{"controllers/AppController.html":{},"classes/BadCodeException.html":{},"coverage.html":{}}}],["badresultexception",{"_index":46,"title":{"classes/BadResultException.html":{}},"body":{"controllers/AppController.html":{},"classes/BadResultException.html":{},"coverage.html":{}}}],["basemigration.ts",{"_index":369,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"coverage.html":{}}}],["basemigration.ts:21",{"_index":378,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["basemigration.ts:4",{"_index":375,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["basemigration.ts:6",{"_index":380,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["basemigration1653035270972",{"_index":367,"title":{"classes/BaseMigration1653035270972.html":{}},"body":{"classes/BaseMigration1653035270972.html":{},"coverage.html":{}}}],["bcrypt",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{}}}],["body.code",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["body.email",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.expectedcode.foreach(code",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["body.expectedresult",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["body.password",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.position",{"_index":584,"title":{},"body":{"classes/EventGateway.html":{}}}],["body.user",{"_index":582,"title":{},"body":{"classes/EventGateway.html":{}}}],["boolean",{"_index":403,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Room.html":{},"injectables/RoomService.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["bootstrap",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["browse",{"_index":1410,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1408,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1359,"title":{},"body":{"index.html":{}}}],["c'est",{"_index":363,"title":{},"body":{"classes/BadResultException.html":{}}}],["call",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["case",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["catch",{"_index":1029,"title":{},"body":{"classes/TeamRepository.html":{}}}],["catch(err",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["celui",{"_index":359,"title":{},"body":{"classes/BadCodeException.html":{}}}],["cette",{"_index":825,"title":{},"body":{"classes/RoomClass.html":{},"controllers/UserController.html":{}}}],["changehasstarted",{"_index":922,"title":{},"body":{"injectables/RoomService.html":{}}}],["changehasstarted(room_id",{"_index":934,"title":{},"body":{"injectables/RoomService.html":{}}}],["changeowner",{"_index":923,"title":{},"body":{"injectables/RoomService.html":{}}}],["changeowner(room_id",{"_index":936,"title":{},"body":{"injectables/RoomService.html":{}}}],["changeownerrandom",{"_index":924,"title":{},"body":{"injectables/RoomService.html":{}}}],["changeownerrandom(room_id",{"_index":938,"title":{},"body":{"injectables/RoomService.html":{}}}],["changeroommode",{"_index":479,"title":{},"body":{"classes/EventGateway.html":{}}}],["changeroommode(@connectedsocket",{"_index":560,"title":{},"body":{"classes/EventGateway.html":{}}}],["changeroommode(client",{"_index":499,"title":{},"body":{"classes/EventGateway.html":{}}}],["character",{"_index":386,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["check",{"_index":565,"title":{},"body":{"classes/EventGateway.html":{}}}],["child_process",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["class",{"_index":0,"title":{"classes/AddPointDto.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"classes/GameDto.html":{},"classes/GameRepository.html":{},"classes/HistoricGameDto.html":{},"classes/HistoricGameRepository.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"classes/getRoomsFilterDto.html":{}},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"classes/getRoomsFilterDto.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddPointDto.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"classes/GameDto.html":{},"classes/GameRepository.html":{},"classes/HistoricGameDto.html":{},"classes/HistoricGameRepository.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"classes/getRoomsFilterDto.html":{},"overview.html":{}}}],["cli",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":503,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.broadcast.to(body.pin).emit('usercursorchange",{"_index":581,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.broadcast.to(body.pin).emit('userjoinsroom",{"_index":559,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.broadcast.to(body.pin).emit('usersendpseudo",{"_index":557,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.join(body.pin",{"_index":554,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.to(body.pin).emit('newtextdelete",{"_index":588,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.to(body.pin).emit('newtextinsert",{"_index":586,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.to(body.pin).emit('ontab",{"_index":590,"title":{},"body":{"classes/EventGateway.html":{}}}],["client.to(body.pin).emit('opponentsuccess",{"_index":594,"title":{},"body":{"classes/EventGateway.html":{}}}],["cluster_appmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_roommodule",{"_index":888,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roommodule_exports",{"_index":890,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_roommodule_providers",{"_index":889,"title":{},"body":{"modules/RoomModule.html":{},"overview.html":{}}}],["cluster_teammodule",{"_index":1003,"title":{},"body":{"modules/TeamModule.html":{},"overview.html":{}}}],["cluster_teammodule_exports",{"_index":1004,"title":{},"body":{"modules/TeamModule.html":{},"overview.html":{}}}],["cluster_teammodule_providers",{"_index":1005,"title":{},"body":{"modules/TeamModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1160,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1161,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1162,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":356,"title":{},"body":{"classes/BadCodeException.html":{}}}],["column",{"_index":599,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["column({default",{"_index":730,"title":{},"body":{"entities/Room.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":734,"title":{},"body":{"entities/Room.html":{},"entities/User.html":{}}}],["column({type",{"_index":601,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["column({unique",{"_index":1061,"title":{},"body":{"entities/User.html":{}}}],["commenc",{"_index":1129,"title":{},"body":{"controllers/UserController.html":{}}}],["compare",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["compared",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":777,"title":{},"body":{"classes/RoomClass.html":{},"controllers/UserController.html":{}}}],["connect(@param('id",{"_index":1125,"title":{},"body":{"controllers/UserController.html":{}}}],["connect(id",{"_index":1084,"title":{},"body":{"controllers/UserController.html":{}}}],["connected",{"_index":780,"title":{},"body":{"classes/RoomClass.html":{}}}],["connectedsocket",{"_index":546,"title":{},"body":{"classes/EventGateway.html":{}}}],["connectedusers",{"_index":757,"title":{},"body":{"classes/RoomClass.html":{}}}],["connectinroomuserdto",{"_index":449,"title":{"classes/ConnectInRoomUserDto.html":{}},"body":{"classes/ConnectInRoomUserDto.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["connection",{"_index":1179,"title":{},"body":{"classes/UserRepository.html":{}}}],["connects",{"_index":1091,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["connectuser",{"_index":761,"title":{},"body":{"classes/RoomClass.html":{}}}],["connectuser(user",{"_index":775,"title":{},"body":{"classes/RoomClass.html":{}}}],["console.log",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["constant",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constant.ts",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constant/jwt",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constraint",{"_index":394,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["constructor",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(_authservice",{"_index":702,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(_roomrepository",{"_index":927,"title":{},"body":{"injectables/RoomService.html":{}}}],["constructor(_roomservice",{"_index":492,"title":{},"body":{"classes/EventGateway.html":{}}}],["constructor(_teamrepository",{"_index":1036,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(_userrepository",{"_index":1202,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(_userservice",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(message",{"_index":350,"title":{},"body":{"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/NoPrintException.html":{}}}],["constructor(pin",{"_index":766,"title":{},"body":{"classes/RoomClass.html":{}}}],["constructor(private",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["controller",{"_index":25,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/RoomController.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/RoomController.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('game",{"_index":624,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('room",{"_index":868,"title":{},"body":{"controllers/RoomController.html":{}}}],["controller('team",{"_index":999,"title":{},"body":{"controllers/TeamController.html":{}}}],["controller('user",{"_index":1115,"title":{},"body":{"controllers/UserController.html":{}}}],["controller/auth.controller",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/game.controller",{"_index":635,"title":{},"body":{"modules/GameModule.html":{}}}],["controller/room.controller",{"_index":893,"title":{},"body":{"modules/RoomModule.html":{}}}],["controller/team.controller",{"_index":1007,"title":{},"body":{"modules/TeamModule.html":{}}}],["controller/user.controller",{"_index":1164,"title":{},"body":{"modules/UserModule.html":{}}}],["controllers",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correspond",{"_index":358,"title":{},"body":{"classes/BadCodeException.html":{}}}],["cors",{"_index":552,"title":{},"body":{"classes/EventGateway.html":{}}}],["coverage",{"_index":1251,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":874,"title":{},"body":{"controllers/RoomController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["created",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["created_at",{"_index":389,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["creategame",{"_index":643,"title":{},"body":{"classes/GameRepository.html":{}}}],["createguestuser",{"_index":1078,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["createguestuser(@body",{"_index":1119,"title":{},"body":{"controllers/UserController.html":{}}}],["createguestuser(userguest",{"_index":1205,"title":{},"body":{"injectables/UserService.html":{}}}],["createguestuser(userguestdto",{"_index":1088,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{}}}],["createguestuserdto",{"_index":455,"title":{"classes/CreateGuestUserDto.html":{}},"body":{"classes/CreateGuestUserDto.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createquerybuilder",{"_index":905,"title":{},"body":{"classes/RoomRepository.html":{}}}],["createquerybuilder('room",{"_index":907,"title":{},"body":{"classes/RoomRepository.html":{}}}],["createroom",{"_index":836,"title":{},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{}}}],["createroom(@body",{"_index":873,"title":{},"body":{"controllers/RoomController.html":{}}}],["createroom(createroomdto",{"_index":842,"title":{},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{}}}],["createroomdto",{"_index":460,"title":{"classes/CreateRoomDto.html":{}},"body":{"classes/CreateRoomDto.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"coverage.html":{}}}],["createroomwithteams",{"_index":837,"title":{},"body":{"controllers/RoomController.html":{}}}],["createroomwithteams(@body",{"_index":877,"title":{},"body":{"controllers/RoomController.html":{}}}],["createroomwithteams(createroomdto",{"_index":845,"title":{},"body":{"controllers/RoomController.html":{}}}],["createteam",{"_index":1011,"title":{},"body":{"classes/TeamRepository.html":{}}}],["createteam(createteamdto",{"_index":1014,"title":{},"body":{"classes/TeamRepository.html":{}}}],["createteamdto",{"_index":464,"title":{"classes/CreateTeamDto.html":{}},"body":{"classes/CreateTeamDto.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["createteamdtolist",{"_index":1018,"title":{},"body":{"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["createteamdtolist.foreach(async",{"_index":1025,"title":{},"body":{"classes/TeamRepository.html":{}}}],["createteams",{"_index":1012,"title":{},"body":{"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["createteams(createteamdtolist",{"_index":1016,"title":{},"body":{"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["createuser",{"_index":1169,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["createuser(createuser",{"_index":1182,"title":{},"body":{"classes/UserRepository.html":{}}}],["createuser(user",{"_index":1207,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":202,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creator",{"_index":597,"title":{},"body":{"entities/Game.html":{}}}],["creator_id",{"_index":418,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"classes/GameDto.html":{}}}],["création",{"_index":1175,"title":{},"body":{"classes/UserRepository.html":{}}}],["current_timestamp",{"_index":602,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["d'afficher",{"_index":719,"title":{},"body":{"classes/NoPrintException.html":{}}}],["d'un",{"_index":1176,"title":{},"body":{"classes/UserRepository.html":{}}}],["d'une",{"_index":787,"title":{},"body":{"classes/RoomClass.html":{}}}],["dans",{"_index":824,"title":{},"body":{"classes/RoomClass.html":{}}}],["data",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["database",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/RoomClass.html":{},"classes/UserRepository.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/getRoomsFilterDto.html":{}}}],["default",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseMigration1653035270972.html":{},"classes/CreateGuestUserDto.html":{},"entities/Game.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"entities/Team.html":{},"entities/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{}}}],["delete",{"_index":435,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"controllers/RoomController.html":{}}}],["delete('/:id",{"_index":850,"title":{},"body":{"controllers/RoomController.html":{}}}],["deleteroom",{"_index":838,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["deleteroom(@param('id",{"_index":886,"title":{},"body":{"controllers/RoomController.html":{}}}],["deleteroom(id",{"_index":849,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["dependencies",{"_index":117,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1364,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":1372,"title":{},"body":{"index.html":{}}}],["dirait",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["directly",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["disconnect",{"_index":1079,"title":{},"body":{"controllers/UserController.html":{}}}],["disconnect(@param('id",{"_index":1135,"title":{},"body":{"controllers/UserController.html":{}}}],["disconnect(id",{"_index":1095,"title":{},"body":{"controllers/UserController.html":{}}}],["disconnects",{"_index":1098,"title":{},"body":{"controllers/UserController.html":{}}}],["documentation",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["dotenv",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":372,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["down(queryrunner",{"_index":376,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["drop",{"_index":447,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["dto/add",{"_index":997,"title":{},"body":{"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["dto/connect",{"_index":1114,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["dto/create",{"_index":863,"title":{},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":862,"title":{},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["déj",{"_index":1128,"title":{},"body":{"controllers/UserController.html":{}}}],["départ",{"_index":360,"title":{},"body":{"classes/BadCodeException.html":{}}}],["e2e",{"_index":1381,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1360,"title":{},"body":{"index.html":{}}}],["email",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/PayloadInterface.html":{},"entities/User.html":{},"classes/UserDto.html":{}}}],["empty",{"_index":576,"title":{},"body":{"classes/EventGateway.html":{}}}],["entier",{"_index":1186,"title":{},"body":{"classes/UserRepository.html":{}}}],["entities",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":595,"title":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.js",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["entity.ts",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["entity/game.dto",{"_index":646,"title":{},"body":{"classes/GameRepository.html":{}}}],["entity/game.entity",{"_index":636,"title":{},"body":{"modules/GameModule.html":{},"classes/GameRepository.html":{}}}],["entity/historic_game.entity",{"_index":671,"title":{},"body":{"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{}}}],["entity/room.entity",{"_index":867,"title":{},"body":{"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{}}}],["entity/team.entity",{"_index":1008,"title":{},"body":{"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["entity/user.entity",{"_index":1112,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["entityrepository",{"_index":645,"title":{},"body":{"classes/GameRepository.html":{},"classes/HistoricGameRepository.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(game",{"_index":647,"title":{},"body":{"classes/GameRepository.html":{}}}],["entityrepository(historicgame",{"_index":676,"title":{},"body":{"classes/HistoricGameRepository.html":{}}}],["entityrepository(room",{"_index":906,"title":{},"body":{"classes/RoomRepository.html":{}}}],["entityrepository(team",{"_index":1020,"title":{},"body":{"classes/TeamRepository.html":{}}}],["entityrepository(user",{"_index":1193,"title":{},"body":{"classes/UserRepository.html":{}}}],["enum/game",{"_index":618,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{}}}],["enum/language.enum",{"_index":621,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{}}}],["enumerations",{"_index":1334,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/access.enum",{"_index":750,"title":{},"body":{"entities/Room.html":{},"classes/RoomRepository.html":{}}}],["enums/mode.enum",{"_index":749,"title":{},"body":{"entities/Room.html":{},"classes/UpdateRoomModeDto.html":{}}}],["enums/status.enum",{"_index":751,"title":{},"body":{"entities/Room.html":{},"classes/RoomRepository.html":{}}}],["enums/team.enum",{"_index":796,"title":{},"body":{"classes/RoomClass.html":{}}}],["err",{"_index":1030,"title":{},"body":{"classes/TeamRepository.html":{}}}],["err.message",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["err.stderr",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["err.stderr.tostring",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["erreur",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["error",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/EventGateway.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["eventgateway",{"_index":134,"title":{"classes/EventGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/EventGateway.html":{},"coverage.html":{}}}],["exceptions/badcodeexception",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["exceptions/badresultexception",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["exceptions/noprintexception",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["execsync",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["execsync(`${executable",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["executable",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["exercice",{"_index":524,"title":{},"body":{"classes/EventGateway.html":{}}}],["expiresin",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":22,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{}}}],["exports",{"_index":640,"title":{},"body":{"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":349,"title":{},"body":{"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/GameRepository.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserRepository.html":{}}}],["extension",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["extractjwt",{"_index":688,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":693,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseMigration1653035270972.html":{},"injectables/JwtStrategy.html":{},"entities/Room.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["fields",{"_index":712,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/getRoomsFilterDto.html":{}}}],["filename",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["filepath",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["filepath}`).tostring",{"_index":88,"title":{},"body":{"controllers/AppController.html":{}}}],["filter.dto.ts",{"_index":1277,"title":{},"body":{"coverage.html":{},"classes/getRoomsFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":1354,"title":{},"body":{"classes/getRoomsFilterDto.html":{}}}],["finally",{"_index":1032,"title":{},"body":{"classes/TeamRepository.html":{}}}],["findoneoptions",{"_index":1211,"title":{},"body":{"injectables/UserService.html":{}}}],["finished_at",{"_index":425,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{}}}],["fk_155dbc144ff2bd4713fdf1f6c77",{"_index":443,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["fk_1f085438e7c67754389f6b459f7",{"_index":445,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["fk_3ddf8a30b99815c84f01849dcfa",{"_index":431,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["fk_6dfeeefd28618a1351a1a1a9171",{"_index":438,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["fk_7fb910c4989cd7de4e2e05fb7a9",{"_index":440,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["fk_9416d08fb276a62be271c9a3c21",{"_index":442,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["fk_c3cd9ba756e81a8e82e4b02c994",{"_index":446,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["foreign",{"_index":432,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["forwardref",{"_index":892,"title":{},"body":{"modules/RoomModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1358,"title":{},"body":{"index.html":{}}}],["fs",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["fs.appendfilesync(filepath",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["fs.unlinksync(filepath",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["function",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["functions",{"_index":1351,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":416,"title":{"entities/Game.html":{}},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/Room.html":{},"coverage.html":{}}}],["game\"(\"id",{"_index":441,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["game/entity/game.entity",{"_index":752,"title":{},"body":{"entities/Room.html":{}}}],["game/game.module",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["game_id",{"_index":406,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Room.html":{}}}],["gamecontroller",{"_index":622,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamedto",{"_index":625,"title":{"classes/GameDto.html":{}},"body":{"classes/GameDto.html":{},"classes/GameRepository.html":{},"coverage.html":{}}}],["gamemodule",{"_index":122,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gamerepository",{"_index":637,"title":{"classes/GameRepository.html":{}},"body":{"modules/GameModule.html":{},"classes/GameRepository.html":{},"coverage.html":{}}}],["gametypeenum",{"_index":613,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{},"miscellaneous/enumerations.html":{}}}],["gateways/event.gateway",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["gateways/models/user.model",{"_index":795,"title":{},"body":{"classes/RoomClass.html":{}}}],["generate",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RoomService.html":{}}}],["generatepin",{"_index":925,"title":{},"body":{"injectables/RoomService.html":{}}}],["get(':id",{"_index":853,"title":{},"body":{"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["get('pin/:pin",{"_index":856,"title":{},"body":{"controllers/RoomController.html":{}}}],["getallroominformation",{"_index":898,"title":{},"body":{"classes/RoomRepository.html":{}}}],["getallroominformation(roompin",{"_index":900,"title":{},"body":{"classes/RoomRepository.html":{}}}],["getconnecteduser",{"_index":762,"title":{},"body":{"classes/RoomClass.html":{}}}],["getconnecteduser(socketid",{"_index":778,"title":{},"body":{"classes/RoomClass.html":{}}}],["gethello",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":914,"title":{},"body":{"classes/RoomRepository.html":{},"injectables/UserService.html":{}}}],["getone(id",{"_index":1209,"title":{},"body":{"injectables/UserService.html":{}}}],["getroombyid",{"_index":839,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["getroombyid(@param('id",{"_index":869,"title":{},"body":{"controllers/RoomController.html":{}}}],["getroombyid(id",{"_index":852,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["getroomdetailsbypin",{"_index":840,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["getroomdetailsbypin(@param('pin",{"_index":871,"title":{},"body":{"controllers/RoomController.html":{}}}],["getroomdetailsbypin(pin",{"_index":855,"title":{},"body":{"controllers/RoomController.html":{},"injectables/RoomService.html":{}}}],["getroomsfilterdto",{"_index":1278,"title":{"classes/getRoomsFilterDto.html":{}},"body":{"coverage.html":{},"classes/getRoomsFilterDto.html":{}}}],["getroomsinformation",{"_index":926,"title":{},"body":{"injectables/RoomService.html":{}}}],["getroomsinformation(query",{"_index":945,"title":{},"body":{"injectables/RoomService.html":{}}}],["getteambyid",{"_index":1035,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(id",{"_index":1041,"title":{},"body":{"injectables/TeamService.html":{}}}],["getting",{"_index":1355,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":1080,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyid(@param('id",{"_index":1116,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(id",{"_index":1099,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyparam",{"_index":1196,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyparam(param",{"_index":1214,"title":{},"body":{"injectables/UserService.html":{}}}],["given",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1411,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1388,"title":{},"body":{"index.html":{}}}],["guard",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["guard/local",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["guest",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGuestUserDto.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["has_started",{"_index":402,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"entities/Room.html":{},"injectables/RoomService.html":{}}}],["hash",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["hashpassword",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword(body.password",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["historic_game",{"_index":421,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["historicgame",{"_index":649,"title":{"entities/HistoricGame.html":{}},"body":{"entities/HistoricGame.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"coverage.html":{}}}],["historicgamedto",{"_index":660,"title":{"classes/HistoricGameDto.html":{}},"body":{"classes/HistoricGameDto.html":{},"coverage.html":{}}}],["historicgamemodule",{"_index":669,"title":{"modules/HistoricGameModule.html":{}},"body":{"modules/HistoricGameModule.html":{},"modules.html":{}}}],["historicgamerepository",{"_index":672,"title":{"classes/HistoricGameRepository.html":{}},"body":{"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"coverage.html":{}}}],["home",{"_index":1181,"title":{},"body":{"classes/UserRepository.html":{}}}],["host",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":1404,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"injectables/JwtStrategy.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["if(!body.code.includes('console.log",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["if(!body.code.includes(code",{"_index":99,"title":{},"body":{"controllers/AppController.html":{}}}],["if(!room",{"_index":951,"title":{},"body":{"injectables/RoomService.html":{}}}],["if(!room.mode",{"_index":569,"title":{},"body":{"classes/EventGateway.html":{}}}],["if(!room.teams[0].users?.length",{"_index":577,"title":{},"body":{"classes/EventGateway.html":{}}}],["if(!room.users?.length",{"_index":959,"title":{},"body":{"injectables/RoomService.html":{}}}],["if(!team",{"_index":1045,"title":{},"body":{"injectables/TeamService.html":{}}}],["if(!user",{"_index":1137,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["if(output.trim",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["if(result.affected",{"_index":965,"title":{},"body":{"injectables/RoomService.html":{}}}],["if(room.has_started",{"_index":567,"title":{},"body":{"classes/EventGateway.html":{},"controllers/UserController.html":{}}}],["if(room.users.length",{"_index":570,"title":{},"body":{"classes/EventGateway.html":{}}}],["if(user",{"_index":801,"title":{},"body":{"classes/RoomClass.html":{}}}],["if(user.room",{"_index":1140,"title":{},"body":{"controllers/UserController.html":{}}}],["if(user.team",{"_index":1138,"title":{},"body":{"controllers/UserController.html":{}}}],["ignoreexpiration",{"_index":694,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":370,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["import",{"_index":18,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{}}}],["imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{}}}],["inconnue",{"_index":791,"title":{},"body":{"classes/RoomClass.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getRoomsFilterDto.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{}}}],["injectable",{"_index":181,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":948,"title":{},"body":{"injectables/RoomService.html":{},"controllers/TeamController.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["injectrepository(roomrepository",{"_index":949,"title":{},"body":{"injectables/RoomService.html":{}}}],["injectrepository(teamrepository",{"_index":1000,"title":{},"body":{"controllers/TeamController.html":{},"injectables/TeamService.html":{}}}],["injectrepository(userrepository",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{}}}],["innerjoinandselect('r.team",{"_index":909,"title":{},"body":{"classes/RoomRepository.html":{}}}],["installation",{"_index":1368,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1370,"title":{},"body":{"index.html":{}}}],["integer",{"_index":388,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"injectables/RoomService.html":{}}}],["interface",{"_index":720,"title":{"interfaces/PayloadInterface.html":{},"interfaces/UserModel.html":{}},"body":{"interfaces/PayloadInterface.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":721,"title":{},"body":{"interfaces/PayloadInterface.html":{},"interfaces/UserModel.html":{},"overview.html":{}}}],["invalid",{"_index":76,"title":{},"body":{"controllers/AppController.html":{}}}],["invalide",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["is_guest",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseMigration1653035270972.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{}}}],["isboolean",{"_index":1150,"title":{},"body":{"classes/UserDto.html":{}}}],["isemail",{"_index":475,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["isemail()@isnotempty",{"_index":469,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isoptional",{"_index":1148,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty",{"_index":19,"title":{},"body":{"classes/AddPointDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["isnotempty()@isstring",{"_index":457,"title":{},"body":{"classes/CreateGuestUserDto.html":{},"classes/UserDto.html":{}}}],["isnumber",{"_index":20,"title":{},"body":{"classes/AddPointDto.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/UpdateUserTeamDto.html":{},"classes/UserDto.html":{}}}],["isnumber()@isnotempty",{"_index":15,"title":{},"body":{"classes/AddPointDto.html":{}}}],["isnumber()@isoptional",{"_index":1154,"title":{},"body":{"classes/UserDto.html":{}}}],["isoptional",{"_index":476,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{},"classes/getRoomsFilterDto.html":{}}}],["isoptional()@isstring",{"_index":1353,"title":{},"body":{"classes/getRoomsFilterDto.html":{}}}],["isstring",{"_index":452,"title":{},"body":{"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UserDto.html":{},"classes/getRoomsFilterDto.html":{}}}],["isstring()@isnotempty",{"_index":470,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional",{"_index":473,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["ixion",{"_index":880,"title":{},"body":{"controllers/RoomController.html":{}}}],["javascript",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["join",{"_index":1228,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["joincolumn",{"_index":616,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["joinroom",{"_index":480,"title":{},"body":{"classes/EventGateway.html":{}}}],["joinroom(@connectedsocket",{"_index":553,"title":{},"body":{"classes/EventGateway.html":{}}}],["joinroom(client",{"_index":504,"title":{},"body":{"classes/EventGateway.html":{}}}],["joins",{"_index":1087,"title":{},"body":{"controllers/UserController.html":{}}}],["jointeam",{"_index":1081,"title":{},"body":{"controllers/UserController.html":{}}}],["jointeam(@param('id",{"_index":1132,"title":{},"body":{"controllers/UserController.html":{}}}],["jointeam(id",{"_index":1101,"title":{},"body":{"controllers/UserController.html":{}}}],["js",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["jwt",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":677,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconstant",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstant.jwtsecret",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtconstant.jwttime",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":692,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtsecret",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":288,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttime",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":1401,"title":{},"body":{"index.html":{}}}],["key",{"_index":397,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["l'équipe",{"_index":817,"title":{},"body":{"classes/RoomClass.html":{}}}],["la",{"_index":827,"title":{},"body":{"classes/RoomClass.html":{},"classes/UserRepository.html":{}}}],["landing",{"_index":1092,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["language",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"classes/GameDto.html":{}}}],["languageenum",{"_index":608,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{},"miscellaneous/enumerations.html":{}}}],["latest",{"_index":803,"title":{},"body":{"classes/RoomClass.html":{}}}],["launchgame",{"_index":481,"title":{},"body":{"classes/EventGateway.html":{}}}],["launchgame(@connectedsocket",{"_index":564,"title":{},"body":{"classes/EventGateway.html":{}}}],["launchgame(client",{"_index":507,"title":{},"body":{"classes/EventGateway.html":{}}}],["launchscript",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["launchscript(@body",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["launchscript(body",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["le",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"classes/BadCodeException.html":{},"classes/NoPrintException.html":{}}}],["leftjoinandselect('t.user",{"_index":911,"title":{},"body":{"classes/RoomRepository.html":{}}}],["license",{"_index":1407,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1385,"title":{},"body":{"index.html":{}}}],["linked",{"_index":708,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local",{"_index":711,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":217,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstorage",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["localstrategy",{"_index":289,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@request",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginjwt",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginjwt(user",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["lors",{"_index":1177,"title":{},"body":{"classes/UserRepository.html":{}}}],["manytoone",{"_index":985,"title":{},"body":{"entities/Team.html":{},"entities/User.html":{}}}],["manytoone(undefined",{"_index":978,"title":{},"body":{"entities/Team.html":{},"entities/User.html":{}}}],["matching",{"_index":24,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getRoomsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mauvais",{"_index":365,"title":{},"body":{"classes/BadResultException.html":{}}}],["max",{"_index":933,"title":{},"body":{"injectables/RoomService.html":{}}}],["mec",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["message",{"_index":352,"title":{},"body":{"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{}}}],["messagebody",{"_index":549,"title":{},"body":{"classes/EventGateway.html":{}}}],["metadata",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["migration",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migration/**/*.js",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migration/**/*.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":371,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["migrations",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1333,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1384,"title":{},"body":{"index.html":{}}}],["mode",{"_index":399,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"entities/Room.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/UpdateRoomModeDto.html":{},"index.html":{}}}],["mode.ts",{"_index":1049,"title":{},"body":{"classes/UpdateRoomModeDto.html":{},"coverage.html":{}}}],["mode.ts:6",{"_index":1050,"title":{},"body":{"classes/UpdateRoomModeDto.html":{}}}],["modeenum",{"_index":733,"title":{},"body":{"entities/Room.html":{},"classes/UpdateRoomModeDto.html":{},"miscellaneous/enumerations.html":{}}}],["models/payload.interface",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["module",{"_index":114,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"modules/SharedModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"modules/SharedModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":116,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"modules/SharedModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1397,"title":{},"body":{"index.html":{}}}],["mot",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["msg",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["multi",{"_index":1347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["myśliwiec",{"_index":1402,"title":{},"body":{"index.html":{}}}],["météion",{"_index":881,"title":{},"body":{"controllers/RoomController.html":{}}}],["n'oubliez",{"_index":718,"title":{},"body":{"classes/NoPrintException.html":{}}}],["name",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/CreateTeamDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"entities/HistoricGame.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["ne",{"_index":357,"title":{},"body":{"classes/BadCodeException.html":{}}}],["need",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["nest",{"_index":1365,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1406,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"injectables/TeamService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":550,"title":{},"body":{"classes/EventGateway.html":{},"dependencies.html":{}}}],["new",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newpin",{"_index":970,"title":{},"body":{"injectables/RoomService.html":{}}}],["newpin.length",{"_index":971,"title":{},"body":{"injectables/RoomService.html":{}}}],["newresult",{"_index":482,"title":{},"body":{"classes/EventGateway.html":{}}}],["newresult(@connectedsocket",{"_index":591,"title":{},"body":{"classes/EventGateway.html":{}}}],["newresult(client",{"_index":510,"title":{},"body":{"classes/EventGateway.html":{}}}],["newtextdelete",{"_index":483,"title":{},"body":{"classes/EventGateway.html":{}}}],["newtextdelete(@connectedsocket",{"_index":587,"title":{},"body":{"classes/EventGateway.html":{}}}],["newtextdelete(client",{"_index":514,"title":{},"body":{"classes/EventGateway.html":{}}}],["newtextinsert",{"_index":484,"title":{},"body":{"classes/EventGateway.html":{}}}],["newtextinsert(@connectedsocket",{"_index":585,"title":{},"body":{"classes/EventGateway.html":{}}}],["newtextinsert(client",{"_index":517,"title":{},"body":{"classes/EventGateway.html":{}}}],["next",{"_index":523,"title":{},"body":{"classes/EventGateway.html":{}}}],["nextexercise",{"_index":485,"title":{},"body":{"classes/EventGateway.html":{}}}],["nextexercise(@connectedsocket",{"_index":593,"title":{},"body":{"classes/EventGateway.html":{}}}],["nextexercise(client",{"_index":520,"title":{},"body":{"classes/EventGateway.html":{}}}],["node",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["node.js",{"_index":1357,"title":{},"body":{"index.html":{}}}],["non",{"_index":822,"title":{},"body":{"classes/RoomClass.html":{}}}],["noprintexception",{"_index":42,"title":{"classes/NoPrintException.html":{}},"body":{"controllers/AppController.html":{},"classes/NoPrintException.html":{},"coverage.html":{}}}],["noprintexception('n\\oubliez",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["notfoundexception",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('user",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(`room",{"_index":952,"title":{},"body":{"injectables/RoomService.html":{}}}],["notfoundexception(`team",{"_index":1046,"title":{},"body":{"injectables/TeamService.html":{}}}],["notfoundexception(`user",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["now",{"_index":391,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["npm",{"_index":1369,"title":{},"body":{"index.html":{}}}],["null",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseMigration1653035270972.html":{},"injectables/RoomService.html":{},"injectables/UserService.html":{}}}],["nullable",{"_index":754,"title":{},"body":{"entities/Room.html":{},"entities/User.html":{}}}],["number",{"_index":13,"title":{},"body":{"classes/AddPointDto.html":{},"classes/ConnectInRoomUserDto.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["object",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["onetomany",{"_index":748,"title":{},"body":{"entities/Room.html":{},"entities/Team.html":{}}}],["onetomany(undefined",{"_index":742,"title":{},"body":{"entities/Room.html":{},"entities/Team.html":{}}}],["onetoone",{"_index":617,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{}}}],["onetoone(undefined)@joincolumn({name",{"_index":604,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{}}}],["ontab",{"_index":486,"title":{},"body":{"classes/EventGateway.html":{}}}],["ontab(@connectedsocket",{"_index":589,"title":{},"body":{"classes/EventGateway.html":{}}}],["ontab(client",{"_index":526,"title":{},"body":{"classes/EventGateway.html":{}}}],["open",{"_index":1386,"title":{},"body":{"index.html":{}}}],["optional",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"interfaces/UserModel.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{}}}],["options",{"_index":1210,"title":{},"body":{"injectables/UserService.html":{}}}],["oups",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{}}}],["out",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["output",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["output.trim",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["overview",{"_index":1413,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":724,"title":{},"body":{"entities/Room.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/UserController.html":{}}}],["owner_id",{"_index":405,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/CreateRoomDto.html":{},"entities/Room.html":{},"classes/RoomRepository.html":{}}}],["package",{"_index":1298,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1093,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["param",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventGateway.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1216,"title":{},"body":{"injectables/UserService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["parseint(process.env.bcrypt_salt",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partie",{"_index":1127,"title":{},"body":{"controllers/UserController.html":{}}}],["pas",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"classes/BadCodeException.html":{},"classes/NoPrintException.html":{}}}],["pass",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["passe",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["passed",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["passing",{"_index":709,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passport",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":689,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":690,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["password.ts",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":714,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":866,"title":{},"body":{"controllers/RoomController.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{}}}],["patch(':id/add",{"_index":991,"title":{},"body":{"controllers/TeamController.html":{}}}],["patch(':id/connect",{"_index":1085,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id/disconnect",{"_index":1096,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id/join",{"_index":1102,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id/mode",{"_index":860,"title":{},"body":{"controllers/RoomController.html":{}}}],["patch(':id/pseudo",{"_index":1105,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id/socket",{"_index":1108,"title":{},"body":{"controllers/UserController.html":{}}}],["paths",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":697,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":696,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.slug",{"_index":698,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloadinterface",{"_index":325,"title":{"interfaces/PayloadInterface.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/PayloadInterface.html":{},"coverage.html":{}}}],["pg",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["php",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["pin",{"_index":400,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/getRoomsFilterDto.html":{}}}],["pk_352a30652cd352f552fef73dec5",{"_index":420,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["pk_c6d46db005d623e691b2fbcba23",{"_index":410,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["pk_cace4a159ff9f2512dd42373760",{"_index":415,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["pk_ec297b17a83b2745b5d6630efd6",{"_index":428,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["pk_f57d8293406df4af348402e4b74",{"_index":395,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["please",{"_index":1395,"title":{},"body":{"index.html":{}}}],["point",{"_index":992,"title":{},"body":{"controllers/TeamController.html":{}}}],["point.dto",{"_index":998,"title":{},"body":{"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{}}}],["point.dto.ts",{"_index":7,"title":{},"body":{"classes/AddPointDto.html":{},"coverage.html":{}}}],["point.dto.ts:6",{"_index":17,"title":{},"body":{"classes/AddPointDto.html":{}}}],["points",{"_index":10,"title":{},"body":{"classes/AddPointDto.html":{},"classes/BaseMigration1653035270972.html":{},"entities/Team.html":{},"classes/TeamRepository.html":{}}}],["port",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":583,"title":{},"body":{"classes/EventGateway.html":{}}}],["post",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["post('/login",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@usepipes(new",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/with",{"_index":846,"title":{},"body":{"controllers/RoomController.html":{}}}],["post('editor",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["post('guest",{"_index":1118,"title":{},"body":{"controllers/UserController.html":{}}}],["post('guest')@usepipes(new",{"_index":1089,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@usepipes(new",{"_index":843,"title":{},"body":{"controllers/RoomController.html":{}}}],["postgres",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["postman",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/RoomController.html":{},"controllers/TeamController.html":{},"controllers/UserController.html":{}}}],["primary",{"_index":396,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["primarygeneratedcolumn",{"_index":606,"title":{},"body":{"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["private",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomController.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["process.env.database_host",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":1356,"title":{},"body":{"index.html":{}}}],["project",{"_index":1387,"title":{},"body":{"index.html":{}}}],["promise",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddPointDto.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"entities/Team.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"classes/getRoomsFilterDto.html":{},"properties.html":{}}}],["providers",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{}}}],["pseudo",{"_index":412,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserPseudoDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{}}}],["pseudo.dto",{"_index":1110,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["pseudo.dto.ts",{"_index":1053,"title":{},"body":{"classes/UpdateUserPseudoDto.html":{},"coverage.html":{}}}],["pseudo.dto.ts:5",{"_index":1054,"title":{},"body":{"classes/UpdateUserPseudoDto.html":{}}}],["public",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["py",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["python",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["python3",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["qu\\'il",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["query",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RoomService.html":{}}}],["query.id",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["queryrunner",{"_index":377,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/TeamRepository.html":{}}}],["queryrunner.committransaction",{"_index":1028,"title":{},"body":{"classes/TeamRepository.html":{}}}],["queryrunner.connect",{"_index":1023,"title":{},"body":{"classes/TeamRepository.html":{}}}],["queryrunner.manager.save(team",{"_index":1027,"title":{},"body":{"classes/TeamRepository.html":{}}}],["queryrunner.query(`alter",{"_index":429,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["queryrunner.query(`create",{"_index":382,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["queryrunner.query(`drop",{"_index":448,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["queryrunner.release",{"_index":1033,"title":{},"body":{"classes/TeamRepository.html":{}}}],["queryrunner.rollbacktransaction",{"_index":1031,"title":{},"body":{"classes/TeamRepository.html":{}}}],["queryrunner.starttransaction",{"_index":1024,"title":{},"body":{"classes/TeamRepository.html":{}}}],["quipe",{"_index":788,"title":{},"body":{"classes/RoomClass.html":{}}}],["r",{"_index":908,"title":{},"body":{"classes/RoomRepository.html":{}}}],["random",{"_index":932,"title":{},"body":{"injectables/RoomService.html":{}}}],["reached",{"_index":525,"title":{},"body":{"classes/EventGateway.html":{}}}],["read",{"_index":1396,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"classes/GameDto.html":{},"classes/HistoricGameDto.html":{},"injectables/LocalStrategy.html":{},"controllers/RoomController.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["redis",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["references",{"_index":433,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["reflect",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["registers",{"_index":1221,"title":{},"body":{"injectables/UserService.html":{}}}],["rejectunauthorized",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["rel_1f085438e7c67754389f6b459f",{"_index":419,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["rel_6dfeeefd28618a1351a1a1a917",{"_index":407,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["rel_7fb910c4989cd7de4e2e05fb7a",{"_index":409,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["rel_c3cd9ba756e81a8e82e4b02c99",{"_index":427,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["relations",{"_index":953,"title":{},"body":{"injectables/RoomService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"classes/RoomClass.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removed",{"_index":1145,"title":{},"body":{"controllers/UserController.html":{}}}],["removeuserbyid",{"_index":1197,"title":{},"body":{"injectables/UserService.html":{}}}],["removeuserbyid(user",{"_index":1217,"title":{},"body":{"injectables/UserService.html":{}}}],["removeuserfromteam",{"_index":763,"title":{},"body":{"classes/RoomClass.html":{}}}],["removeuserfromteam(user",{"_index":782,"title":{},"body":{"classes/RoomClass.html":{}}}],["removeuserfromunknownteam",{"_index":764,"title":{},"body":{"classes/RoomClass.html":{}}}],["removeuserfromunknownteam(user",{"_index":789,"title":{},"body":{"classes/RoomClass.html":{}}}],["repository",{"_index":642,"title":{},"body":{"classes/GameRepository.html":{},"classes/HistoricGameRepository.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["repository/game.repository",{"_index":638,"title":{},"body":{"modules/GameModule.html":{}}}],["repository/historic_game.repository",{"_index":673,"title":{},"body":{"modules/HistoricGameModule.html":{}}}],["repository/room.repository",{"_index":895,"title":{},"body":{"modules/RoomModule.html":{},"injectables/RoomService.html":{}}}],["repository/team.repository",{"_index":996,"title":{},"body":{"controllers/TeamController.html":{},"modules/TeamModule.html":{},"injectables/TeamService.html":{}}}],["repository/user.repository",{"_index":1166,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["req",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.id",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["res",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.created).json",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.internal_server_error).json",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.not_acceptable).json",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseMigration1653035270972.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/RoomService.html":{}}}],["results",{"_index":23,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getRoomsFilterDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retir",{"_index":816,"title":{},"body":{"classes/RoomClass.html":{}}}],["retirer",{"_index":785,"title":{},"body":{"classes/RoomClass.html":{}}}],["return",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"classes/GameRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["room",{"_index":398,"title":{"entities/Room.html":{}},"body":{"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateTeamDto.html":{},"classes/EventGateway.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"classes/TeamRepository.html":{},"classes/UpdateRoomModeDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["room\"(\"id",{"_index":434,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["room.dto",{"_index":864,"title":{},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{}}}],["room.dto.ts",{"_index":462,"title":{},"body":{"classes/CreateRoomDto.html":{},"coverage.html":{}}}],["room.dto.ts:5",{"_index":463,"title":{},"body":{"classes/CreateRoomDto.html":{}}}],["room.id",{"_index":879,"title":{},"body":{"controllers/RoomController.html":{}}}],["room.teams",{"_index":882,"title":{},"body":{"controllers/RoomController.html":{},"entities/Team.html":{}}}],["room.teams)@joincolumn({name",{"_index":979,"title":{},"body":{"entities/Team.html":{}}}],["room.teams[1].users?.length",{"_index":578,"title":{},"body":{"classes/EventGateway.html":{}}}],["room.users",{"_index":1074,"title":{},"body":{"entities/User.html":{}}}],["room.users)@joincolumn({name",{"_index":1067,"title":{},"body":{"entities/User.html":{}}}],["room.users.length",{"_index":962,"title":{},"body":{"injectables/RoomService.html":{}}}],["room.users[math.floor(math.random",{"_index":961,"title":{},"body":{"injectables/RoomService.html":{}}}],["room/entity/room.entity",{"_index":986,"title":{},"body":{"entities/Team.html":{},"entities/User.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["room/enums/access.enum",{"_index":620,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{}}}],["room/room.module",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["room_id",{"_index":393,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["room_name",{"_index":422,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{}}}],["roomclass",{"_index":755,"title":{"classes/RoomClass.html":{}},"body":{"classes/RoomClass.html":{},"coverage.html":{}}}],["roomcontroller",{"_index":834,"title":{"controllers/RoomController.html":{}},"body":{"controllers/RoomController.html":{},"modules/RoomModule.html":{},"coverage.html":{}}}],["roommodule",{"_index":123,"title":{"modules/RoomModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["roompin",{"_index":902,"title":{},"body":{"classes/RoomRepository.html":{}}}],["roomrepository",{"_index":894,"title":{"classes/RoomRepository.html":{}},"body":{"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"coverage.html":{}}}],["rooms",{"_index":1276,"title":{},"body":{"coverage.html":{},"classes/getRoomsFilterDto.html":{}}}],["roomservice",{"_index":493,"title":{"injectables/RoomService.html":{}},"body":{"classes/EventGateway.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"injectables/RoomService.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1373,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["récupère",{"_index":826,"title":{},"body":{"classes/RoomClass.html":{}}}],["résultat",{"_index":366,"title":{},"body":{"classes/BadResultException.html":{},"classes/NoPrintException.html":{}}}],["sa",{"_index":1178,"title":{},"body":{"classes/UserRepository.html":{}}}],["scalable",{"_index":1361,"title":{},"body":{"index.html":{}}}],["searchuser",{"_index":809,"title":{},"body":{"classes/RoomClass.html":{}}}],["secret",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":695,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seems",{"_index":707,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["serial",{"_index":385,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["server",{"_index":478,"title":{},"body":{"classes/EventGateway.html":{},"index.html":{}}}],["service",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["service/room.service",{"_index":865,"title":{},"body":{"controllers/RoomController.html":{},"modules/RoomModule.html":{}}}],["service/team.service",{"_index":994,"title":{},"body":{"controllers/TeamController.html":{},"modules/TeamModule.html":{}}}],["service/user.service",{"_index":1113,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["set",{"_index":568,"title":{},"body":{"classes/EventGateway.html":{},"classes/RoomClass.html":{}}}],["setusername",{"_index":765,"title":{},"body":{"classes/RoomClass.html":{}}}],["setusername(socketid",{"_index":793,"title":{},"body":{"classes/RoomClass.html":{}}}],["shared/functions/hash",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/shared.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":124,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":1362,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["slug",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/CreateGuestUserDto.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomRepository.html":{},"entities/Team.html":{},"classes/TeamRepository.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{}}}],["socket",{"_index":500,"title":{},"body":{"classes/EventGateway.html":{},"classes/RoomClass.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{}}}],["socket.dto",{"_index":1111,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["socket.dto.ts",{"_index":1056,"title":{},"body":{"classes/UpdateUserSocketDto.html":{},"coverage.html":{}}}],["socket.dto.ts:5",{"_index":1057,"title":{},"body":{"classes/UpdateUserSocketDto.html":{}}}],["socket.io",{"_index":551,"title":{},"body":{"classes/EventGateway.html":{},"dependencies.html":{}}}],["socket_id",{"_index":411,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserSocketDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{}}}],["socketid",{"_index":781,"title":{},"body":{"classes/RoomClass.html":{},"interfaces/UserModel.html":{}}}],["solo",{"_index":1346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddPointDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"modules/HistoricGameModule.html":{},"classes/HistoricGameRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoPrintException.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"modules/RoomModule.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"modules/SharedModule.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{},"index.html":{}}}],["sponsors",{"_index":1390,"title":{},"body":{"index.html":{}}}],["src/.../access.enum.ts",{"_index":1335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../game",{"_index":1336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../hash",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../language.enum.ts",{"_index":1338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mode.enum.ts",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.enum.ts",{"_index":1340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../team.enum.ts",{"_index":1341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm.config.ts",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:20",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":183,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/constant/jwt",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:32",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controller/auth.controller.ts:48",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/guard/jwt",{"_index":678,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":699,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/models/payload.interface.ts",{"_index":722,"title":{},"body":{"interfaces/PayloadInterface.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/service/auth.service.ts:23",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:45",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/service/auth.service.ts:9",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategy/jwt",{"_index":682,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local.strategy.ts",{"_index":701,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local.strategy.ts:24",{"_index":705,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts:7",{"_index":703,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/exceptions/badcodeexception.ts",{"_index":348,"title":{},"body":{"classes/BadCodeException.html":{},"coverage.html":{}}}],["src/exceptions/badcodeexception.ts:1",{"_index":351,"title":{},"body":{"classes/BadCodeException.html":{}}}],["src/exceptions/badresultexception.ts",{"_index":361,"title":{},"body":{"classes/BadResultException.html":{},"coverage.html":{}}}],["src/exceptions/badresultexception.ts:1",{"_index":362,"title":{},"body":{"classes/BadResultException.html":{}}}],["src/exceptions/noprintexception.ts",{"_index":716,"title":{},"body":{"classes/NoPrintException.html":{},"coverage.html":{}}}],["src/exceptions/noprintexception.ts:1",{"_index":717,"title":{},"body":{"classes/NoPrintException.html":{}}}],["src/game/controller/game.controller.ts",{"_index":623,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/entity/game.dto.ts",{"_index":626,"title":{},"body":{"classes/GameDto.html":{},"coverage.html":{}}}],["src/game/entity/game.dto.ts:10",{"_index":632,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.dto.ts:11",{"_index":627,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.dto.ts:12",{"_index":629,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.dto.ts:6",{"_index":631,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.dto.ts:7",{"_index":628,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.dto.ts:8",{"_index":630,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.dto.ts:9",{"_index":633,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entity/game.entity.ts",{"_index":596,"title":{},"body":{"entities/Game.html":{},"coverage.html":{}}}],["src/game/entity/game.entity.ts:10",{"_index":607,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:13",{"_index":611,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:17",{"_index":605,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:20",{"_index":610,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:23",{"_index":614,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:26",{"_index":612,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:29",{"_index":600,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:32",{"_index":609,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:35",{"_index":603,"title":{},"body":{"entities/Game.html":{}}}],["src/game/entity/game.entity.ts:38",{"_index":615,"title":{},"body":{"entities/Game.html":{}}}],["src/game/enum/game",{"_index":1343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/game/enum/language.enum.ts",{"_index":1344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/game/game.module.ts",{"_index":634,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/repository/game.repository.ts",{"_index":641,"title":{},"body":{"classes/GameRepository.html":{},"coverage.html":{}}}],["src/game/repository/game.repository.ts:7",{"_index":644,"title":{},"body":{"classes/GameRepository.html":{}}}],["src/gateways/event.gateway.ts",{"_index":477,"title":{},"body":{"classes/EventGateway.html":{},"coverage.html":{}}}],["src/gateways/event.gateway.ts:120",{"_index":543,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:134",{"_index":531,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:142",{"_index":519,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:147",{"_index":516,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:152",{"_index":528,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:157",{"_index":512,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:16",{"_index":496,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:168",{"_index":522,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:25",{"_index":506,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:31",{"_index":540,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:39",{"_index":534,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:48",{"_index":502,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:56",{"_index":537,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/event.gateway.ts:64",{"_index":509,"title":{},"body":{"classes/EventGateway.html":{}}}],["src/gateways/models/user.model.ts",{"_index":1159,"title":{},"body":{"interfaces/UserModel.html":{},"coverage.html":{}}}],["src/historic_game/entity/historic_game.dto.ts",{"_index":661,"title":{},"body":{"classes/HistoricGameDto.html":{},"coverage.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:2",{"_index":665,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:3",{"_index":668,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:4",{"_index":664,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:5",{"_index":667,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:6",{"_index":663,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:7",{"_index":666,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.dto.ts:8",{"_index":662,"title":{},"body":{"classes/HistoricGameDto.html":{}}}],["src/historic_game/entity/historic_game.entity.ts",{"_index":650,"title":{},"body":{"entities/HistoricGame.html":{},"coverage.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:10",{"_index":656,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:14",{"_index":659,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:17",{"_index":655,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:20",{"_index":658,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:23",{"_index":654,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:26",{"_index":657,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:29",{"_index":652,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:32",{"_index":651,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/entity/historic_game.entity.ts:7",{"_index":653,"title":{},"body":{"entities/HistoricGame.html":{}}}],["src/historic_game/historic_game.module.ts",{"_index":670,"title":{},"body":{"modules/HistoricGameModule.html":{}}}],["src/historic_game/repository/historic_game.repository.ts",{"_index":675,"title":{},"body":{"classes/HistoricGameRepository.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migration",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["src/migration/1653035270972",{"_index":368,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"coverage.html":{}}}],["src/room/classes/room.ts",{"_index":756,"title":{},"body":{"classes/RoomClass.html":{},"coverage.html":{}}}],["src/room/classes/room.ts:10",{"_index":772,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:11",{"_index":767,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:14",{"_index":771,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:23",{"_index":776,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:33",{"_index":779,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:43",{"_index":794,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:57",{"_index":774,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:71",{"_index":790,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:9",{"_index":769,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/classes/room.ts:96",{"_index":784,"title":{},"body":{"classes/RoomClass.html":{}}}],["src/room/controller/room.controller.ts",{"_index":835,"title":{},"body":{"controllers/RoomController.html":{},"coverage.html":{}}}],["src/room/controller/room.controller.ts:29",{"_index":854,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/room/controller/room.controller.ts:35",{"_index":857,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/room/controller/room.controller.ts:42",{"_index":844,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/room/controller/room.controller.ts:55",{"_index":848,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/room/controller/room.controller.ts:86",{"_index":861,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/room/controller/room.controller.ts:92",{"_index":851,"title":{},"body":{"controllers/RoomController.html":{}}}],["src/room/dto/create",{"_index":461,"title":{},"body":{"classes/CreateRoomDto.html":{},"coverage.html":{}}}],["src/room/dto/get",{"_index":1275,"title":{},"body":{"coverage.html":{},"classes/getRoomsFilterDto.html":{}}}],["src/room/dto/update",{"_index":1048,"title":{},"body":{"classes/UpdateRoomModeDto.html":{},"coverage.html":{}}}],["src/room/entity/room.entity.ts",{"_index":723,"title":{},"body":{"entities/Room.html":{},"coverage.html":{}}}],["src/room/entity/room.entity.ts:12",{"_index":732,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:15",{"_index":739,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:19",{"_index":737,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:23",{"_index":729,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:26",{"_index":744,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:29",{"_index":747,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:32",{"_index":735,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:35",{"_index":736,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:38",{"_index":738,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:41",{"_index":727,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:44",{"_index":731,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:47",{"_index":741,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:50",{"_index":728,"title":{},"body":{"entities/Room.html":{}}}],["src/room/entity/room.entity.ts:53",{"_index":745,"title":{},"body":{"entities/Room.html":{}}}],["src/room/enums/access.enum.ts",{"_index":1342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/room/enums/mode.enum.ts",{"_index":1345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/room/enums/status.enum.ts",{"_index":1349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/room/enums/team.enum.ts",{"_index":1350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/room/repository/room.repository.ts",{"_index":897,"title":{},"body":{"classes/RoomRepository.html":{},"coverage.html":{}}}],["src/room/repository/room.repository.ts:12",{"_index":901,"title":{},"body":{"classes/RoomRepository.html":{}}}],["src/room/repository/room.repository.ts:21",{"_index":899,"title":{},"body":{"classes/RoomRepository.html":{}}}],["src/room/repository/room.repository.ts:46",{"_index":904,"title":{},"body":{"classes/RoomRepository.html":{}}}],["src/room/room.module.ts",{"_index":891,"title":{},"body":{"modules/RoomModule.html":{}}}],["src/room/service/room.service",{"_index":545,"title":{},"body":{"classes/EventGateway.html":{},"controllers/UserController.html":{}}}],["src/room/service/room.service.ts",{"_index":920,"title":{},"body":{"injectables/RoomService.html":{},"coverage.html":{}}}],["src/room/service/room.service.ts:10",{"_index":928,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:107",{"_index":942,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:127",{"_index":931,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:17",{"_index":943,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:30",{"_index":944,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:44",{"_index":940,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:52",{"_index":937,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:57",{"_index":935,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:62",{"_index":939,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:82",{"_index":947,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:87",{"_index":941,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/room/service/room.service.ts:96",{"_index":946,"title":{},"body":{"injectables/RoomService.html":{}}}],["src/shared/functions/hash",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/shared.module.ts",{"_index":972,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/team/controller/team.controller.ts",{"_index":988,"title":{},"body":{"controllers/TeamController.html":{},"coverage.html":{}}}],["src/team/controller/team.controller.ts:17",{"_index":993,"title":{},"body":{"controllers/TeamController.html":{}}}],["src/team/dto/add",{"_index":6,"title":{},"body":{"classes/AddPointDto.html":{},"coverage.html":{}}}],["src/team/dto/create",{"_index":465,"title":{},"body":{"classes/CreateTeamDto.html":{},"coverage.html":{}}}],["src/team/entity/team.entity.ts",{"_index":973,"title":{},"body":{"entities/Team.html":{},"coverage.html":{}}}],["src/team/entity/team.entity.ts:11",{"_index":981,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:15",{"_index":980,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:18",{"_index":984,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:21",{"_index":976,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:24",{"_index":977,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:27",{"_index":974,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:30",{"_index":982,"title":{},"body":{"entities/Team.html":{}}}],["src/team/entity/team.entity.ts:8",{"_index":975,"title":{},"body":{"entities/Team.html":{}}}],["src/team/repository/team.repository.ts",{"_index":1010,"title":{},"body":{"classes/TeamRepository.html":{},"coverage.html":{}}}],["src/team/repository/team.repository.ts:10",{"_index":1015,"title":{},"body":{"classes/TeamRepository.html":{}}}],["src/team/repository/team.repository.ts:25",{"_index":1017,"title":{},"body":{"classes/TeamRepository.html":{}}}],["src/team/repository/team.repository.ts:57",{"_index":1013,"title":{},"body":{"classes/TeamRepository.html":{}}}],["src/team/service/team.service.ts",{"_index":1034,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/team/service/team.service.ts:15",{"_index":1040,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/team/service/team.service.ts:20",{"_index":1042,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/team/service/team.service.ts:33",{"_index":1039,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/team/service/team.service.ts:9",{"_index":1037,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/team/team.module.ts",{"_index":1006,"title":{},"body":{"modules/TeamModule.html":{}}}],["src/typeorm.config.ts",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/controller/user.controller.ts",{"_index":1077,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controller/user.controller.ts:109",{"_index":1097,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:30",{"_index":1100,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:42",{"_index":1090,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:54",{"_index":1109,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:66",{"_index":1106,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:78",{"_index":1086,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controller/user.controller.ts:96",{"_index":1103,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/dto/connect",{"_index":450,"title":{},"body":{"classes/ConnectInRoomUserDto.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":456,"title":{},"body":{"classes/CreateGuestUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":1052,"title":{},"body":{"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts",{"_index":1147,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:11",{"_index":1155,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:15",{"_index":1158,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:19",{"_index":1157,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:23",{"_index":1153,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:27",{"_index":1149,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:31",{"_index":1152,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:34",{"_index":1151,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/user.dto.ts:7",{"_index":1156,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/entity/user.entity.ts",{"_index":1059,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entity/user.entity.ts:11",{"_index":1069,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:15",{"_index":1068,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:19",{"_index":1072,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:22",{"_index":1070,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:25",{"_index":1066,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:28",{"_index":1062,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:31",{"_index":1065,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:34",{"_index":1064,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:37",{"_index":1060,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:40",{"_index":1073,"title":{},"body":{"entities/User.html":{}}}],["src/user/entity/user.entity.ts:8",{"_index":1063,"title":{},"body":{"entities/User.html":{}}}],["src/user/repository/user.repository.ts",{"_index":1168,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/user/repository/user.repository.ts:101",{"_index":1190,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:19",{"_index":1174,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:30",{"_index":1183,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:46",{"_index":1185,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:64",{"_index":1188,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/repository/user.repository.ts:83",{"_index":1192,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/user/service/user.service.ts",{"_index":1195,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/service/user.service.ts:108",{"_index":1220,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:120",{"_index":1227,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:131",{"_index":1212,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:141",{"_index":1223,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:15",{"_index":1203,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:151",{"_index":1225,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:161",{"_index":1218,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:22",{"_index":1213,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:41",{"_index":1215,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:52",{"_index":1232,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:62",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:67",{"_index":1230,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:72",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:87",{"_index":1206,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/service/user.service.ts:97",{"_index":1208,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.module.ts",{"_index":1163,"title":{},"body":{"modules/UserModule.html":{}}}],["ssl",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":1374,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1376,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1377,"title":{},"body":{"index.html":{}}}],["started",{"_index":566,"title":{"index.html":{}},"body":{"classes/EventGateway.html":{}}}],["started_at",{"_index":424,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{}}}],["starter",{"_index":1367,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":404,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Room.html":{},"classes/RoomRepository.html":{}}}],["statusenum",{"_index":740,"title":{},"body":{"entities/Room.html":{},"classes/RoomRepository.html":{},"miscellaneous/enumerations.html":{}}}],["statusenum.on",{"_index":917,"title":{},"body":{"classes/RoomRepository.html":{}}}],["stay",{"_index":1398,"title":{},"body":{"index.html":{}}}],["stop",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["store",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy.ts",{"_index":683,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["strategy.ts:17",{"_index":687,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy.ts:8",{"_index":685,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy/jwt",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"classes/getRoomsFilterDto.html":{},"miscellaneous/variables.html":{}}}],["subscribemessage",{"_index":547,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('changeroommode",{"_index":501,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('joinroom",{"_index":505,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('launchgame",{"_index":508,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('newresult",{"_index":511,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('newtextdelete",{"_index":515,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('newtextinsert",{"_index":518,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('nextexercise",{"_index":521,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('ontab",{"_index":527,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('usercursorchange",{"_index":530,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('userjoinsroom",{"_index":533,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('userjoinsteam",{"_index":536,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('usersendpseudo",{"_index":539,"title":{},"body":{"classes/EventGateway.html":{}}}],["subscribemessage('validateteams",{"_index":542,"title":{},"body":{"classes/EventGateway.html":{}}}],["success",{"_index":1143,"title":{},"body":{"controllers/UserController.html":{}}}],["successfully",{"_index":1144,"title":{},"body":{"controllers/UserController.html":{}}}],["super",{"_index":691,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(message",{"_index":354,"title":{},"body":{"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/NoPrintException.html":{}}}],["support",{"_index":1391,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sur",{"_index":1180,"title":{},"body":{"classes/UserRepository.html":{}}}],["sure",{"_index":706,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["svg",{"_index":1409,"title":{},"body":{"modules.html":{}}}],["switch(body.language",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["synchronize",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":910,"title":{},"body":{"classes/RoomRepository.html":{}}}],["table",{"_index":383,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":384,"title":{"entities/Team.html":{}},"body":{"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["team\"(\"id",{"_index":444,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["team.dto",{"_index":1019,"title":{},"body":{"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{}}}],["team.dto.ts",{"_index":466,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/UpdateUserTeamDto.html":{},"coverage.html":{}}}],["team.dto.ts:5",{"_index":468,"title":{},"body":{"classes/CreateTeamDto.html":{},"classes/UpdateUserTeamDto.html":{}}}],["team.dto.ts:8",{"_index":467,"title":{},"body":{"classes/CreateTeamDto.html":{}}}],["team.room",{"_index":743,"title":{},"body":{"entities/Room.html":{}}}],["team.users",{"_index":1075,"title":{},"body":{"entities/User.html":{}}}],["team.users)@joincolumn({name",{"_index":1071,"title":{},"body":{"entities/User.html":{}}}],["team/entity/team.entity",{"_index":753,"title":{},"body":{"entities/Room.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["team/service/team.service",{"_index":544,"title":{},"body":{"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["team/team.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/UserModule.html":{}}}],["team_1",{"_index":758,"title":{},"body":{"classes/RoomClass.html":{},"miscellaneous/enumerations.html":{}}}],["team_2",{"_index":759,"title":{},"body":{"classes/RoomClass.html":{},"miscellaneous/enumerations.html":{}}}],["team_id",{"_index":413,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{}}}],["team_name",{"_index":423,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{}}}],["teamcontroller",{"_index":987,"title":{"controllers/TeamController.html":{}},"body":{"controllers/TeamController.html":{},"modules/TeamModule.html":{},"coverage.html":{}}}],["teamenum",{"_index":783,"title":{},"body":{"classes/RoomClass.html":{},"miscellaneous/enumerations.html":{}}}],["teamenum.team_1",{"_index":805,"title":{},"body":{"classes/RoomClass.html":{}}}],["teammodule",{"_index":125,"title":{"modules/TeamModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["teamrepository",{"_index":995,"title":{"classes/TeamRepository.html":{}},"body":{"controllers/TeamController.html":{},"modules/TeamModule.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["teams",{"_index":725,"title":{},"body":{"entities/Room.html":{},"controllers/RoomController.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{}}}],["teams')@usepipes(new",{"_index":847,"title":{},"body":{"controllers/RoomController.html":{}}}],["teams.push(team",{"_index":1026,"title":{},"body":{"classes/TeamRepository.html":{}}}],["teams.users",{"_index":954,"title":{},"body":{"injectables/RoomService.html":{}}}],["teams[0",{"_index":572,"title":{},"body":{"classes/EventGateway.html":{}}}],["teamservice",{"_index":495,"title":{"injectables/TeamService.html":{}},"body":{"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/TeamController.html":{},"modules/TeamModule.html":{},"injectables/TeamService.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["teamtoremove",{"_index":828,"title":{},"body":{"classes/RoomClass.html":{}}}],["teamtoremove.findindex((usertofind",{"_index":831,"title":{},"body":{"classes/RoomClass.html":{}}}],["teamtoremove.splice(index",{"_index":833,"title":{},"body":{"classes/RoomClass.html":{}}}],["test",{"_index":1380,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1383,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1382,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1379,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1389,"title":{},"body":{"index.html":{}}}],["this._authservice.loginjwt(req.user",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._authservice.validateuser(email",{"_index":715,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this._jwtservice.sign(payload",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._roomrepository.createroom(createroomdto",{"_index":956,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.delete(id",{"_index":964,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.find",{"_index":967,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.findone",{"_index":950,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.findone(room_id",{"_index":958,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.update(room.id",{"_index":960,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.update(room_id",{"_index":957,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomrepository.updateroommode(id",{"_index":963,"title":{},"body":{"injectables/RoomService.html":{}}}],["this._roomservice.changehasstarted(room.id",{"_index":573,"title":{},"body":{"classes/EventGateway.html":{}}}],["this._roomservice.changeownerrandom(user.room.id",{"_index":1142,"title":{},"body":{"controllers/UserController.html":{}}}],["this._roomservice.createroom(createroomdto",{"_index":875,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._roomservice.deleteroom(id",{"_index":887,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._roomservice.getroombyid(connectinroomuserdto.room_id",{"_index":1126,"title":{},"body":{"controllers/UserController.html":{}}}],["this._roomservice.getroombyid(id",{"_index":870,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._roomservice.getroomdetailsbypin(body.pin",{"_index":556,"title":{},"body":{"classes/EventGateway.html":{}}}],["this._roomservice.getroomdetailsbypin(pin",{"_index":872,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._roomservice.updateroommode(id",{"_index":885,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._teamrepository.addpoint(id",{"_index":1047,"title":{},"body":{"injectables/TeamService.html":{}}}],["this._teamrepository.createteams(createteamdtolist",{"_index":1043,"title":{},"body":{"injectables/TeamService.html":{}}}],["this._teamrepository.findone",{"_index":1044,"title":{},"body":{"injectables/TeamService.html":{}}}],["this._teamservice.addpoint(id",{"_index":1002,"title":{},"body":{"controllers/TeamController.html":{}}}],["this._teamservice.createteams",{"_index":878,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._teamservice.getteambyid(updateuserteamdto.team_id",{"_index":1133,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userrepository.createguestuser(userguest",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.createuser(user",{"_index":1245,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.findone",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.findone(id",{"_index":1248,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.findone(param",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.remove(user",{"_index":1250,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.save(user",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.update(id",{"_index":1249,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.updateguestintouser(user",{"_index":1246,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.updateuserforroom(userid",{"_index":1247,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.updateuserpseudo(id",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userrepository.updateusersocket(id",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["this._userservice.createguestuser(userguestdto",{"_index":1120,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.createuser(body",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._userservice.getone(id",{"_index":1136,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.getone(query.id",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._userservice.getuserbyid(id",{"_index":1117,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.getuserbyid(query.id",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._userservice.getuserbyparam",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._userservice.getuserbyparam({where",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._userservice.removeuserbyid(user",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._userservice.updateguestintouser(body",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._userservice.updatenullroom(id",{"_index":1141,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.updatenullteam(id",{"_index":1139,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.updateuserforroom(id",{"_index":1130,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.updateuserpseudo(id",{"_index":1124,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.updateuserroom(room.owner.id",{"_index":876,"title":{},"body":{"controllers/RoomController.html":{}}}],["this._userservice.updateusersocket(id",{"_index":1122,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.updateuserteam(id",{"_index":1134,"title":{},"body":{"controllers/UserController.html":{}}}],["this._userservice.updateuserteam(user.id",{"_index":571,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.appservice.gethello",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["this.connectedusers.find(user",{"_index":798,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.connectedusers.push(user",{"_index":797,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.connectedusers[this.connectedusers.findindex(searchuser",{"_index":808,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.create",{"_index":915,"title":{},"body":{"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserRepository.html":{}}}],["this.generatepin",{"_index":955,"title":{},"body":{"injectables/RoomService.html":{}}}],["this.getconnecteduser(socketid",{"_index":800,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.getuserbyid(id",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["this.manager.connection.createqueryrunner",{"_index":1022,"title":{},"body":{"classes/TeamRepository.html":{}}}],["this.message",{"_index":355,"title":{},"body":{"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/NoPrintException.html":{}}}],["this.pin",{"_index":818,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.removeuserfromunknownteam(user",{"_index":804,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.save(gamedto",{"_index":648,"title":{},"body":{"classes/GameRepository.html":{}}}],["this.save(room",{"_index":918,"title":{},"body":{"classes/RoomRepository.html":{}}}],["this.save(team",{"_index":1021,"title":{},"body":{"classes/TeamRepository.html":{}}}],["this.save(user",{"_index":1194,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.server.sockets.in(body.pin).emit('changeroommode",{"_index":561,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.server.sockets.in(body.pin).emit('launchgame",{"_index":574,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.server.sockets.in(body.pin).emit('newresult",{"_index":592,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.server.sockets.in(body.pin).emit('userjoinsteam",{"_index":563,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.server.sockets.in(body.pin).emit('validateteams",{"_index":579,"title":{},"body":{"classes/EventGateway.html":{}}}],["this.team_1",{"_index":829,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_1.findindex((usertofind",{"_index":812,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_1.push(user",{"_index":806,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_1.splice(userindex",{"_index":815,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_2",{"_index":830,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_2.findindex((usertofind",{"_index":819,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_2.push(user",{"_index":807,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.team_2.splice(userindex",{"_index":820,"title":{},"body":{"classes/RoomClass.html":{}}}],["this.update(id",{"_index":919,"title":{},"body":{"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserRepository.html":{}}}],["throw",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/RoomService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":390,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["token",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["total_to_win",{"_index":417,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"classes/GameDto.html":{}}}],["touch",{"_index":1399,"title":{},"body":{"index.html":{}}}],["transform",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["transformer",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["trouv",{"_index":823,"title":{},"body":{"classes/RoomClass.html":{}}}],["true",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"entities/Room.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"classes/TeamRepository.html":{}}}],["ts",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["tsconfig",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":1405,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"classes/AddPointDto.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"classes/GameDto.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/PayloadInterface.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"controllers/TeamController.html":{},"classes/TeamRepository.html":{},"injectables/TeamService.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserModel.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/getRoomsFilterDto.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":619,"title":{},"body":{"entities/Game.html":{},"classes/GameDto.html":{}}}],["type.enum.ts",{"_index":1337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":381,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"classes/GameRepository.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameRepository.html":{},"entities/Room.html":{},"classes/RoomRepository.html":{},"entities/Team.html":{},"classes/TeamRepository.html":{},"entities/User.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["typeormconfig",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HistoricGameModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([game",{"_index":639,"title":{},"body":{"modules/GameModule.html":{}}}],["typeormmodule.forfeature([historicgame",{"_index":674,"title":{},"body":{"modules/HistoricGameModule.html":{}}}],["typeormmodule.forfeature([room",{"_index":896,"title":{},"body":{"modules/RoomModule.html":{}}}],["typeormmodule.forfeature([team",{"_index":1009,"title":{},"body":{"modules/TeamModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1167,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1366,"title":{},"body":{"index.html":{}}}],["u",{"_index":912,"title":{},"body":{"classes/RoomRepository.html":{}}}],["un",{"_index":364,"title":{},"body":{"classes/BadResultException.html":{},"classes/RoomClass.html":{}}}],["unauthorizedexception",{"_index":710,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":792,"title":{},"body":{"classes/RoomClass.html":{}}}],["une",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["unique",{"_index":408,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/User.html":{}}}],["unit",{"_index":1378,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/TeamRepository.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1419,"title":{},"body":{"properties.html":{}}}],["up",{"_index":373,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["up(queryrunner",{"_index":379,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["update",{"_index":437,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{}}}],["updated_at",{"_index":392,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/Game.html":{},"entities/Room.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["updateguestintouser",{"_index":1170,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["updateguestintouser(user",{"_index":1219,"title":{},"body":{"injectables/UserService.html":{}}}],["updateguestintouser(userdto",{"_index":1184,"title":{},"body":{"classes/UserRepository.html":{}}}],["updatemode",{"_index":841,"title":{},"body":{"controllers/RoomController.html":{}}}],["updatemode(@param('id",{"_index":884,"title":{},"body":{"controllers/RoomController.html":{}}}],["updatemode(id",{"_index":858,"title":{},"body":{"controllers/RoomController.html":{}}}],["updatenullroom",{"_index":1198,"title":{},"body":{"injectables/UserService.html":{}}}],["updatenullroom(id",{"_index":1222,"title":{},"body":{"injectables/UserService.html":{}}}],["updatenullteam",{"_index":1199,"title":{},"body":{"injectables/UserService.html":{}}}],["updatenullteam(id",{"_index":1224,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepseudo",{"_index":1082,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepseudo(@param('id",{"_index":1123,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepseudo(id",{"_index":1104,"title":{},"body":{"controllers/UserController.html":{}}}],["updateroommode",{"_index":883,"title":{},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{}}}],["updateroommode(id",{"_index":903,"title":{},"body":{"classes/RoomRepository.html":{},"injectables/RoomService.html":{}}}],["updateroommodedto",{"_index":859,"title":{"classes/UpdateRoomModeDto.html":{}},"body":{"controllers/RoomController.html":{},"classes/RoomRepository.html":{},"injectables/RoomService.html":{},"classes/UpdateRoomModeDto.html":{},"coverage.html":{}}}],["updatesocket",{"_index":1083,"title":{},"body":{"controllers/UserController.html":{}}}],["updatesocket(@param('id",{"_index":1121,"title":{},"body":{"controllers/UserController.html":{}}}],["updatesocket(id",{"_index":1107,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserdto",{"_index":1131,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserforroom",{"_index":1171,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["updateuserforroom(id",{"_index":1187,"title":{},"body":{"classes/UserRepository.html":{}}}],["updateuserforroom(userid",{"_index":1226,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserpseudo",{"_index":1172,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["updateuserpseudo(id",{"_index":1189,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["updateuserpseudodto",{"_index":1051,"title":{"classes/UpdateUserPseudoDto.html":{}},"body":{"classes/UpdateUserPseudoDto.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserroom",{"_index":1200,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserroom(id",{"_index":1231,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusersocket",{"_index":1173,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["updateusersocket(id",{"_index":1191,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["updateusersocketdto",{"_index":1055,"title":{"classes/UpdateUserSocketDto.html":{}},"body":{"classes/UpdateUserSocketDto.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserteam",{"_index":1201,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserteam(id",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserteamdto",{"_index":1058,"title":{"classes/UpdateUserTeamDto.html":{}},"body":{"classes/UpdateUserTeamDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["uploads/temp",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["uq_e12875dfb3b1d92d7d7c5377e22",{"_index":414,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["used",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('/login",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":222,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseMigration1653035270972.html":{},"classes/EventGateway.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"classes/HistoricGameDto.html":{},"injectables/LocalStrategy.html":{},"entities/Room.html":{},"classes/RoomClass.html":{},"controllers/RoomController.html":{},"injectables/RoomService.html":{},"entities/Team.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user\"(\"id",{"_index":439,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["user)].team",{"_index":810,"title":{},"body":{"classes/RoomClass.html":{}}}],["user.dto",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":451,"title":{},"body":{"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":459,"title":{},"body":{"classes/CreateGuestUserDto.html":{},"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":471,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":474,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":454,"title":{},"body":{"classes/ConnectInRoomUserDto.html":{}}}],["user.dto.ts:6",{"_index":472,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":458,"title":{},"body":{"classes/CreateGuestUserDto.html":{}}}],["user.dto.ts:8",{"_index":453,"title":{},"body":{"classes/ConnectInRoomUserDto.html":{}}}],["user.email",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.is_guest",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.password",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.pseudo",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.room",{"_index":746,"title":{},"body":{"entities/Room.html":{},"injectables/UserService.html":{}}}],["user.slug",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.socketid",{"_index":799,"title":{},"body":{"classes/RoomClass.html":{}}}],["user.team",{"_index":983,"title":{},"body":{"entities/Team.html":{},"injectables/UserService.html":{}}}],["user.username",{"_index":802,"title":{},"body":{"classes/RoomClass.html":{}}}],["user/dto/create",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/entity/user.entity",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Game.html":{},"entities/HistoricGame.html":{},"entities/Room.html":{},"injectables/RoomService.html":{},"entities/Team.html":{}}}],["user/service/user.service",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/RoomController.html":{}}}],["user/user.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{}}}],["user_id",{"_index":426,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"entities/HistoricGame.html":{}}}],["usercontroller",{"_index":1076,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercursorchange",{"_index":487,"title":{},"body":{"classes/EventGateway.html":{}}}],["usercursorchange(@connectedsocket",{"_index":580,"title":{},"body":{"classes/EventGateway.html":{}}}],["usercursorchange(client",{"_index":529,"title":{},"body":{"classes/EventGateway.html":{}}}],["userdto",{"_index":1146,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["userguest",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["userguest.id",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["userguest.is_guest",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["userguestdto",{"_index":1094,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{}}}],["userid",{"_index":1229,"title":{},"body":{"injectables/UserService.html":{}}}],["userindex",{"_index":811,"title":{},"body":{"classes/RoomClass.html":{}}}],["userjoinsroom",{"_index":488,"title":{},"body":{"classes/EventGateway.html":{}}}],["userjoinsroom(@connectedsocket",{"_index":558,"title":{},"body":{"classes/EventGateway.html":{}}}],["userjoinsroom(client",{"_index":532,"title":{},"body":{"classes/EventGateway.html":{}}}],["userjoinsteam",{"_index":489,"title":{},"body":{"classes/EventGateway.html":{}}}],["userjoinsteam(@connectedsocket",{"_index":562,"title":{},"body":{"classes/EventGateway.html":{}}}],["userjoinsteam(client",{"_index":535,"title":{},"body":{"classes/EventGateway.html":{}}}],["usermodel",{"_index":768,"title":{"interfaces/UserModel.html":{}},"body":{"classes/RoomClass.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["usermodule",{"_index":126,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/RoomClass.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":713,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrepository",{"_index":1165,"title":{"classes/UserRepository.html":{}},"body":{"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["users",{"_index":726,"title":{},"body":{"entities/Room.html":{},"injectables/RoomService.html":{},"entities/Team.html":{}}}],["usersendpseudo",{"_index":490,"title":{},"body":{"classes/EventGateway.html":{}}}],["usersendpseudo(@connectedsocket",{"_index":555,"title":{},"body":{"classes/EventGateway.html":{}}}],["usersendpseudo(client",{"_index":538,"title":{},"body":{"classes/EventGateway.html":{}}}],["userservice",{"_index":211,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventGateway.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertofind",{"_index":832,"title":{},"body":{"classes/RoomClass.html":{}}}],["usertofind.socketid",{"_index":813,"title":{},"body":{"classes/RoomClass.html":{}}}],["userwithsameemail",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["utilisateur",{"_index":786,"title":{},"body":{"classes/RoomClass.html":{},"classes/UserRepository.html":{}}}],["uuid",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateGuestUserDto.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{}}}],["uuidv4",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateGuestUserDto.html":{},"classes/RoomRepository.html":{},"classes/TeamRepository.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"dependencies.html":{}}}],["v4",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["validate",{"_index":684,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":704,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":686,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateteams",{"_index":491,"title":{},"body":{"classes/EventGateway.html":{}}}],["validateteams(@connectedsocket",{"_index":575,"title":{},"body":{"classes/EventGateway.html":{}}}],["validateteams(client",{"_index":541,"title":{},"body":{"classes/EventGateway.html":{}}}],["validateuser",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoomController.html":{},"controllers/UserController.html":{}}}],["validator",{"_index":21,"title":{},"body":{"classes/AddPointDto.html":{},"classes/ConnectInRoomUserDto.html":{},"classes/CreateGuestUserDto.html":{},"classes/CreateRoomDto.html":{},"classes/CreateTeamDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateRoomModeDto.html":{},"classes/UpdateUserPseudoDto.html":{},"classes/UpdateUserSocketDto.html":{},"classes/UpdateUserTeamDto.html":{},"classes/UserDto.html":{},"dependencies.html":{},"classes/getRoomsFilterDto.html":{}}}],["value",{"_index":374,"title":{},"body":{"classes/BaseMigration1653035270972.html":{},"classes/CreateGuestUserDto.html":{},"classes/GameRepository.html":{},"classes/RoomClass.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":770,"title":{"miscellaneous/variables.html":{}},"body":{"classes/RoomClass.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":387,"title":{},"body":{"classes/BaseMigration1653035270972.html":{}}}],["version",{"_index":1417,"title":{},"body":{"properties.html":{}}}],["void",{"_index":513,"title":{},"body":{"classes/EventGateway.html":{},"classes/RoomClass.html":{}}}],["vs",{"_index":1348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":1375,"title":{},"body":{"index.html":{}}}],["website",{"_index":1403,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":548,"title":{},"body":{"classes/EventGateway.html":{}}}],["websocketserver",{"_index":498,"title":{},"body":{"classes/EventGateway.html":{}}}],["where('r.pin",{"_index":913,"title":{},"body":{"classes/RoomRepository.html":{}}}],["y",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["yes",{"_index":353,"title":{},"body":{"classes/BadCodeException.html":{},"classes/BadResultException.html":{},"classes/NoPrintException.html":{}}}],["yo",{"_index":185,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":1394,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoomModule.html":{},"modules/TeamModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddPointDto.html":{"url":"classes/AddPointDto.html","title":"class - AddPointDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddPointDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/team/dto/add-point.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                points\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/dto/add-point.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from \"class-validator\";\n\nexport class AddPointDto {\n    @IsNumber()\n    @IsNotEmpty()\n    points: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                launchScript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        launchScript\n                        \n                    \n                \n            \n            \n                \nlaunchScript(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('editor')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { NoPrintException } from './exceptions/NoPrintException';\nimport { BadCodeException } from './exceptions/BadCodeException';\nimport { BadResultException } from './exceptions/BadResultException';\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { execSync } from 'child_process';\nimport {v4 as uuidv4} from 'uuid';\nimport * as fs from 'fs';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Post('editor')\n  launchScript(@Body() body) \n  {\n    let extension = '';\n    let executable = ''; \n    switch(body.language) {\n      case 'php':\n        extension = 'php'\n        executable = 'php'\n        break\n\n      case 'javascript':\n        extension = 'js'\n        executable = 'node'\n        break\n\n      case 'python':\n        extension = 'py'\n        executable = 'python3'\n        break\n\n      default:\n        return 'Invalid language'\n    }\n\n    const fileName: string = uuidv4() + '.' + extension;\n    const filePath: string = 'uploads/temp/' + fileName;\n    fs.appendFileSync(filePath, body.code);\n\n    let result = {};\n    try {\n      const output = execSync(`${executable} ${filePath}`).toString();\n\n      if(!body.code.includes('console.log')) {\n        throw new NoPrintException('N\\oubliez pas le console.log ! ;)');\n      }\n\n      if(output.trim() != body.expectedResult) {\n        throw new BadResultException;\n      }\n\n      body.expectedCode.forEach(code => {\n        if(!body.code.includes(code)) {\n          throw new BadCodeException;\n        }\n      });\n\n      result = {\n        output: output.trim()\n      };\n    } catch(err) {\n      result = {\n        output: err.stderr ? err.stderr.toString() : null,\n        error: err.stderr ? 'Oups ! On dirait qu\\'il y a une erreur :(' : err.message\n      }\n    }\n    fs.unlinkSync(filePath);\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nRoomModule\n\nRoomModule\n\nAppModule -->\n\nRoomModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTeamModule\n\nTeamModule\n\nAppModule -->\n\nTeamModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            RoomModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TeamModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { EventGateway } from './gateways/event.gateway';\nimport { RoomModule } from './room/room.module';\nimport { UserModule } from './user/user.module';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport { GameModule } from './game/game.module';\nimport { TeamModule } from './team/team.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { SharedModule } from './shared/shared.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DATABASE_HOST,\n      port: +process.env.DATABASE_PORT,\n      username: process.env.DATABASE_USER,\n      password: process.env.DATABASE_PASSWORD,\n      database: process.env.DATABASE_NAME,\n      entities: [__dirname + '/**/*.entity.ts', __dirname + '/**/*.entity.js'],\n      migrationsRun: false,\n      logging: false,\n      migrationsTableName: \"migration\",\n      migrations: [__dirname + '/migration/**/*.ts', __dirname + '/migration/**/*.js'],\n      synchronize: false,\n      cli: {\n        migrationsDir: 'src/migration'\n      },\n      autoLoadEntities: true,\n      ssl:\n        process.env.NODE_ENV === 'production'\n            ? { rejectUnauthorized: false }\n            : false,\n    }),\n\n    RoomModule,\n    UserModule,\n    GameModule,\n    TeamModule,\n    AuthModule,\n    SharedModule\n  ],\n  controllers: [AppController],\n  providers: [AppService, EventGateway],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Yo mec !';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: CreateUserDto, query, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/auth/controller/auth.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    HttpStatus,\n    Post,\n    Query,\n    Request,\n    Res,\n    UseGuards,\n    UsePipes,\n    ValidationPipe\n} from '@nestjs/common';\nimport { UserService } from \"../../user/service/user.service\";\nimport { hashPassword } from \"../../shared/functions/hash-password\";\nimport { CreateUserDto } from \"../../user/dto/create-user.dto\";\nimport { LocalAuthGuard } from \"../guard/local-auth.guard\";\nimport { AuthService } from \"../service/auth.service\";\nimport { User } from \"../../user/entity/user.entity\";\n\n\n@Controller('auth')\nexport class AuthController {\n\n    constructor( \n        private readonly _userService: UserService,\n        private readonly _authService: AuthService\n    ) {\n    }\n\n    @UseGuards(LocalAuthGuard)\n    @Post('/login')\n    public async login(@Request() req, @Query() query)\n    {\n        // We need to remove the User Guest that might have been created\n        if (('id' in query) && (req.user.id != query.id)) {\n            const user = await this._userService.getOne(query.id, {});\n            if (user.is_guest) {\n                await this._userService.removeUserById(user);\n            }\n        }\n\n        //If the request pass the guard passport then call the JWT function to generate JWT Token\n        return this._authService.loginJwt(req.user);\n    }\n\n    @Post('/register')\n    @UsePipes(new ValidationPipe({ transform: true }))\n    public async register(@Body() body: CreateUserDto, @Query() query, @Res() res)\n    {\n        // When a user register we might get the localstorage to get the data that are already store\n        // But if we pass directly by Postman we don't have a guest user, so we return an error\n        if (!query || !query.id) {\n            return {error: \"No localstorage passed\"};\n        }\n\n        // Get a user that have this email\n        const userWithSameEmail = await this._userService.getUserByParam({where: {email: body.email}});\n        if (userWithSameEmail) {\n            return res.status(HttpStatus.NOT_ACCEPTABLE).json({\n                error: 'This email has already been used'\n            });\n        }\n\n        const userGuest: User = await this._userService.getUserById(query.id);\n\n        if (!(\"is_guest\" in userGuest)) {\n            return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n                error: 'The user is does not have a guest field'\n            });\n        }\n\n        // Hash the password\n        body.password = await hashPassword(body.password);\n\n        // If user is not a guest then we stop here\n        if (!userGuest.is_guest) {\n            return res.status(HttpStatus.CREATED).json({\n                user: await this._userService.createUser(body)\n            });\n        }\n\n        return res.status(HttpStatus.CREATED).json({\n            user: await this._userService.updateGuestIntoUser(body, userGuest.id)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './service/auth.service';\nimport { UserModule } from \"../user/user.module\";\nimport { LocalStrategy } from \"./strategy/local.strategy\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthController } from './controller/auth.controller';\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { jwtConstant } from \"./constant/jwt-constant\";\nimport { JwtStrategy } from \"./strategy/jwt-strategy\";\n\n@Module({\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  imports: [\n      UserModule,\n      PassportModule,\n      JwtModule.register({\n        secret: jwtConstant.jwtSecret,\n        signOptions: { expiresIn: jwtConstant.jwtTime }\n      })\n  ],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/service/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loginJwt\n                            \n                            \n                                    Public\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/service/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginJwt\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginJwt(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:45\n                \n            \n\n\n            \n                \n                    Return a JWT Token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/service/auth.service.ts:23\n                \n            \n\n\n            \n                \n                    Get user in database and compare his password with the one given\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { UserService } from \"../../user/service/user.service\";\nimport * as bcrypt from 'bcrypt';\nimport { User } from \"../../user/entity/user.entity\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { PayloadInterface } from \"../models/payload.interface\";\n\n@Injectable()\nexport class AuthService {\n\n    constructor(\n        private readonly _userService: UserService,\n        private readonly _jwtService: JwtService\n    ) {\n    }\n\n    /**\n     * Get user in database and compare his password with the one given\n     *\n     * @param email\n     * @param password\n     */\n    public async validateUser(email: string, password: string): Promise\n    {\n        // Get User from service\n        const user: User = await this._userService.getUserByParam({\n            where: {email: email}\n        });\n        if (!user) {\n            throw new NotFoundException('User not found');\n        }\n\n        const compared = await bcrypt.compare(password, user.password);\n        if (!compared) {\n            return {msg: 'Mot de passe invalide'};\n        }\n        return user;\n    }\n\n    /**\n     * Return a JWT Token\n     *\n     * @param user\n     */\n    public async loginJwt(user: User)\n    {\n        const payload: PayloadInterface = { email: user.email, id: user.id, slug: user.slug };\n        return {\n            id: user.id,\n            access_token: this._jwtService.sign(payload),\n            username: user.pseudo\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadCodeException.html":{"url":"classes/BadCodeException.html","title":"class - BadCodeException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadCodeException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/BadCodeException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/BadCodeException.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BadCodeException extends Error {\n    constructor(message?) {\n      super(message);\n  \n      this.message = message ?? \"Oups, le code ne correspond pas à celui de départ.\";\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadResultException.html":{"url":"classes/BadResultException.html","title":"class - BadResultException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadResultException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/BadResultException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/BadResultException.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BadResultException extends Error {\n  constructor(message?) {\n    super(message);\n\n    this.message = message ?? \"Oups, c'est un mauvais résultat.\";\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMigration1653035270972.html":{"url":"classes/BaseMigration1653035270972.html","title":"class - BaseMigration1653035270972","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMigration1653035270972\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migration/1653035270972-BaseMigration.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BaseMigration1653035270972'\n                    \n                \n                    \n                        \n                                Defined in src/migration/1653035270972-BaseMigration.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1653035270972-BaseMigration.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migration/1653035270972-BaseMigration.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class BaseMigration1653035270972 implements MigrationInterface {\n    name = 'BaseMigration1653035270972'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE \"team\" (\"id\" SERIAL NOT NULL, \"slug\" character varying NOT NULL, \"name\" character varying NOT NULL, \"points\" integer NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"room_id\" integer, CONSTRAINT \"PK_f57d8293406df4af348402e4b74\" PRIMARY KEY (\"id\"))`);\n        await queryRunner.query(`CREATE TABLE \"room\" (\"id\" SERIAL NOT NULL, \"slug\" character varying NOT NULL, \"mode\" character varying, \"name\" character varying NOT NULL, \"pin\" character varying NOT NULL, \"access\" character varying NOT NULL, \"has_started\" boolean NOT NULL DEFAULT false, \"status\" character varying NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"owner_id\" integer, \"game_id\" integer, CONSTRAINT \"REL_6dfeeefd28618a1351a1a1a917\" UNIQUE (\"owner_id\"), CONSTRAINT \"REL_7fb910c4989cd7de4e2e05fb7a\" UNIQUE (\"game_id\"), CONSTRAINT \"PK_c6d46db005d623e691b2fbcba23\" PRIMARY KEY (\"id\"))`);\n        await queryRunner.query(`CREATE TABLE \"user\" (\"id\" SERIAL NOT NULL, \"slug\" character varying NOT NULL, \"socket_id\" character varying NOT NULL, \"pseudo\" character varying, \"email\" character varying, \"password\" character varying, \"is_guest\" boolean NOT NULL DEFAULT true, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"room_id\" integer, \"team_id\" integer, CONSTRAINT \"UQ_e12875dfb3b1d92d7d7c5377e22\" UNIQUE (\"email\"), CONSTRAINT \"PK_cace4a159ff9f2512dd42373760\" PRIMARY KEY (\"id\"))`);\n        await queryRunner.query(`CREATE TABLE \"game\" (\"id\" SERIAL NOT NULL, \"slug\" character varying NOT NULL, \"name\" character varying NOT NULL, \"type\" integer NOT NULL, \"total_to_win\" integer NOT NULL, \"access\" character varying NOT NULL, \"language\" integer NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"creator_id\" integer, CONSTRAINT \"REL_1f085438e7c67754389f6b459f\" UNIQUE (\"creator_id\"), CONSTRAINT \"PK_352a30652cd352f552fef73dec5\" PRIMARY KEY (\"id\"))`);\n        await queryRunner.query(`CREATE TABLE \"historic_game\" (\"id\" SERIAL NOT NULL, \"slug\" character varying NOT NULL, \"room_name\" character varying NOT NULL, \"team_name\" character varying NOT NULL, \"result\" character varying NOT NULL, \"started_at\" TIMESTAMP NOT NULL, \"finished_at\" TIMESTAMP NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"user_id\" integer, CONSTRAINT \"REL_c3cd9ba756e81a8e82e4b02c99\" UNIQUE (\"user_id\"), CONSTRAINT \"PK_ec297b17a83b2745b5d6630efd6\" PRIMARY KEY (\"id\"))`);\n        await queryRunner.query(`ALTER TABLE \"team\" ADD CONSTRAINT \"FK_3ddf8a30b99815c84f01849dcfa\" FOREIGN KEY (\"room_id\") REFERENCES \"room\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \"room\" ADD CONSTRAINT \"FK_6dfeeefd28618a1351a1a1a9171\" FOREIGN KEY (\"owner_id\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \"room\" ADD CONSTRAINT \"FK_7fb910c4989cd7de4e2e05fb7a9\" FOREIGN KEY (\"game_id\") REFERENCES \"game\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \"user\" ADD CONSTRAINT \"FK_9416d08fb276a62be271c9a3c21\" FOREIGN KEY (\"room_id\") REFERENCES \"room\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \"user\" ADD CONSTRAINT \"FK_155dbc144ff2bd4713fdf1f6c77\" FOREIGN KEY (\"team_id\") REFERENCES \"team\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \"game\" ADD CONSTRAINT \"FK_1f085438e7c67754389f6b459f7\" FOREIGN KEY (\"creator_id\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \"historic_game\" ADD CONSTRAINT \"FK_c3cd9ba756e81a8e82e4b02c994\" FOREIGN KEY (\"user_id\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"historic_game\" DROP CONSTRAINT \"FK_c3cd9ba756e81a8e82e4b02c994\"`);\n        await queryRunner.query(`ALTER TABLE \"game\" DROP CONSTRAINT \"FK_1f085438e7c67754389f6b459f7\"`);\n        await queryRunner.query(`ALTER TABLE \"user\" DROP CONSTRAINT \"FK_155dbc144ff2bd4713fdf1f6c77\"`);\n        await queryRunner.query(`ALTER TABLE \"user\" DROP CONSTRAINT \"FK_9416d08fb276a62be271c9a3c21\"`);\n        await queryRunner.query(`ALTER TABLE \"room\" DROP CONSTRAINT \"FK_7fb910c4989cd7de4e2e05fb7a9\"`);\n        await queryRunner.query(`ALTER TABLE \"room\" DROP CONSTRAINT \"FK_6dfeeefd28618a1351a1a1a9171\"`);\n        await queryRunner.query(`ALTER TABLE \"team\" DROP CONSTRAINT \"FK_3ddf8a30b99815c84f01849dcfa\"`);\n        await queryRunner.query(`DROP TABLE \"historic_game\"`);\n        await queryRunner.query(`DROP TABLE \"game\"`);\n        await queryRunner.query(`DROP TABLE \"user\"`);\n        await queryRunner.query(`DROP TABLE \"room\"`);\n        await queryRunner.query(`DROP TABLE \"team\"`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectInRoomUserDto.html":{"url":"classes/ConnectInRoomUserDto.html","title":"class - ConnectInRoomUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectInRoomUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/connect-in-room-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                pseudo\n                            \n                            \n                                    Public\n                                    Readonly\n                                room_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pseudo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/connect-in-room-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        room_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/connect-in-room-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber } from \"class-validator\";\n\nexport class ConnectInRoomUserDto {\n    @IsNumber()\n    public readonly room_id: number;\n\n    @IsString()\n    public readonly pseudo: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGuestUserDto.html":{"url":"classes/CreateGuestUserDto.html","title":"class - CreateGuestUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGuestUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-guest-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                slug\n                            \n                            \n                                    Public\n                                    Readonly\n                                socket_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuid()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-guest-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        socket_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-guest-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from \"uuidv4\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateGuestUserDto {\n    @IsNotEmpty()\n    @IsString()\n    public slug: string = uuid();\n\n    @IsString()\n    public readonly socket_id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoomDto.html":{"url":"classes/CreateRoomDto.html","title":"class - CreateRoomDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoomDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/dto/create-room.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                owner_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/dto/create-room.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber } from 'class-validator';\n\nexport class CreateRoomDto {\n    @IsNumber()\n    public owner_id;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeamDto.html":{"url":"classes/CreateTeamDto.html","title":"class - CreateTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/team/dto/create-team.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                room\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/dto/create-team.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/dto/create-team.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber } from 'class-validator';\n\nexport class CreateTeamDto {\n    @IsNumber()\n    public readonly room;\n\n    @IsString()\n    public readonly name: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                pseudo\n                            \n                            \n                                    Public\n                                socket_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pseudo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        socket_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class CreateUserDto {\n    @IsString()\n    @IsNotEmpty()\n    public readonly pseudo: string;\n\n    @IsEmail()\n    @IsNotEmpty()\n    public readonly email: string;\n\n    @IsString()\n    @IsNotEmpty()\n    public password: string;\n\n    @IsString()\n    @IsOptional()\n    public socket_id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventGateway.html":{"url":"classes/EventGateway.html","title":"class - EventGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateways/event.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                changeRoomMode\n                            \n                            \n                                    Public\n                                    Async\n                                joinRoom\n                            \n                            \n                                    Public\n                                    Async\n                                launchGame\n                            \n                            \n                                    Public\n                                newResult\n                            \n                            \n                                    Public\n                                newTextDelete\n                            \n                            \n                                    Public\n                                newTextInsert\n                            \n                            \n                                    Public\n                                nextExercise\n                            \n                            \n                                    Public\n                                onTab\n                            \n                            \n                                    Public\n                                userCursorChange\n                            \n                            \n                                    Public\n                                    Async\n                                userJoinsRoom\n                            \n                            \n                                    Public\n                                    Async\n                                userJoinsTeam\n                            \n                            \n                                    Public\n                                    Async\n                                userSendPseudo\n                            \n                            \n                                    Public\n                                    Async\n                                validateTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_roomService: RoomService, _teamService: TeamService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/gateways/event.gateway.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _roomService\n                                                  \n                                                        \n                                                                        RoomService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gateways/event.gateway.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        changeRoomMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeRoomMode(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('changeRoomMode')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        joinRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    joinRoom(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('joinRoom')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        launchGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    launchGame(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('launchGame')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newResult\n                        \n                    \n                \n            \n            \n                \n                    \n                    newResult(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('newResult')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newTextDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    newTextDelete(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('newTextDelete')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        newTextInsert\n                        \n                    \n                \n            \n            \n                \n                    \n                    newTextInsert(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('newTextInsert')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nextExercise\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextExercise(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('nextExercise')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:168\n                \n            \n\n\n            \n                \n                    When next exercice is reached\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onTab\n                        \n                    \n                \n            \n            \n                \n                    \n                    onTab(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('onTab')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userCursorChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    userCursorChange(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('userCursorChange')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        userJoinsRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    userJoinsRoom(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('userJoinsRoom')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        userJoinsTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    userJoinsTeam(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('userJoinsTeam')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        userSendPseudo\n                        \n                    \n                \n            \n            \n                \n                    \n                    userSendPseudo(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('userSendPseudo')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateTeams\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateTeams(client: Socket, body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('validateTeams')\n                \n            \n\n            \n                \n                    Defined in src/gateways/event.gateway.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserService } from './../user/service/user.service';\nimport { TeamService } from './../team/service/team.service';\nimport { RoomService } from 'src/room/service/room.service';\nimport {\n  ConnectedSocket,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  MessageBody\n} from '@nestjs/websockets';\nimport { Socket, Server } from 'socket.io';\n\n@WebSocketGateway({ cors: true })\nexport class EventGateway {\n\n  @WebSocketServer() server: Server;\n\n  constructor(\n    private readonly _roomService: RoomService,\n    private readonly _teamService: TeamService,\n    private readonly _userService: UserService,\n  ) {}\n\n  @SubscribeMessage('joinRoom')\n  public async joinRoom(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    client.join(body.pin);\n  }\n\n  @SubscribeMessage('userSendPseudo')\n  public async userSendPseudo(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    const room = await this._roomService.getRoomDetailsByPin(body.pin);\n\n    client.broadcast.to(body.pin).emit('userSendPseudo', room);\n  }\n  \n  @SubscribeMessage('userJoinsRoom')\n  public async userJoinsRoom(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    const room = await this._roomService.getRoomDetailsByPin(body.pin);\n\n    client.join(body.pin);\n    client.broadcast.to(body.pin).emit('userJoinsRoom', room);\n  }\n\n  @SubscribeMessage('changeRoomMode')\n  public async changeRoomMode(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    const room = await this._roomService.getRoomDetailsByPin(body.pin);\n\n    this.server.sockets.in(body.pin).emit('changeRoomMode', room);\n  }\n\n  @SubscribeMessage('userJoinsTeam')\n  public async userJoinsTeam(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    const room = await this._roomService.getRoomDetailsByPin(body.pin);\n\n    this.server.sockets.in(body.pin).emit('userJoinsTeam', room)\n  }\n\n  @SubscribeMessage('launchGame')\n  public async launchGame(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    // Get room\n    const room = await this._roomService.getRoomDetailsByPin(body.pin);\n\n    // Check room not already started\n    if(room.has_started) {\n      return { error: \"Room has already started\" }\n    }\n\n    // Check room mode is set\n    if(!room.mode) {\n      return { error: \"Room mode not set\" }\n    }\n\n    if(room.users.length  {\n        await this._userService.updateUserTeam(user.id, teams[0]);\n      })\n    }\n\n    // Update room has_started\n    this._roomService.changeHasStarted(room.id, true);\n\n    this.server.sockets.in(body.pin).emit('launchGame', room);\n  }\n\n  @SubscribeMessage('validateTeams')\n  public async validateTeams(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    // Get room\n    const room = await this._roomService.getRoomDetailsByPin(body.pin);\n\n    // Check not empty team\n    if(!room.teams[0].users?.length || !room.teams[1].users?.length) {\n      return { error: \"A team is empty\" }\n    }\n\n    this.server.sockets.in(body.pin).emit('validateTeams', room);\n  }\n\n  @SubscribeMessage('userCursorChange')\n  public userCursorChange(@ConnectedSocket() client: Socket, @MessageBody() body) {\n    client.broadcast.to(body.pin).emit('userCursorChange', {\n      user: body.user,\n      position: body.position\n    });\n  }\n\n  @SubscribeMessage('newTextInsert')\n  public newTextInsert(@ConnectedSocket() client: Socket, @MessageBody() body) {\n    client.to(body.pin).emit('newTextInsert', body);\n  }\n\n  @SubscribeMessage('newTextDelete')\n  public newTextDelete(@ConnectedSocket() client: Socket, @MessageBody() body) {\n    client.to(body.pin).emit('newTextDelete', body);\n  }\n\n  @SubscribeMessage('onTab')\n  public onTab(@ConnectedSocket() client: Socket, @MessageBody() body) {\n    client.to(body.pin).emit('onTab', body);\n  }\n\n  @SubscribeMessage('newResult')\n  public newResult(@ConnectedSocket() client: Socket, @MessageBody() body) {\n    this.server.sockets.in(body.pin).emit('newResult', body);\n  }\n\n  /**\n   * When next exercice is reached\n   *\n   * @param client\n   * @param body\n   */\n  @SubscribeMessage('nextExercise')\n  public nextExercise(@ConnectedSocket() client: Socket, @MessageBody() body)\n  {\n    client.to(body.pin).emit('opponentSuccess');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Game.html":{"url":"entities/Game.html","title":"entity - Game","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entity/game.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access\n                            \n                            \n                                created_at\n                            \n                            \n                                creator\n                            \n                            \n                                id\n                            \n                            \n                                language\n                            \n                            \n                                name\n                            \n                            \n                                slug\n                            \n                            \n                                total_to_win\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccessEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'creator_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total_to_win\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn} from \"typeorm\";\nimport {GameTypeEnum} from \"../enum/game-type.enum\";\nimport {AccessEnum} from \"../../room/enums/access.enum\";\nimport {LanguageEnum} from \"../enum/language.enum\";\nimport {User} from \"../../user/entity/user.entity\";\n\n@Entity()\nexport class Game {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    slug: string;\n\n    @OneToOne(() => User)\n    @JoinColumn({ name: 'creator_id' })\n    creator: number;\n\n    @Column()\n    name: string;\n\n    @Column()\n    type: GameTypeEnum;\n\n    @Column()\n    total_to_win: number;\n\n    @Column()\n    access: AccessEnum;\n\n    @Column()\n    language: LanguageEnum;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    created_at: string;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    updated_at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/controller/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('game')\nexport class GameController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameDto.html":{"url":"classes/GameDto.html","title":"class - GameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entity/game.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                access\n                            \n                            \n                                    Readonly\n                                creator_id\n                            \n                            \n                                    Readonly\n                                language\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                slug\n                            \n                            \n                                    Readonly\n                                total_to_win\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccessEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        creator_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        total_to_win\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entity/game.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {GameTypeEnum} from \"../enum/game-type.enum\";\nimport {AccessEnum} from \"../../room/enums/access.enum\";\nimport {LanguageEnum} from \"../enum/language.enum\";\n\nexport class GameDto {\n    readonly slug: string;\n    readonly creator_id: number;\n    readonly name: string;\n    readonly type: GameTypeEnum;\n    readonly total_to_win: number;\n    readonly access: AccessEnum;\n    readonly language: LanguageEnum;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {GameController} from './controller/game.controller';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {Game} from \"./entity/game.entity\";\nimport {GameRepository} from \"./repository/game.repository\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Game, GameRepository])],\n  exports: [TypeOrmModule],\n  controllers: [GameController]\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameRepository.html":{"url":"classes/GameRepository.html","title":"class - GameRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/repository/game.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createGame\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/game/repository/game.repository.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {EntityRepository, Repository} from \"typeorm\";\nimport {Game} from \"../entity/game.entity\";\nimport {GameDto} from \"../entity/game.dto\";\n\n@EntityRepository(Game)\nexport class GameRepository extends Repository {\n    createGame = async (gameDto: GameDto) => {\n        return await this.save(gameDto);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/HistoricGame.html":{"url":"entities/HistoricGame.html","title":"entity - HistoricGame","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  HistoricGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/historic_game/entity/historic_game.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                finished_at\n                            \n                            \n                                id\n                            \n                            \n                                result\n                            \n                            \n                                room_name\n                            \n                            \n                                slug\n                            \n                            \n                                started_at\n                            \n                            \n                                team_name\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        started_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from './../../user/entity/user.entity';\nimport {Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn} from \"typeorm\";\n\n@Entity()\nexport class HistoricGame {\n    @PrimaryGeneratedColumn()\n    id: string;\n\n    @Column()\n    slug: string;\n\n    @OneToOne(() => User)\n    @JoinColumn({ name: 'user_id' })\n    user: number;\n\n    @Column()\n    room_name: string;\n\n    @Column()\n    team_name: string;\n\n    @Column()\n    result: string;\n\n    @Column({ type: \"timestamp\" })\n    started_at: string;\n\n    @Column({ type: \"timestamp\" })\n    finished_at: string;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    created_at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HistoricGameDto.html":{"url":"classes/HistoricGameDto.html","title":"class - HistoricGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HistoricGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/historic_game/entity/historic_game.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                finished_at\n                            \n                            \n                                    Readonly\n                                result\n                            \n                            \n                                    Readonly\n                                room_name\n                            \n                            \n                                    Readonly\n                                slug\n                            \n                            \n                                    Readonly\n                                started_at\n                            \n                            \n                                    Readonly\n                                team_name\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        finished_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        room_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        started_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        team_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/historic_game/entity/historic_game.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HistoricGameDto {\n    readonly slug: string;\n    readonly user: number;\n    readonly room_name: string;\n    readonly team_name: string;\n    readonly result: string;\n    readonly started_at: string;\n    readonly finished_at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HistoricGameModule.html":{"url":"modules/HistoricGameModule.html","title":"module - HistoricGameModule","body":"\n                   \n\n\n\n\n    Modules\n    HistoricGameModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/historic_game/historic_game.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {HistoricGame} from \"./entity/historic_game.entity\";\nimport {HistoricGameRepository} from \"./repository/historic_game.repository\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([HistoricGame, HistoricGameRepository])],\n    exports: [TypeOrmModule]\n})\nexport class HistoricGameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HistoricGameRepository.html":{"url":"classes/HistoricGameRepository.html","title":"class - HistoricGameRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HistoricGameRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/historic_game/repository/historic_game.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {EntityRepository, Repository} from \"typeorm\";\nimport {HistoricGame} from \"../entity/historic_game.entity\";\n\n@EntityRepository(HistoricGame)\nexport class HistoricGameRepository extends Repository {\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt-strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: PayloadInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt-strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PayloadInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstant } from '../constant/jwt-constant';\nimport { PayloadInterface } from \"../models/payload.interface\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwtConstant.jwtSecret,\n        });\n    }\n\n    public async validate(payload: PayloadInterface) {\n        return { id: payload.id, email: payload.email, slug: payload.slug };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/local.strategy.ts:24\n                \n            \n\n\n            \n                \n                    Not sure about this function but it seems to be linked by Passport when passing in the guard\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"../service/auth.service\";\nimport { Strategy } from \"passport-local\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private readonly _authService: AuthService\n    ) {\n        // The fields that must be passed are email and password\n        super({\n            usernameField: 'email',\n            passwordField: 'password'\n        });\n    }\n\n    /**\n     * Not sure about this function but it seems to be linked by Passport when passing in the guard\n     *\n     * @param email\n     * @param password\n     */\n    public async validate(email: string, password: string): Promise\n    {\n        const user = await this._authService.validateUser(email, password);\n\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoPrintException.html":{"url":"classes/NoPrintException.html","title":"class - NoPrintException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoPrintException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/NoPrintException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/NoPrintException.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoPrintException extends Error {\n    constructor(message?) {\n      super(message);\n  \n      this.message = message ?? \"N'oubliez pas d'afficher le résultat ! ;)\";\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadInterface.html":{"url":"interfaces/PayloadInterface.html","title":"interface - PayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PayloadInterface {\n    id: number;\n    slug: string;\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Room.html":{"url":"entities/Room.html","title":"entity - Room","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Room\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/entity/room.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access\n                            \n                            \n                                created_at\n                            \n                            \n                                game\n                            \n                            \n                                has_started\n                            \n                            \n                                id\n                            \n                            \n                                mode\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                pin\n                            \n                            \n                                slug\n                            \n                            \n                                status\n                            \n                            \n                                teams\n                            \n                            \n                                updated_at\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccessEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'game_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has_started\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'owner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, team => team.room)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, user => user.room)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/entity/room.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {Entity, Column, PrimaryGeneratedColumn, OneToOne, JoinColumn, OneToMany} from 'typeorm';\nimport {ModeEnum} from \"../enums/mode.enum\";\nimport {AccessEnum} from \"../enums/access.enum\";\nimport { StatusEnum } from '../enums/status.enum';\nimport {User} from \"../../user/entity/user.entity\";\nimport {Game} from \"../../game/entity/game.entity\";\nimport {Team} from \"../../team/entity/team.entity\";\n\n@Entity()\nexport class Room {\n    @PrimaryGeneratedColumn()\n    id: number;\n    \n    @Column()\n    slug: string\n\n    @OneToOne(() => User)\n    @JoinColumn({ name: 'owner_id' })\n    owner: User\n\n    @OneToOne(() => Game)\n    @JoinColumn({ name: 'game_id' })\n    game: Game\n\n    @OneToMany(() => Team, (team: Team) => team.room)\n    teams: Team[]\n\n    @OneToMany(() => User, (user: User) => user.room)\n    users: User[]\n\n    @Column({ nullable: true })\n    mode: ModeEnum;\n\n    @Column()\n    name: string;\n\n    @Column()\n    pin: string;\n\n    @Column()\n    access: AccessEnum;\n\n    @Column({ default: false })\n    has_started: boolean;\n\n    @Column()\n    status: StatusEnum;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    created_at: string;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    updated_at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomClass.html":{"url":"classes/RoomClass.html","title":"class - RoomClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/classes/room.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connectedUsers\n                            \n                            \n                                    Public\n                                pin\n                            \n                            \n                                    Public\n                                team_1\n                            \n                            \n                                    Public\n                                team_2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUserToTeam\n                            \n                            \n                                    Public\n                                connectUser\n                            \n                            \n                                    Public\n                                getConnectedUser\n                            \n                            \n                                    Public\n                                removeUserFromTeam\n                            \n                            \n                                    Public\n                                removeUserFromUnknownTeam\n                            \n                            \n                                    Public\n                                setUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(pin: string)\n                    \n                \n                        \n                            \n                                Defined in src/room/classes/room.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pin\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        connectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/room/classes/room.ts:9\n                        \n                    \n\n            \n                \n                    Variables\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/room/classes/room.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        team_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/room/classes/room.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        team_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/room/classes/room.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addUserToTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserToTeam(user: UserModel, team: string)\n                \n            \n\n\n            \n                \n                    Defined in src/room/classes/room.ts:57\n                \n            \n\n\n            \n                \n                    Add user in team\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectUser(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in src/room/classes/room.ts:23\n                \n            \n\n\n            \n                \n                    Connect a user to the room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedUser(socketId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/room/classes/room.ts:33\n                \n            \n\n\n            \n                \n                    Get a connected user with his socket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeUserFromTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserFromTeam(user: UserModel, team: TeamEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/room/classes/room.ts:96\n                \n            \n\n\n            \n                \n                    Retirer un utilisateur d'une équipe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                                TeamEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeUserFromUnknownTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserFromUnknownTeam(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in src/room/classes/room.ts:71\n                \n            \n\n\n            \n                \n                    Retirer un utilisateur d'une équipe inconnue\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; pin: string; error?: undefined; } | { error: string; message?: undefined; pin?: undefined; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUsername(socketId: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/room/classes/room.ts:43\n                \n            \n\n\n            \n                \n                    Set username of a connected user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserModel } from \"../../gateways/models/user.model\";\nimport { TeamEnum } from \"../enums/team.enum\";\n\nexport class RoomClass {\n\n    /**\n     * Variables\n     */\n    public connectedUsers: UserModel[] = [];\n    public team_1: UserModel[] = [];\n    public team_2: UserModel[] = [];\n    \n    public constructor(\n        public pin: string\n    ) {\n    }\n\n    /**\n     * Connect a user to the room\n     * \n     * @param user\n     */\n    public connectUser(user: UserModel) {\n        this.connectedUsers.push(user);\n    }\n\n    /**\n     * Get a connected user with his socket\n     * \n     * @param socketId \n     * @returns \n     */\n    public getConnectedUser(socketId: string) {\n        return this.connectedUsers.find(user => user.socketId == socketId);\n    }\n\n    /**\n     * Set username of a connected user\n     * \n     * @param socketId \n     * @param username \n     */\n    public setUsername(socketId: string, username: string) {\n        const user = this.getConnectedUser(socketId);\n\n        if(user) {\n            user.username = username;\n        }\n    }\n\n    /**\n     * Add user in team\n     * \n     * @param user \n     * @param team \n     */\n    public addUserToTeam(user: UserModel, team: string) {\n        // Remove user from latest team\n        this.removeUserFromUnknownTeam(user);\n        // Add to new team\n        team === TeamEnum.TEAM_1 ? this.team_1.push(user) : this.team_2.push(user);\n        this.connectedUsers[this.connectedUsers.findIndex(searchUser => searchUser == user)].team = team;\n    }\n\n    /**\n     * Retirer un utilisateur d'une équipe inconnue\n     * \n     * @param user \n     * @returns \n     */\n    public removeUserFromUnknownTeam(user: UserModel) {\n        let userIndex: number;\n\n        userIndex = this.team_1.findIndex((userToFind: UserModel) => userToFind.socketId === user.socketId);\n        if (userIndex !== -1) {\n            this.team_1.splice(userIndex, 1);\n            return {message: `Utilisateur retiré de l'équipe 1`, pin: this.pin};\n        }\n\n        userIndex = this.team_2.findIndex((userToFind: UserModel) => userToFind.socketId === user.socketId);\n        if (userIndex !== -1) {\n            this.team_2.splice(userIndex, 1);\n            return {message: `Utilisateur retiré de l'équipe 2`, pin: this.pin};\n        }\n\n        return {error: 'Utilisateur non trouvé dans cette room'};\n    }\n\n\n    /**\n     * Retirer un utilisateur d'une équipe\n     * \n     * @param user \n     * @param team \n     */\n    public removeUserFromTeam(user: UserModel, team: TeamEnum) {\n        if (user && team) {\n            // on récupère la team\n            const teamToRemove = team === TeamEnum.TEAM_1 ? this.team_1 : this.team_2;\n            const index = teamToRemove.findIndex((userToFind: UserModel) => userToFind === user)\n            \n            if (index !== -1) {\n                teamToRemove.splice(index, 1);\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomController.html":{"url":"controllers/RoomController.html","title":"controller - RoomController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/controller/room.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                room\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createRoom\n                            \n                            \n                                    Public\n                                    Async\n                                createRoomWithTeams\n                            \n                            \n                                    Public\n                                deleteRoom\n                            \n                            \n                                    Public\n                                getRoomById\n                            \n                            \n                                    Public\n                                getRoomDetailsByPin\n                            \n                            \n                                    Public\n                                    Async\n                                updateMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoom(createRoomDto: CreateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/room/controller/room.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createRoomWithTeams\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoomWithTeams(createRoomDto: CreateRoomDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/with-teams')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/room/controller/room.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRoom(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/room/controller/room.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRoomById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/room/controller/room.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRoomDetailsByPin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomDetailsByPin(pin: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pin/:pin')\n                \n            \n\n            \n                \n                    Defined in src/room/controller/room.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMode(id: number, updateRoomModeDto: UpdateRoomModeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/mode')\n                \n            \n\n            \n                \n                    Defined in src/room/controller/room.controller.ts:86\n                \n            \n\n\n            \n                \n                    Update room mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomModeDto\n                                    \n                                                UpdateRoomModeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { UpdateRoomModeDto } from './../dto/update-room-mode';\nimport { TeamService } from './../../team/service/team.service';\nimport { UserService } from '../../user/service/user.service';\nimport { CreateRoomDto } from '../dto/create-room.dto';\nimport { RoomService } from '../service/room.service';\nimport {\n    Controller,\n    Post,\n    UsePipes,\n    ValidationPipe,\n    Body,\n    Param,\n    Get,\n    Delete,\n    Patch\n} from '@nestjs/common';\nimport { Room } from \"../entity/room.entity\";\n\n@Controller('room')\nexport class RoomController {\n\n    constructor(\n        private readonly _roomService: RoomService,\n        private readonly _userService: UserService,\n        private readonly _teamService: TeamService\n    ) {}\n\n    @Get(':id')\n    public getRoomById(@Param('id') id: number): Promise\n    {\n        return this._roomService.getRoomById(id);\n    }\n\n    @Get('pin/:pin')\n    public getRoomDetailsByPin(@Param('pin') pin: string): Promise\n    {\n        return this._roomService.getRoomDetailsByPin(pin);\n    }\n\n    @Post()\n    @UsePipes(new ValidationPipe())\n    public async createRoom(@Body() createRoomDto: CreateRoomDto): Promise\n    {\n        // Create room\n        const room = await this._roomService.createRoom(createRoomDto);\n\n        // Update user room\n        await this._userService.updateUserRoom(room.owner.id, room);\n\n        return room;\n    }\n\n    @Post('/with-teams')\n    @UsePipes(new ValidationPipe())\n    public async createRoomWithTeams(@Body() createRoomDto: CreateRoomDto): Promise\n    {\n        // Create room\n        const room = await this._roomService.createRoom(createRoomDto);\n\n        // Create teams\n        const teams = await this._teamService.createTeams([\n            {\n                room: room.id,\n                name: 'Ixion'\n            },\n            {\n                room: room.id,\n                name: 'Météion'\n            }\n        ]);\n        room.teams = teams;\n\n        // Update user room\n        await this._userService.updateUserRoom(room.owner.id, room);\n\n        return room;\n    }\n\n    /**\n     * Update room mode\n     *\n     * @param id\n     * @param updateRoomMode\n     */\n     @Patch(':id/mode')\n     public async updateMode(@Param('id') id: number, @Body() updateRoomModeDto: UpdateRoomModeDto)\n     {\n         return this._roomService.updateRoomMode(id, updateRoomModeDto);\n     }\n\n    @Delete('/:id')\n    public deleteRoom(@Param('id') id: number): Promise {\n        return this._roomService.deleteRoom(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomModule.html":{"url":"modules/RoomModule.html","title":"module - RoomModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoomModule\n\n\n\ncluster_RoomModule_providers\n\n\n\ncluster_RoomModule_exports\n\n\n\n\nRoomService \n\nRoomService \n\n\n\nRoomModule\n\nRoomModule\n\nRoomService  -->\n\nRoomModule->RoomService \n\n\n\n\n\nRoomService\n\nRoomService\n\nRoomModule -->\n\nRoomService->RoomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/room/room.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoomService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoomService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TeamModule } from './../team/team.module';\nimport {forwardRef, Module} from '@nestjs/common';\nimport { RoomController } from './controller/room.controller';\nimport { RoomService } from './service/room.service';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport { Room } from \"./entity/room.entity\";\nimport { RoomRepository } from \"./repository/room.repository\";\nimport { UserModule } from \"../user/user.module\";\n\n@Module({\n  imports: [\n      TypeOrmModule.forFeature([Room, RoomRepository]),\n      forwardRef(() => UserModule),\n      forwardRef(() => TeamModule),\n  ],\n  exports: [\n      TypeOrmModule,\n      RoomService\n  ],\n  controllers: [RoomController],\n  providers: [RoomService]\n})\nexport class RoomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomRepository.html":{"url":"classes/RoomRepository.html","title":"class - RoomRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/repository/room.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createRoom\n                            \n                            \n                                    Public\n                                getAllRoomInformation\n                            \n                            \n                                    Public\n                                    Async\n                                updateRoomMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoom(createRoomDto: CreateRoomDto, pin: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/room/repository/room.repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllRoomInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllRoomInformation(roomPin: string)\n                \n            \n\n\n            \n                \n                    Defined in src/room/repository/room.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomPin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateRoomMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoomMode(id: number, updateRoomModeDto: UpdateRoomModeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/room/repository/room.repository.ts:46\n                \n            \n\n\n            \n                \n                    Update room mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomModeDto\n                                    \n                                                UpdateRoomModeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateRoomModeDto } from './../dto/update-room-mode';\nimport { AccessEnum } from '../enums/access.enum';\nimport { StatusEnum } from '../enums/status.enum';\nimport { uuid } from 'uuidv4';\nimport { CreateRoomDto } from '../dto/create-room.dto';\nimport { EntityRepository, Repository, createQueryBuilder } from \"typeorm\";\nimport { Room } from \"../entity/room.entity\";\n\n@EntityRepository(Room)\nexport class RoomRepository extends Repository {\n\n    public getAllRoomInformation (roomPin: string)\n    {\n        return createQueryBuilder('room', 'r')\n            .innerJoinAndSelect('r.team', 't')\n            .leftJoinAndSelect('t.user', 'u')\n            .where('r.pin = :pin', {pin: roomPin})\n            .getOne();\n    }\n    \n    public async createRoom(createRoomDto: CreateRoomDto, pin: string, name: string): Promise\n    {\n        const { owner_id } = createRoomDto;\n\n        const room = this.create({\n            slug: uuid(),\n            pin,\n            name,\n            owner: {\n                id: owner_id\n            },\n            access: AccessEnum.PRIVATE,\n            status: StatusEnum.ON\n        });\n\n        await this.save(room);\n        return room;\n    }\n\n    /**\n     * Update room mode\n     * \n     * @param id \n     * @param updateRoomMode\n     */\n    public async updateRoomMode(id: number, updateRoomModeDto: UpdateRoomModeDto)\n    {\n        const { mode } = updateRoomModeDto;\n\n        const room = this.create({\n            mode\n        });\n\n        return await this.update(id, room);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomService.html":{"url":"injectables/RoomService.html","title":"injectable - RoomService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/service/room.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __getRandomInt\n                            \n                            \n                                    Public\n                                    Async\n                                changeHasStarted\n                            \n                            \n                                    Public\n                                    Async\n                                changeOwner\n                            \n                            \n                                    Public\n                                    Async\n                                changeOwnerRandom\n                            \n                            \n                                    Public\n                                createRoom\n                            \n                            \n                                    Public\n                                    Async\n                                deleteRoom\n                            \n                            \n                                    Private\n                                generatePin\n                            \n                            \n                                    Public\n                                    Async\n                                getRoomById\n                            \n                            \n                                    Public\n                                    Async\n                                getRoomDetailsByPin\n                            \n                            \n                                    Public\n                                getRoomsInformation\n                            \n                            \n                                    Public\n                                    Async\n                                updateRoomMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_roomRepository: RoomRepository)\n                    \n                \n                        \n                            \n                                Defined in src/room/service/room.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _roomRepository\n                                                  \n                                                        \n                                                                        RoomRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __getRandomInt\n                        \n                    \n                \n            \n            \n                \n                    \n                    __getRandomInt(max: number)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:127\n                \n            \n\n\n            \n                \n                    Get random integer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        changeHasStarted\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeHasStarted(room_id: number, has_started: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    has_started\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        changeOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeOwner(room_id: number, owner: User)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    owner\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        changeOwnerRandom\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeOwnerRandom(room_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRoom(createRoomDto: CreateRoomDto)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoomDto\n                                    \n                                                CreateRoomDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRoom(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePin\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePin()\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:107\n                \n            \n\n\n            \n                \n                    Generate new pin for room\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getRoomById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getRoomDetailsByPin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomDetailsByPin(pin: string)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pin\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRoomsInformation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomsInformation(query)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateRoomMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoomMode(id: number, updateRoomModeDto: UpdateRoomModeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/room/service/room.service.ts:82\n                \n            \n\n\n            \n                \n                    Update room mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoomModeDto\n                                    \n                                                UpdateRoomModeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateRoomModeDto } from './../dto/update-room-mode';\nimport { CreateRoomDto } from '../dto/create-room.dto';\nimport { User } from '../../user/entity/user.entity';\nimport { Room } from '../entity/room.entity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { RoomRepository } from \"../repository/room.repository\";\n\n@Injectable()\nexport class RoomService {\n    constructor(\n        @InjectRepository(RoomRepository)\n        private readonly _roomRepository: RoomRepository\n    ) {\n    }\n\n    public async getRoomById(id: number): Promise\n    {\n        const room = await this._roomRepository.findOne({ \n            where: { id }\n        });\n\n        if(!room) {\n            throw new NotFoundException(`Room with ID \"${id}\" not found`);\n        }\n\n        return room;\n    }\n\n    public async getRoomDetailsByPin(pin: string): Promise\n    {\n        const room = await this._roomRepository.findOne({ \n            where: { pin }, \n            relations: ['teams', 'teams.users', 'users', 'owner'],\n        });\n\n        if(!room) {\n            throw new NotFoundException(`Room with ID \"${pin}\" not found`);\n        }\n\n        return room;\n    }\n\n    public createRoom(createRoomDto: CreateRoomDto): Promise\n    {\n        const pin = this.generatePin();\n        const name = 'Room ' + pin;\n\n        return this._roomRepository.createRoom(createRoomDto, pin, name);\n    }\n\n    public async changeOwner(room_id: number, owner: User)\n    {\n        this._roomRepository.update(room_id, { owner: owner });\n    }\n\n    public async changeHasStarted(room_id: number, has_started: boolean)\n    {\n        this._roomRepository.update(room_id, { has_started: has_started });\n    }\n\n    public async changeOwnerRandom(room_id: number)\n    {\n        const room = await this._roomRepository.findOne(room_id, {\n            relations: ['users']\n        });\n\n        if(!room.users?.length) {\n            await this._roomRepository.update(room.id, { owner: null });\n        } else {\n            const owner = room.users[Math.floor(Math.random() * room.users.length)];\n            await this._roomRepository.update(room.id, { owner: owner });\n        }\n    }\n\n    /**\n     * Update room mode\n     * \n     * @param id \n     * @param updateRoomMode\n     */\n    public async updateRoomMode(id: number, updateRoomModeDto: UpdateRoomModeDto)\n    {\n        return this._roomRepository.updateRoomMode(id, updateRoomModeDto);\n    }\n\n    public async deleteRoom(id: number): Promise\n    {\n        const result = await this._roomRepository.delete(id);\n\n        if(result.affected === 0) {\n            throw new NotFoundException(`Room with ID \"${id}\" not found`);\n        }\n    }\n\n    public getRoomsInformation(query) {\n        return this._roomRepository.find({\n            where: query,\n        }, )\n    }\n\n    /**\n     * Generate new pin for room\n     * \n     * @returns string\n     */\n     private generatePin(): string\n     {\n         const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n         let newPin = '';\n \n         newPin = '';\n         while (newPin.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Team.html":{"url":"entities/Team.html","title":"entity - Team","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/team/entity/team.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                points\n                            \n                            \n                                room\n                            \n                            \n                                slug\n                            \n                            \n                                updated_at\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, room => room.teams)@JoinColumn({name: 'room_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, user => user.team)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/team/entity/team.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {Column, Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn} from \"typeorm\";\nimport {Room} from \"../../room/entity/room.entity\";\nimport {User} from \"../../user/entity/user.entity\";\n\n@Entity()\nexport class Team {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    slug: string;\n\n    @ManyToOne(() => Room, (room: Room) => room.teams)\n    @JoinColumn({ name: 'room_id' })\n    room: Room;\n\n    @OneToMany(() => User, (user: User) => user.team)\n    users: User[];\n\n    @Column()\n    name: string;\n\n    @Column()\n    points: number;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    created_at: string;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\"})\n    updated_at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamController.html":{"url":"controllers/TeamController.html","title":"controller - TeamController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/team/controller/team.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoint(id: number, addPoint: AddPointDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/add-point')\n                \n            \n\n            \n                \n                    Defined in src/team/controller/team.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addPoint\n                                    \n                                                AddPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { TeamService } from '../service/team.service';\nimport { Body, Controller, Patch, Param } from '@nestjs/common';\nimport { TeamRepository } from \"../repository/team.repository\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { AddPointDto } from \"../dto/add-point.dto\";\n\n@Controller('team')\nexport class TeamController {\n\n    constructor(\n        @InjectRepository(TeamRepository) \n        private readonly _teamService: TeamService\n    ) {\n    }\n\n    @Patch(':id/add-point')\n    public addPoint(@Param('id') id: number, @Body() addPoint: AddPointDto) {\n        return this._teamService.addPoint(id, addPoint);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamModule.html":{"url":"modules/TeamModule.html","title":"module - TeamModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TeamModule\n\n\n\ncluster_TeamModule_exports\n\n\n\ncluster_TeamModule_providers\n\n\n\n\nTeamService \n\nTeamService \n\n\n\nTeamModule\n\nTeamModule\n\nTeamService  -->\n\nTeamModule->TeamService \n\n\n\n\n\nTeamService\n\nTeamService\n\nTeamModule -->\n\nTeamService->TeamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/team/team.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeamService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeamController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TeamService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TeamService } from './service/team.service';\nimport { TeamController } from './controller/team.controller';\nimport { Module } from '@nestjs/common';\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\nimport {Team} from \"./entity/team.entity\";\nimport {TeamRepository} from \"./repository/team.repository\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([Team, TeamRepository])],\n    exports: [TypeOrmModule, TeamService],\n    controllers: [TeamController],\n    providers: [TeamService]\n})\nexport class TeamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamRepository.html":{"url":"classes/TeamRepository.html","title":"class - TeamRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/team/repository/team.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addPoint\n                            \n                            \n                                    Public\n                                    Async\n                                createTeam\n                            \n                            \n                                    Public\n                                    Async\n                                createTeams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        addPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoint(id: number, addPointDto: AddPointDto)\n                \n            \n\n\n            \n                \n                    Defined in src/team/repository/team.repository.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addPointDto\n                                    \n                                                AddPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTeam(createTeamDto: CreateTeamDto)\n                \n            \n\n\n            \n                \n                    Defined in src/team/repository/team.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeamDto\n                                    \n                                                CreateTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createTeams\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTeams(createTeamDtoList: CreateTeamDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/team/repository/team.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeamDtoList\n                                    \n                                                CreateTeamDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from 'uuidv4';\nimport { CreateTeamDto } from '../dto/create-team.dto';\nimport { EntityRepository, Repository } from \"typeorm\";\nimport { Team } from \"../entity/team.entity\";\nimport { AddPointDto } from \"../dto/add-point.dto\";\n\n@EntityRepository(Team)\nexport class TeamRepository extends Repository {\n\n    public async createTeam(createTeamDto: CreateTeamDto): Promise\n    {\n        const { room, name } = createTeamDto;\n\n        const team = this.create({\n            slug: uuid(),\n            room,\n            name,\n            points: 0\n        });\n\n        await this.save(team);\n        return team;\n    }\n\n    public async createTeams(createTeamDtoList: CreateTeamDto[]): Promise\n    {\n        const queryRunner = this.manager.connection.createQueryRunner();\n        const teams: Team[] = [];\n\n        await queryRunner.connect();\n        await queryRunner.startTransaction();\n        try {\n            createTeamDtoList.forEach(async (createTeamDto: CreateTeamDto) => {\n                const { room, name } = createTeamDto;\n\n                const team = this.create({\n                    slug: uuid(),\n                    room,\n                    name,\n                    points: 0\n                });\n                teams.push(team);\n\n                await queryRunner.manager.save(team);\n            });\n        \n            await queryRunner.commitTransaction();\n        } catch (err) {\n            await queryRunner.rollbackTransaction();\n        } finally {\n            await queryRunner.release();\n            return teams;\n        }\n    }\n\n\n    public async addPoint(id: number, addPointDto: AddPointDto) {\n        const { points } = addPointDto;\n\n        const team = this.create({\n            points\n        });\n\n        return await this.update(id, team)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/team/service/team.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPoint\n                            \n                            \n                                    Public\n                                createTeams\n                            \n                            \n                                    Public\n                                    Async\n                                getTeamById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_teamRepository: TeamRepository)\n                    \n                \n                        \n                            \n                                Defined in src/team/service/team.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _teamRepository\n                                                  \n                                                        \n                                                                        TeamRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoint(id: number, addPointDto: AddPointDto)\n                \n            \n\n\n            \n                \n                    Defined in src/team/service/team.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addPointDto\n                                    \n                                                AddPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTeams\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTeams(createTeamDtoList: CreateTeamDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/team/service/team.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeamDtoList\n                                    \n                                                CreateTeamDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getTeamById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTeamById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/team/service/team.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Team } from './../entity/team.entity';\nimport { TeamRepository } from './../repository/team.repository';\nimport { CreateTeamDto } from './../dto/create-team.dto';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport {InjectRepository} from \"@nestjs/typeorm\";\nimport { AddPointDto } from \"../dto/add-point.dto\";\n\n@Injectable()\nexport class TeamService {\n    constructor(\n        @InjectRepository(TeamRepository)\n        private readonly _teamRepository: TeamRepository\n    ) {}\n\n    public createTeams(createTeamDtoList: CreateTeamDto[]): Promise\n    {\n        return this._teamRepository.createTeams(createTeamDtoList);\n    }\n\n    public async getTeamById(id: number): Promise\n    {\n        const team = await this._teamRepository.findOne({ \n            where: { id }\n        });\n\n        if(!team) {\n            throw new NotFoundException(`Team with ID \"${id}\" not found`);\n        }\n\n        return team;\n    }\n\n    public addPoint(id: number, addPointDto: AddPointDto) {\n        return this._teamRepository.addPoint(id, addPointDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoomModeDto.html":{"url":"classes/UpdateRoomModeDto.html","title":"class - UpdateRoomModeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoomModeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/dto/update-room-mode.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/dto/update-room-mode.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\nimport { ModeEnum } from \"../enums/mode.enum\";\n\nexport class UpdateRoomModeDto {\n    @IsString()\n    public readonly mode: ModeEnum;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPseudoDto.html":{"url":"classes/UpdateUserPseudoDto.html","title":"class - UpdateUserPseudoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPseudoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user-pseudo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                pseudo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pseudo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-pseudo.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class UpdateUserPseudoDto {\n    @IsString()\n    public readonly pseudo: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserSocketDto.html":{"url":"classes/UpdateUserSocketDto.html","title":"class - UpdateUserSocketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserSocketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user-socket.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                socket_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        socket_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-socket.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class UpdateUserSocketDto {\n    @IsString()\n    public readonly socket_id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserTeamDto.html":{"url":"classes/UpdateUserTeamDto.html","title":"class - UpdateUserTeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user-team.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                team_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        team_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/update-user-team.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber } from \"class-validator\";\n\nexport class UpdateUserTeamDto {\n    @IsNumber()\n    public readonly team_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                is_guest\n                            \n                            \n                                password\n                            \n                            \n                                pseudo\n                            \n                            \n                                room\n                            \n                            \n                                slug\n                            \n                            \n                                socket_id\n                            \n                            \n                                team\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_guest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pseudo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, room => room.users)@JoinColumn({name: 'room_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socket_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, team => team.users)@JoinColumn({name: 'team_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entity/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Room } from '../../room/entity/room.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, JoinColumn, ManyToOne } from 'typeorm';\nimport { Team } from \"../../team/entity/team.entity\";\n\n@Entity()\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    slug: string;\n\n    @ManyToOne(() => Room, (room: Room) => room.users)\n    @JoinColumn({ name: 'room_id' })\n    room: Room;\n\n    @ManyToOne(() => Team, (team: Team) => team.users)\n    @JoinColumn({ name: 'team_id' })\n    team: Team;\n\n    @Column()\n    socket_id: string;\n\n    @Column({ nullable: true })\n    pseudo: string;\n\n    @Column({ unique: true, nullable: true })\n    email: string;\n\n    @Column({ nullable: true })\n    password: string;\n\n    @Column({ default: true })\n    is_guest: boolean;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\" })\n    created_at: string;\n\n    @Column({ type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP\" })\n    updated_at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                connect\n                            \n                            \n                                    Public\n                                createGuestUser\n                            \n                            \n                                    Public\n                                    Async\n                                disconnect\n                            \n                            \n                                    Public\n                                getUserById\n                            \n                            \n                                    Public\n                                    Async\n                                joinTeam\n                            \n                            \n                                    Public\n                                    Async\n                                updatePseudo\n                            \n                            \n                                    Public\n                                    Async\n                                updateSocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(id: number, connectInRoomUserDto: ConnectInRoomUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/connect')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:78\n                \n            \n\n\n            \n                \n                    User joins room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    connectInRoomUserDto\n                                    \n                                                ConnectInRoomUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createGuestUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGuestUser(userGuestDto: CreateGuestUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('guest')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:42\n                \n            \n\n\n            \n                \n                    Create user guest when he connects on the landing page\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userGuestDto\n                                    \n                                                CreateGuestUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/disconnect')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:109\n                \n            \n\n\n            \n                \n                    Remove id room from the user when he disconnects from the room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:30\n                \n            \n\n\n            \n                \n                    Get user by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        joinTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    joinTeam(id: number, updateUserTeamDto: UpdateUserTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/join-team')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:96\n                \n            \n\n\n            \n                \n                    User joins team\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserTeamDto\n                                    \n                                                UpdateUserTeamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updatePseudo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePseudo(id: number, updateUserPseudoDto: UpdateUserPseudoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/pseudo')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:66\n                \n            \n\n\n            \n                \n                    Update user pseudo\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserPseudoDto\n                                    \n                                                UpdateUserPseudoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateSocket\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSocket(id: number, updateUserSocketDto: UpdateUserSocketDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/socket')\n                \n            \n\n            \n                \n                    Defined in src/user/controller/user.controller.ts:54\n                \n            \n\n\n            \n                \n                    Update user socket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserSocketDto\n                                    \n                                                UpdateUserSocketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { TeamService } from './../../team/service/team.service';\nimport { UpdateUserTeamDto } from '../dto/update-user-team.dto';\nimport { UpdateUserPseudoDto } from './../dto/update-user-pseudo.dto';\nimport { UpdateUserSocketDto } from '../dto/update-user-socket.dto';\nimport { User } from './../entity/user.entity';\nimport { RoomService } from 'src/room/service/room.service';\nimport { ValidationPipe, Get } from '@nestjs/common';\nimport { UsePipes } from '@nestjs/common';\nimport { Body, Controller, Post, Patch, Param } from '@nestjs/common';\nimport { CreateGuestUserDto } from \"../dto/create-guest-user.dto\";\nimport { UserService } from \"../service/user.service\";\nimport { ConnectInRoomUserDto } from \"../dto/connect-in-room-user.dto\";\n\n@Controller('user')\nexport class UserController {\n\n    constructor(\n        private readonly _userService: UserService,\n        private readonly _roomService: RoomService,\n        private readonly _teamService: TeamService\n    ) {\n    }\n\n    /**\n     * Get user by id\n     *\n     * @param id\n     */\n    @Get(':id')\n    public getUserById(@Param('id') id: number): Promise\n    {\n        return this._userService.getUserById(id);\n    }\n\n    /**\n     * Create user guest when he connects on the landing page\n     *\n     * @param userGuestDto\n     */\n    @Post('guest')\n    @UsePipes(new ValidationPipe({ transform: true }))\n    public createGuestUser(@Body() userGuestDto: CreateGuestUserDto)\n    {\n        return this._userService.createGuestUser(userGuestDto);\n    }\n\n    /**\n     * Update user socket\n     *\n     * @param id\n     * @param updateUserSocketDto\n     */\n    @Patch(':id/socket')\n    public async updateSocket(@Param('id') id: number, @Body() updateUserSocketDto: UpdateUserSocketDto)\n    {\n        return this._userService.updateUserSocket(id, updateUserSocketDto);\n    }\n\n    /**\n     * Update user pseudo\n     *\n     * @param id\n     * @param updateUserPseudoDto\n     */\n    @Patch(':id/pseudo')\n    public async updatePseudo(@Param('id') id: number, @Body() updateUserPseudoDto: UpdateUserPseudoDto)\n    {\n        return this._userService.updateUserPseudo(id, updateUserPseudoDto);\n    }\n\n    /**\n     * User joins room\n     *\n     * @param id\n     * @param connectInRoomUserDto\n     */\n    @Patch(':id/connect')\n    public async connect(@Param('id') id: number, @Body() connectInRoomUserDto: ConnectInRoomUserDto)\n    {\n        const room = await this._roomService.getRoomById(connectInRoomUserDto.room_id);\n\n        if(room.has_started) {\n            return { \"error\": \"Cette partie a déjà commencé\" }\n        }\n\n        return this._userService.updateUserForRoom(id, connectInRoomUserDto, room);\n    }\n\n    /**\n     * User joins team\n     *\n     * @param id\n     * @param updateUserDto\n     */\n    @Patch(':id/join-team')\n    public async joinTeam(@Param('id') id: number, @Body() updateUserTeamDto: UpdateUserTeamDto)\n    {\n        const team = await this._teamService.getTeamById(updateUserTeamDto.team_id);\n\n        return this._userService.updateUserTeam(id, team);\n    }\n\n    /**\n     * Remove id room from the user when he disconnects from the room\n     *\n     * @param id\n     */\n    @Patch(':id/disconnect')\n    public async disconnect(@Param('id') id: string)\n    {\n        // Get user\n        const user = await this._userService.getOne(id, {\n            relations: ['room', 'team']\n        });\n\n        if(!user) {\n            return false;\n        }\n\n        if(user.team) {\n            // Disconnect user from team\n            await this._userService.updateNullTeam(id);\n        }\n\n        if(user.room) {\n            // Disconnect user from room\n            await this._userService.updateNullRoom(id);\n\n            // Get room and update owner\n            await this._roomService.changeOwnerRandom(user.room.id);\n        }\n\n        return {\"success\": `Room id have been successfully removed from the user ${id}`}\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                is_guest\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                pseudo\n                            \n                            \n                                    Public\n                                    Readonly\n                                room\n                            \n                            \n                                    Public\n                                slug\n                            \n                            \n                                    Public\n                                    Readonly\n                                socket_id\n                            \n                            \n                                    Public\n                                    Readonly\n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        is_guest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pseudo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        room\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuid()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        socket_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { uuid } from \"uuidv4\";\nimport { IsBoolean, IsEmail, IsNotEmpty, IsString, IsOptional, IsNumber } from \"class-validator\";\n\nexport class UserDto {\n    @IsNotEmpty()\n    @IsString()\n    public slug: string = uuid();\n\n    @IsNumber()\n    @IsOptional()\n    public readonly room: number;\n\n    @IsNumber()\n    @IsOptional()\n    public readonly team: number;\n\n    @IsString()\n    @IsOptional()\n    public readonly socket_id: string;\n\n    @IsString()\n    @IsOptional()\n    public readonly pseudo: string;\n\n    @IsEmail()\n    @IsOptional()\n    public readonly email: string;\n\n    @IsString()\n    @IsOptional()\n    public password: string;\n\n    @IsBoolean()\n    public readonly is_guest: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateways/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            socketId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            team\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        socketId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        socketId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n    socketId: string;\n    username?: string;\n    team?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TeamModule } from './../team/team.module';\nimport { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"./entity/user.entity\";\nimport { UserService } from \"./service/user.service\";\nimport { UserController } from \"./controller/user.controller\";\nimport { UserRepository } from \"./repository/user.repository\";\nimport { RoomModule } from \"../room/room.module\";\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([User, UserRepository]),\n        forwardRef(() => RoomModule),\n        forwardRef(() => TeamModule),\n    ],\n    exports: [\n        TypeOrmModule,\n        UserService\n    ],\n    controllers: [UserController],\n    providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repository/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createGuestUser\n                            \n                            \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    Public\n                                    Async\n                                updateGuestIntoUser\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserForRoom\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserPseudo\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserSocket\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createGuestUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGuestUser(userGuestDto: CreateGuestUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:19\n                \n            \n\n\n            \n                \n                    Création d'un utilisateur guest (lors de sa connection sur la page home)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userGuestDto\n                                    \n                                                CreateGuestUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUser: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUser\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateGuestIntoUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGuestIntoUser(userDto: CreateUserDto, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:46\n                \n            \n\n\n            \n                \n                    Création d'un utilisateur entier\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserForRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserForRoom(id: number, connectInRoomUserDto: ConnectInRoomUserDto, room: Room)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:64\n                \n            \n\n\n            \n                \n                    Update a user when he connects into a room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    connectInRoomUserDto\n                                    \n                                                ConnectInRoomUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    room\n                                    \n                                                Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserPseudo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserPseudo(id: number, updateUserPseudoDto: UpdateUserPseudoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:101\n                \n            \n\n\n            \n                \n                    Update user socket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserPseudoDto\n                                    \n                                                UpdateUserPseudoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserSocket\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserSocket(id: number, updateUserSocketDto: UpdateUserSocketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/repository/user.repository.ts:83\n                \n            \n\n\n            \n                \n                    Update user socket\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserSocketDto\n                                    \n                                                UpdateUserSocketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserPseudoDto } from './../dto/update-user-pseudo.dto';\nimport { UpdateUserSocketDto } from '../dto/update-user-socket.dto';\nimport { Repository, EntityRepository } from \"typeorm\";\nimport { User } from \"../entity/user.entity\";\nimport { CreateGuestUserDto } from \"../dto/create-guest-user.dto\";\nimport { uuid } from \"uuidv4\";\nimport { Room } from \"../../room/entity/room.entity\";\nimport { ConnectInRoomUserDto } from \"../dto/connect-in-room-user.dto\";\nimport { CreateUserDto } from \"../dto/create-user.dto\";\n\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n\n    /**\n     * Création d'un utilisateur guest (lors de sa connection sur la page home)\n     *\n     * @param userGuestDto\n     */\n    public async createGuestUser(userGuestDto: CreateGuestUserDto)\n    {\n        const user = this.create({\n            slug: uuid(),\n            is_guest: true,\n            ...userGuestDto\n        });\n\n        return await this.save(user);\n    }\n\n    public async createUser(createUser: CreateUserDto) {\n        const user = this.create({\n            slug: uuid(),\n            is_guest: true,\n            ...createUser\n        });\n\n        return await this.save(user);\n    }\n\n    /**\n     * Création d'un utilisateur entier\n     *\n     * @param userDto\n     * @param id\n     */\n    public async updateGuestIntoUser(userDto: CreateUserDto, id: number)\n    {\n        const user = this.create({\n            is_guest: false,\n            ...userDto\n        });\n\n        return await this.update(id, user);\n    }\n\n\n    /**\n     * Update a user when he connects into a room\n     *\n     * @param id\n     * @param connectInRoomUserDto\n     * @param room\n     */\n    public async updateUserForRoom(id: number, connectInRoomUserDto: ConnectInRoomUserDto, room: Room)\n    {\n        const { pseudo } = connectInRoomUserDto;\n\n        const user = this.create({\n            room: room,\n            pseudo\n        });\n\n        return await this.update(id, user);\n    }\n\n    /**\n     * Update user socket\n     *\n     * @param id\n     * @param updateUserSocketDto\n     * @returns\n     */\n    public async updateUserSocket(id: number, updateUserSocketDto: UpdateUserSocketDto)\n    {\n        const { socket_id } = updateUserSocketDto;\n\n        const user = this.create({\n            socket_id\n        });\n\n        return await this.update(id, user);\n    }\n\n    /**\n     * Update user socket\n     * \n     * @param id \n     * @param updateUserPseudoDto \n     * @returns \n     */\n    public async updateUserPseudo(id: number, updateUserPseudoDto: UpdateUserPseudoDto)\n    {\n        const { pseudo } = updateUserPseudoDto;\n\n        const user = this.create({\n            pseudo\n        });\n\n        return await this.update(id, user);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createGuestUser\n                            \n                            \n                                    Public\n                                createUser\n                            \n                            \n                                    Public\n                                getOne\n                            \n                            \n                                    Public\n                                    Async\n                                getUserById\n                            \n                            \n                                    Public\n                                    Async\n                                getUserByParam\n                            \n                            \n                                    Public\n                                    Async\n                                removeUserById\n                            \n                            \n                                    Public\n                                updateGuestIntoUser\n                            \n                            \n                                    Public\n                                updateNullRoom\n                            \n                            \n                                    Public\n                                updateNullTeam\n                            \n                            \n                                    Public\n                                updateUserForRoom\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserPseudo\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserRoom\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserSocket\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/user/service/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createGuestUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGuestUser(userGuest: CreateGuestUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:87\n                \n            \n\n\n            \n                \n                    Create a guest user (When he connects on the landing page)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userGuest\n                                    \n                                                CreateGuestUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:97\n                \n            \n\n\n            \n                \n                    Create a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: string, options: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:131\n                \n            \n\n\n            \n                \n                    Return user with his room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getUserByParam\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByParam(param: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:41\n                \n            \n\n\n            \n                \n                    Return a user by parameter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserById(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:161\n                \n            \n\n\n            \n                \n                    Remove a user by his ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateGuestIntoUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGuestIntoUser(user: CreateUserDto, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:108\n                \n            \n\n\n            \n                \n                    Create a user when he registers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateNullRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNullRoom(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:141\n                \n            \n\n\n            \n                \n                    Remove room on user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateNullTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNullTeam(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:151\n                \n            \n\n\n            \n                \n                    Remove team on user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUserForRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserForRoom(userId: number, updateUserDto: ConnectInRoomUserDto, room: Room)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:120\n                \n            \n\n\n            \n                \n                    When a user join a Room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                ConnectInRoomUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    room\n                                    \n                                                Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserPseudo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserPseudo(id: number, updateUserPseudoDto: UpdateUserPseudoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserPseudoDto\n                                    \n                                                UpdateUserPseudoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserRoom(id: number, room: Room)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:52\n                \n            \n\n\n            \n                \n                    Add User to a Room\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    room\n                                    \n                                                Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserSocket\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserSocket(id: number, updateUserSocketDto: UpdateUserSocketDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserSocketDto\n                                    \n                                                UpdateUserSocketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateUserTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserTeam(id: number, team: Team)\n                \n            \n\n\n            \n                \n                    Defined in src/user/service/user.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                                Team\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Team } from '../../team/entity/team.entity';\nimport { UpdateUserPseudoDto } from '../dto/update-user-pseudo.dto';\nimport { UpdateUserSocketDto } from '../dto/update-user-socket.dto';\nimport { Room } from '../../room/entity/room.entity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { User } from \"../entity/user.entity\";\nimport { CreateGuestUserDto } from \"../dto/create-guest-user.dto\";\nimport { UserRepository } from \"../repository/user.repository\";\nimport { ConnectInRoomUserDto } from \"../dto/connect-in-room-user.dto\";\nimport { FindOneOptions } from \"typeorm\";\nimport { CreateUserDto } from \"../dto/create-user.dto\";\n\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectRepository(UserRepository)\n        private readonly _userRepository: UserRepository,\n    ) {\n    }\n\n    public async getUserById(id: number): Promise\n    {\n        const user = await this._userRepository.findOne({ \n            where: { id }, \n            relations: ['room', 'team']\n        });\n\n        if(!user) {\n            throw new NotFoundException(`User with ID \"${id}\" not found`);\n        }\n\n        return user;\n    }\n\n    /**\n     * Return a user by parameter\n     *\n     * @param param\n     */\n    public async getUserByParam(param: FindOneOptions)\n    {\n        return await this._userRepository.findOne(param);\n    }\n\n    /**\n     * Add User to a Room\n     *\n     * @param id\n     * @param room\n     */\n    public async updateUserRoom(id: number, room: Room): Promise\n    {\n        const user = await this.getUserById(id);\n\n        user.room = room;\n        await this._userRepository.save(user);\n\n        return user;\n    }\n\n    public async updateUserSocket(id: number, updateUserSocketDto: UpdateUserSocketDto)\n    {\n        return this._userRepository.updateUserSocket(id, updateUserSocketDto);\n    }\n\n    public async updateUserPseudo(id: number, updateUserPseudoDto: UpdateUserPseudoDto)\n    {\n        return this._userRepository.updateUserPseudo(id, updateUserPseudoDto);\n    }\n\n    public async updateUserTeam(id: number, team: Team)\n    {\n        const user = await this.getUserById(id);\n\n        user.team = team;\n        await this._userRepository.save(user);\n\n        return user;\n    }\n\n    /**\n     * Create a guest user (When he connects on the landing page)\n     *\n     * @param userGuest\n     */\n    public createGuestUser(userGuest: CreateGuestUserDto)\n    {\n        return this._userRepository.createGuestUser(userGuest);\n    }\n\n    /**\n     * Create a user\n     *\n     * @param user\n     */\n    public createUser(user: CreateUserDto)\n    {\n        return this._userRepository.createUser(user);\n    }\n\n    /**\n     * Create a user when he registers\n     *\n     * @param user\n     * @param id\n     */\n    public updateGuestIntoUser(user: CreateUserDto, id: number)\n    {\n        return this._userRepository.updateGuestIntoUser(user, id);\n    }\n\n    /**\n     * When a user join a Room\n     *\n     * @param userId\n     * @param updateUserDto\n     * @param room\n     */\n    public updateUserForRoom(userId: number, updateUserDto: ConnectInRoomUserDto, room: Room)\n    {\n        return this._userRepository.updateUserForRoom(userId, updateUserDto, room)\n    }\n\n    /**\n     * Return user with his room\n     *\n     * @param id\n     * @param options\n     */\n    public getOne(id: string, options: FindOneOptions)\n    {\n        return this._userRepository.findOne(id, options);\n    }\n\n    /**\n     * Remove room on user\n     *\n     * @param id\n     */\n    public updateNullRoom(id: string)\n    {\n        return this._userRepository.update(id, {room: null});\n    }\n\n    /**\n     * Remove team on user\n     *\n     * @param id\n     */\n    public updateNullTeam(id: string)\n    {\n        return this._userRepository.update(id, { team: null });\n    }\n\n    /**\n     * Remove a user by his ID\n     *\n     * @param user\n     */\n    public async removeUserById(user: User)\n    {\n        return this._userRepository.remove(user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/constant/jwt-constant.ts\n            \n            variable\n            jwtConstant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/payload.interface.ts\n            \n            interface\n            PayloadInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt-strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/exceptions/BadCodeException.ts\n            \n            class\n            BadCodeException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/BadResultException.ts\n            \n            class\n            BadResultException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/NoPrintException.ts\n            \n            class\n            NoPrintException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/controller/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/entity/game.dto.ts\n            \n            class\n            GameDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/game/entity/game.entity.ts\n            \n            entity\n            Game\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/repository/game.repository.ts\n            \n            class\n            GameRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/gateways/event.gateway.ts\n            \n            class\n            EventGateway\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/gateways/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/historic_game/entity/historic_game.dto.ts\n            \n            class\n            HistoricGameDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/historic_game/entity/historic_game.entity.ts\n            \n            entity\n            HistoricGame\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/historic_game/repository/historic_game.repository.ts\n            \n            class\n            HistoricGameRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migration/1653035270972-BaseMigration.ts\n            \n            class\n            BaseMigration1653035270972\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/room/classes/room.ts\n            \n            class\n            RoomClass\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/room/controller/room.controller.ts\n            \n            controller\n            RoomController\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/room/dto/create-room.dto.ts\n            \n            class\n            CreateRoomDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/room/dto/get-rooms-filter.dto.ts\n            \n            class\n            getRoomsFilterDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/room/dto/update-room-mode.ts\n            \n            class\n            UpdateRoomModeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/room/entity/room.entity.ts\n            \n            entity\n            Room\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/room/repository/room.repository.ts\n            \n            class\n            RoomRepository\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/room/service/room.service.ts\n            \n            injectable\n            RoomService\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/shared/functions/hash-password.ts\n            \n            variable\n            hashPassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/team/controller/team.controller.ts\n            \n            controller\n            TeamController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/team/dto/add-point.dto.ts\n            \n            class\n            AddPointDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/team/dto/create-team.dto.ts\n            \n            class\n            CreateTeamDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/team/entity/team.entity.ts\n            \n            entity\n            Team\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/team/repository/team.repository.ts\n            \n            class\n            TeamRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/team/service/team.service.ts\n            \n            injectable\n            TeamService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/user/dto/connect-in-room-user.dto.ts\n            \n            class\n            ConnectInRoomUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-guest-user.dto.ts\n            \n            class\n            CreateGuestUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user-pseudo.dto.ts\n            \n            class\n            UpdateUserPseudoDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-user-socket.dto.ts\n            \n            class\n            UpdateUserSocketDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/update-user-team.dto.ts\n            \n            class\n            UpdateUserTeamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/entity/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/repository/user.repository.ts\n            \n            class\n            UserRepository\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                62 %\n                (10/16)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/platform-socket.io : ^8.1.2\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @nestjs/websockets : ^8.1.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.0\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            socket.io-redis : ^6.1.1\n        \n            ts-node : ^10.0.0\n        \n            tsconfig-paths : ^3.10.1\n        \n            uuidv4 : ^6.2.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessEnum   (src/.../access.enum.ts)\n                        \n                        \n                            GameTypeEnum   (src/.../game-type.enum.ts)\n                        \n                        \n                            LanguageEnum   (src/.../language.enum.ts)\n                        \n                        \n                            ModeEnum   (src/.../mode.enum.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            TeamEnum   (src/.../team.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/room/enums/access.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AccessEnum\n                    \n                \n                        \n                            \n                                 PRIVATE\n                            \n                        \n                        \n                            \n                                Value : private\n                            \n                        \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : public\n                            \n                        \n            \n        \n\n    src/game/enum/game-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GameTypeEnum\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n    src/game/enum/language.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LanguageEnum\n                    \n                \n            \n        \n\n    src/room/enums/mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ModeEnum\n                    \n                \n                        \n                            \n                                 SOLO\n                            \n                        \n                        \n                            \n                                Value : solo\n                            \n                        \n                        \n                            \n                                 MULTI\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n                        \n                            \n                                 VS\n                            \n                        \n                        \n                            \n                                Value : vs\n                            \n                        \n            \n        \n\n    src/room/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ON\n                            \n                        \n                        \n                            \n                                Value : on\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : off\n                            \n                        \n            \n        \n\n    src/room/enums/team.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TeamEnum\n                    \n                \n                        \n                            \n                                 TEAM_1\n                            \n                        \n                        \n                            \n                                Value : team_1\n                            \n                        \n                        \n                            \n                                 TEAM_2\n                            \n                        \n                        \n                            \n                                Value : team_2\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/getRoomsFilterDto.html":{"url":"classes/getRoomsFilterDto.html","title":"class - getRoomsFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  getRoomsFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room/dto/get-rooms-filter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                pin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/room/dto/get-rooms-filter.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class getRoomsFilterDto {\n\n    @IsOptional()\n    @IsString()\n    pin?: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HistoricGameModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RoomModule\n\n\n\ncluster_RoomModule_exports\n\n\n\ncluster_RoomModule_providers\n\n\n\ncluster_TeamModule\n\n\n\ncluster_TeamModule_exports\n\n\n\ncluster_TeamModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nRoomModule\n\nRoomModule\n\nAppModule -->\n\nRoomModule->AppModule\n\n\n\n\n\nRoomService \n\nRoomService \n\nRoomService  -->\n\nRoomModule->RoomService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTeamModule\n\nTeamModule\n\nAppModule -->\n\nTeamModule->AppModule\n\n\n\n\n\nTeamService \n\nTeamService \n\nTeamService  -->\n\nTeamModule->TeamService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRoomService\n\nRoomService\n\nRoomModule -->\n\nRoomService->RoomModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nTeamModule -->\n\nTeamService->TeamModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            hashPassword   (src/.../hash-password.ts)\n                        \n                        \n                            jwtConstant   (src/.../jwt-constant.ts)\n                        \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/functions/hash-password.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n    return await bcrypt.hash(password, parseInt(process.env.BCRYPT_SALT, 10));\n}\n                    \n                \n\n            \n                \n                    Hash a given password\n\n                \n            \n\n        \n    \n\n    src/auth/constant/jwt-constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    jwtSecret: process.env.JWT_SECRET,\n    jwtTime: '36000s'\n}\n                    \n                \n\n\n        \n    \n\n    src/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeOrmConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'postgres',\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    username: process.env.DATABASE_USER,\n    password: process.env.DATABASE_PASSWORD,\n    database: process.env.DATABASE_NAME,\n    entities: [__dirname + '/**/*.entity.ts', __dirname + '/**/*.entity.js'],\n    migrationsRun: false,\n    logging: true,\n    migrationsTableName: \"migration\",\n    migrations: [__dirname + '/migration/**/*.ts', __dirname + '/migration/**/*.js'],\n    synchronize: false,\n    cli: {\n      migrationsDir: 'src/migration'\n    },\n    autoLoadEntities: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
